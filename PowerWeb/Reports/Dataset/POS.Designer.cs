//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PowerWeb.Reports.Dataset {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("POS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class POS : global::System.Data.DataSet {
        
        private StockOnHandSummary_ListDataTable tableStockOnHandSummary_List;
        
        private StockOnHandSummary_CurrentDateDataTable tableStockOnHandSummary_CurrentDate;
        
        private StockOnHandSummary_LocationDataTable tableStockOnHandSummary_Location;
        
        private SalesSummaryDaily_ListDataTable tableSalesSummaryDaily_List;
        
        private SalesSummaryDaily_PaymentTypeDataTable tableSalesSummaryDaily_PaymentType;
        
        private SalesSummaryDaily_SalesDateDataTable tableSalesSummaryDaily_SalesDate;
        
        private SalesSummaryDaily_OutletDataTable tableSalesSummaryDaily_Outlet;
        
        private PreOrderSummaryDaily_OrderDateDataTable tablePreOrderSummaryDaily_OrderDate;
        
        private PreOrderSummaryDaily_OutletDataTable tablePreOrderSummaryDaily_Outlet;
        
        private PreOrderSummaryDaily_ListDataTable tablePreOrderSummaryDaily_List;
        
        private PreOrderSummaryDaily_PaymentDataTable tablePreOrderSummaryDaily_Payment;
        
        private PreOrder_ListDataTable tablePreOrder_List;
        
        private DataTable1DataTable tableDataTable1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public POS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected POS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["StockOnHandSummary_List"] != null)) {
                    base.Tables.Add(new StockOnHandSummary_ListDataTable(ds.Tables["StockOnHandSummary_List"]));
                }
                if ((ds.Tables["StockOnHandSummary_CurrentDate"] != null)) {
                    base.Tables.Add(new StockOnHandSummary_CurrentDateDataTable(ds.Tables["StockOnHandSummary_CurrentDate"]));
                }
                if ((ds.Tables["StockOnHandSummary_Location"] != null)) {
                    base.Tables.Add(new StockOnHandSummary_LocationDataTable(ds.Tables["StockOnHandSummary_Location"]));
                }
                if ((ds.Tables["SalesSummaryDaily_List"] != null)) {
                    base.Tables.Add(new SalesSummaryDaily_ListDataTable(ds.Tables["SalesSummaryDaily_List"]));
                }
                if ((ds.Tables["SalesSummaryDaily_PaymentType"] != null)) {
                    base.Tables.Add(new SalesSummaryDaily_PaymentTypeDataTable(ds.Tables["SalesSummaryDaily_PaymentType"]));
                }
                if ((ds.Tables["SalesSummaryDaily_SalesDate"] != null)) {
                    base.Tables.Add(new SalesSummaryDaily_SalesDateDataTable(ds.Tables["SalesSummaryDaily_SalesDate"]));
                }
                if ((ds.Tables["SalesSummaryDaily_Outlet"] != null)) {
                    base.Tables.Add(new SalesSummaryDaily_OutletDataTable(ds.Tables["SalesSummaryDaily_Outlet"]));
                }
                if ((ds.Tables["PreOrderSummaryDaily_OrderDate"] != null)) {
                    base.Tables.Add(new PreOrderSummaryDaily_OrderDateDataTable(ds.Tables["PreOrderSummaryDaily_OrderDate"]));
                }
                if ((ds.Tables["PreOrderSummaryDaily_Outlet"] != null)) {
                    base.Tables.Add(new PreOrderSummaryDaily_OutletDataTable(ds.Tables["PreOrderSummaryDaily_Outlet"]));
                }
                if ((ds.Tables["PreOrderSummaryDaily_List"] != null)) {
                    base.Tables.Add(new PreOrderSummaryDaily_ListDataTable(ds.Tables["PreOrderSummaryDaily_List"]));
                }
                if ((ds.Tables["PreOrderSummaryDaily_Payment"] != null)) {
                    base.Tables.Add(new PreOrderSummaryDaily_PaymentDataTable(ds.Tables["PreOrderSummaryDaily_Payment"]));
                }
                if ((ds.Tables["PreOrder_List"] != null)) {
                    base.Tables.Add(new PreOrder_ListDataTable(ds.Tables["PreOrder_List"]));
                }
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockOnHandSummary_ListDataTable StockOnHandSummary_List {
            get {
                return this.tableStockOnHandSummary_List;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockOnHandSummary_CurrentDateDataTable StockOnHandSummary_CurrentDate {
            get {
                return this.tableStockOnHandSummary_CurrentDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockOnHandSummary_LocationDataTable StockOnHandSummary_Location {
            get {
                return this.tableStockOnHandSummary_Location;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesSummaryDaily_ListDataTable SalesSummaryDaily_List {
            get {
                return this.tableSalesSummaryDaily_List;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesSummaryDaily_PaymentTypeDataTable SalesSummaryDaily_PaymentType {
            get {
                return this.tableSalesSummaryDaily_PaymentType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesSummaryDaily_SalesDateDataTable SalesSummaryDaily_SalesDate {
            get {
                return this.tableSalesSummaryDaily_SalesDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesSummaryDaily_OutletDataTable SalesSummaryDaily_Outlet {
            get {
                return this.tableSalesSummaryDaily_Outlet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PreOrderSummaryDaily_OrderDateDataTable PreOrderSummaryDaily_OrderDate {
            get {
                return this.tablePreOrderSummaryDaily_OrderDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PreOrderSummaryDaily_OutletDataTable PreOrderSummaryDaily_Outlet {
            get {
                return this.tablePreOrderSummaryDaily_Outlet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PreOrderSummaryDaily_ListDataTable PreOrderSummaryDaily_List {
            get {
                return this.tablePreOrderSummaryDaily_List;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PreOrderSummaryDaily_PaymentDataTable PreOrderSummaryDaily_Payment {
            get {
                return this.tablePreOrderSummaryDaily_Payment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PreOrder_ListDataTable PreOrder_List {
            get {
                return this.tablePreOrder_List;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            POS cln = ((POS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["StockOnHandSummary_List"] != null)) {
                    base.Tables.Add(new StockOnHandSummary_ListDataTable(ds.Tables["StockOnHandSummary_List"]));
                }
                if ((ds.Tables["StockOnHandSummary_CurrentDate"] != null)) {
                    base.Tables.Add(new StockOnHandSummary_CurrentDateDataTable(ds.Tables["StockOnHandSummary_CurrentDate"]));
                }
                if ((ds.Tables["StockOnHandSummary_Location"] != null)) {
                    base.Tables.Add(new StockOnHandSummary_LocationDataTable(ds.Tables["StockOnHandSummary_Location"]));
                }
                if ((ds.Tables["SalesSummaryDaily_List"] != null)) {
                    base.Tables.Add(new SalesSummaryDaily_ListDataTable(ds.Tables["SalesSummaryDaily_List"]));
                }
                if ((ds.Tables["SalesSummaryDaily_PaymentType"] != null)) {
                    base.Tables.Add(new SalesSummaryDaily_PaymentTypeDataTable(ds.Tables["SalesSummaryDaily_PaymentType"]));
                }
                if ((ds.Tables["SalesSummaryDaily_SalesDate"] != null)) {
                    base.Tables.Add(new SalesSummaryDaily_SalesDateDataTable(ds.Tables["SalesSummaryDaily_SalesDate"]));
                }
                if ((ds.Tables["SalesSummaryDaily_Outlet"] != null)) {
                    base.Tables.Add(new SalesSummaryDaily_OutletDataTable(ds.Tables["SalesSummaryDaily_Outlet"]));
                }
                if ((ds.Tables["PreOrderSummaryDaily_OrderDate"] != null)) {
                    base.Tables.Add(new PreOrderSummaryDaily_OrderDateDataTable(ds.Tables["PreOrderSummaryDaily_OrderDate"]));
                }
                if ((ds.Tables["PreOrderSummaryDaily_Outlet"] != null)) {
                    base.Tables.Add(new PreOrderSummaryDaily_OutletDataTable(ds.Tables["PreOrderSummaryDaily_Outlet"]));
                }
                if ((ds.Tables["PreOrderSummaryDaily_List"] != null)) {
                    base.Tables.Add(new PreOrderSummaryDaily_ListDataTable(ds.Tables["PreOrderSummaryDaily_List"]));
                }
                if ((ds.Tables["PreOrderSummaryDaily_Payment"] != null)) {
                    base.Tables.Add(new PreOrderSummaryDaily_PaymentDataTable(ds.Tables["PreOrderSummaryDaily_Payment"]));
                }
                if ((ds.Tables["PreOrder_List"] != null)) {
                    base.Tables.Add(new PreOrder_ListDataTable(ds.Tables["PreOrder_List"]));
                }
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableStockOnHandSummary_List = ((StockOnHandSummary_ListDataTable)(base.Tables["StockOnHandSummary_List"]));
            if ((initTable == true)) {
                if ((this.tableStockOnHandSummary_List != null)) {
                    this.tableStockOnHandSummary_List.InitVars();
                }
            }
            this.tableStockOnHandSummary_CurrentDate = ((StockOnHandSummary_CurrentDateDataTable)(base.Tables["StockOnHandSummary_CurrentDate"]));
            if ((initTable == true)) {
                if ((this.tableStockOnHandSummary_CurrentDate != null)) {
                    this.tableStockOnHandSummary_CurrentDate.InitVars();
                }
            }
            this.tableStockOnHandSummary_Location = ((StockOnHandSummary_LocationDataTable)(base.Tables["StockOnHandSummary_Location"]));
            if ((initTable == true)) {
                if ((this.tableStockOnHandSummary_Location != null)) {
                    this.tableStockOnHandSummary_Location.InitVars();
                }
            }
            this.tableSalesSummaryDaily_List = ((SalesSummaryDaily_ListDataTable)(base.Tables["SalesSummaryDaily_List"]));
            if ((initTable == true)) {
                if ((this.tableSalesSummaryDaily_List != null)) {
                    this.tableSalesSummaryDaily_List.InitVars();
                }
            }
            this.tableSalesSummaryDaily_PaymentType = ((SalesSummaryDaily_PaymentTypeDataTable)(base.Tables["SalesSummaryDaily_PaymentType"]));
            if ((initTable == true)) {
                if ((this.tableSalesSummaryDaily_PaymentType != null)) {
                    this.tableSalesSummaryDaily_PaymentType.InitVars();
                }
            }
            this.tableSalesSummaryDaily_SalesDate = ((SalesSummaryDaily_SalesDateDataTable)(base.Tables["SalesSummaryDaily_SalesDate"]));
            if ((initTable == true)) {
                if ((this.tableSalesSummaryDaily_SalesDate != null)) {
                    this.tableSalesSummaryDaily_SalesDate.InitVars();
                }
            }
            this.tableSalesSummaryDaily_Outlet = ((SalesSummaryDaily_OutletDataTable)(base.Tables["SalesSummaryDaily_Outlet"]));
            if ((initTable == true)) {
                if ((this.tableSalesSummaryDaily_Outlet != null)) {
                    this.tableSalesSummaryDaily_Outlet.InitVars();
                }
            }
            this.tablePreOrderSummaryDaily_OrderDate = ((PreOrderSummaryDaily_OrderDateDataTable)(base.Tables["PreOrderSummaryDaily_OrderDate"]));
            if ((initTable == true)) {
                if ((this.tablePreOrderSummaryDaily_OrderDate != null)) {
                    this.tablePreOrderSummaryDaily_OrderDate.InitVars();
                }
            }
            this.tablePreOrderSummaryDaily_Outlet = ((PreOrderSummaryDaily_OutletDataTable)(base.Tables["PreOrderSummaryDaily_Outlet"]));
            if ((initTable == true)) {
                if ((this.tablePreOrderSummaryDaily_Outlet != null)) {
                    this.tablePreOrderSummaryDaily_Outlet.InitVars();
                }
            }
            this.tablePreOrderSummaryDaily_List = ((PreOrderSummaryDaily_ListDataTable)(base.Tables["PreOrderSummaryDaily_List"]));
            if ((initTable == true)) {
                if ((this.tablePreOrderSummaryDaily_List != null)) {
                    this.tablePreOrderSummaryDaily_List.InitVars();
                }
            }
            this.tablePreOrderSummaryDaily_Payment = ((PreOrderSummaryDaily_PaymentDataTable)(base.Tables["PreOrderSummaryDaily_Payment"]));
            if ((initTable == true)) {
                if ((this.tablePreOrderSummaryDaily_Payment != null)) {
                    this.tablePreOrderSummaryDaily_Payment.InitVars();
                }
            }
            this.tablePreOrder_List = ((PreOrder_ListDataTable)(base.Tables["PreOrder_List"]));
            if ((initTable == true)) {
                if ((this.tablePreOrder_List != null)) {
                    this.tablePreOrder_List.InitVars();
                }
            }
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "POS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/POS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStockOnHandSummary_List = new StockOnHandSummary_ListDataTable();
            base.Tables.Add(this.tableStockOnHandSummary_List);
            this.tableStockOnHandSummary_CurrentDate = new StockOnHandSummary_CurrentDateDataTable();
            base.Tables.Add(this.tableStockOnHandSummary_CurrentDate);
            this.tableStockOnHandSummary_Location = new StockOnHandSummary_LocationDataTable();
            base.Tables.Add(this.tableStockOnHandSummary_Location);
            this.tableSalesSummaryDaily_List = new SalesSummaryDaily_ListDataTable();
            base.Tables.Add(this.tableSalesSummaryDaily_List);
            this.tableSalesSummaryDaily_PaymentType = new SalesSummaryDaily_PaymentTypeDataTable();
            base.Tables.Add(this.tableSalesSummaryDaily_PaymentType);
            this.tableSalesSummaryDaily_SalesDate = new SalesSummaryDaily_SalesDateDataTable();
            base.Tables.Add(this.tableSalesSummaryDaily_SalesDate);
            this.tableSalesSummaryDaily_Outlet = new SalesSummaryDaily_OutletDataTable();
            base.Tables.Add(this.tableSalesSummaryDaily_Outlet);
            this.tablePreOrderSummaryDaily_OrderDate = new PreOrderSummaryDaily_OrderDateDataTable();
            base.Tables.Add(this.tablePreOrderSummaryDaily_OrderDate);
            this.tablePreOrderSummaryDaily_Outlet = new PreOrderSummaryDaily_OutletDataTable();
            base.Tables.Add(this.tablePreOrderSummaryDaily_Outlet);
            this.tablePreOrderSummaryDaily_List = new PreOrderSummaryDaily_ListDataTable();
            base.Tables.Add(this.tablePreOrderSummaryDaily_List);
            this.tablePreOrderSummaryDaily_Payment = new PreOrderSummaryDaily_PaymentDataTable();
            base.Tables.Add(this.tablePreOrderSummaryDaily_Payment);
            this.tablePreOrder_List = new PreOrder_ListDataTable();
            base.Tables.Add(this.tablePreOrder_List);
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockOnHandSummary_List() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockOnHandSummary_CurrentDate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockOnHandSummary_Location() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesSummaryDaily_List() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesSummaryDaily_PaymentType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesSummaryDaily_SalesDate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesSummaryDaily_Outlet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePreOrderSummaryDaily_OrderDate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePreOrderSummaryDaily_Outlet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePreOrderSummaryDaily_List() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePreOrderSummaryDaily_Payment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePreOrder_List() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            POS ds = new POS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void StockOnHandSummary_ListRowChangeEventHandler(object sender, StockOnHandSummary_ListRowChangeEvent e);
        
        public delegate void StockOnHandSummary_CurrentDateRowChangeEventHandler(object sender, StockOnHandSummary_CurrentDateRowChangeEvent e);
        
        public delegate void StockOnHandSummary_LocationRowChangeEventHandler(object sender, StockOnHandSummary_LocationRowChangeEvent e);
        
        public delegate void SalesSummaryDaily_ListRowChangeEventHandler(object sender, SalesSummaryDaily_ListRowChangeEvent e);
        
        public delegate void SalesSummaryDaily_PaymentTypeRowChangeEventHandler(object sender, SalesSummaryDaily_PaymentTypeRowChangeEvent e);
        
        public delegate void SalesSummaryDaily_SalesDateRowChangeEventHandler(object sender, SalesSummaryDaily_SalesDateRowChangeEvent e);
        
        public delegate void SalesSummaryDaily_OutletRowChangeEventHandler(object sender, SalesSummaryDaily_OutletRowChangeEvent e);
        
        public delegate void PreOrderSummaryDaily_OrderDateRowChangeEventHandler(object sender, PreOrderSummaryDaily_OrderDateRowChangeEvent e);
        
        public delegate void PreOrderSummaryDaily_OutletRowChangeEventHandler(object sender, PreOrderSummaryDaily_OutletRowChangeEvent e);
        
        public delegate void PreOrderSummaryDaily_ListRowChangeEventHandler(object sender, PreOrderSummaryDaily_ListRowChangeEvent e);
        
        public delegate void PreOrderSummaryDaily_PaymentRowChangeEventHandler(object sender, PreOrderSummaryDaily_PaymentRowChangeEvent e);
        
        public delegate void PreOrder_ListRowChangeEventHandler(object sender, PreOrder_ListRowChangeEvent e);
        
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockOnHandSummary_ListDataTable : global::System.Data.TypedTableBase<StockOnHandSummary_ListRow> {
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnItemNo;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnQuantity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_ListDataTable() {
                this.TableName = "StockOnHandSummary_List";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockOnHandSummary_ListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockOnHandSummary_ListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNoColumn {
                get {
                    return this.columnItemNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_ListRow this[int index] {
                get {
                    return ((StockOnHandSummary_ListRow)(this.Rows[index]));
                }
            }
            
            public event StockOnHandSummary_ListRowChangeEventHandler StockOnHandSummary_ListRowChanging;
            
            public event StockOnHandSummary_ListRowChangeEventHandler StockOnHandSummary_ListRowChanged;
            
            public event StockOnHandSummary_ListRowChangeEventHandler StockOnHandSummary_ListRowDeleting;
            
            public event StockOnHandSummary_ListRowChangeEventHandler StockOnHandSummary_ListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockOnHandSummary_ListRow(StockOnHandSummary_ListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_ListRow AddStockOnHandSummary_ListRow(string Category, string ItemNo, string ItemName, string ItemDesc, int Quantity) {
                StockOnHandSummary_ListRow rowStockOnHandSummary_ListRow = ((StockOnHandSummary_ListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Category,
                        ItemNo,
                        ItemName,
                        ItemDesc,
                        Quantity};
                rowStockOnHandSummary_ListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockOnHandSummary_ListRow);
                return rowStockOnHandSummary_ListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockOnHandSummary_ListDataTable cln = ((StockOnHandSummary_ListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockOnHandSummary_ListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCategory = base.Columns["Category"];
                this.columnItemNo = base.Columns["ItemNo"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnQuantity = base.Columns["Quantity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnItemNo = new global::System.Data.DataColumn("ItemNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNo);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_ListRow NewStockOnHandSummary_ListRow() {
                return ((StockOnHandSummary_ListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockOnHandSummary_ListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockOnHandSummary_ListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockOnHandSummary_ListRowChanged != null)) {
                    this.StockOnHandSummary_ListRowChanged(this, new StockOnHandSummary_ListRowChangeEvent(((StockOnHandSummary_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockOnHandSummary_ListRowChanging != null)) {
                    this.StockOnHandSummary_ListRowChanging(this, new StockOnHandSummary_ListRowChangeEvent(((StockOnHandSummary_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockOnHandSummary_ListRowDeleted != null)) {
                    this.StockOnHandSummary_ListRowDeleted(this, new StockOnHandSummary_ListRowChangeEvent(((StockOnHandSummary_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockOnHandSummary_ListRowDeleting != null)) {
                    this.StockOnHandSummary_ListRowDeleting(this, new StockOnHandSummary_ListRowChangeEvent(((StockOnHandSummary_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockOnHandSummary_ListRow(StockOnHandSummary_ListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockOnHandSummary_ListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockOnHandSummary_CurrentDateDataTable : global::System.Data.TypedTableBase<StockOnHandSummary_CurrentDateRow> {
            
            private global::System.Data.DataColumn columnCurrentDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_CurrentDateDataTable() {
                this.TableName = "StockOnHandSummary_CurrentDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockOnHandSummary_CurrentDateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockOnHandSummary_CurrentDateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentDateColumn {
                get {
                    return this.columnCurrentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_CurrentDateRow this[int index] {
                get {
                    return ((StockOnHandSummary_CurrentDateRow)(this.Rows[index]));
                }
            }
            
            public event StockOnHandSummary_CurrentDateRowChangeEventHandler StockOnHandSummary_CurrentDateRowChanging;
            
            public event StockOnHandSummary_CurrentDateRowChangeEventHandler StockOnHandSummary_CurrentDateRowChanged;
            
            public event StockOnHandSummary_CurrentDateRowChangeEventHandler StockOnHandSummary_CurrentDateRowDeleting;
            
            public event StockOnHandSummary_CurrentDateRowChangeEventHandler StockOnHandSummary_CurrentDateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockOnHandSummary_CurrentDateRow(StockOnHandSummary_CurrentDateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_CurrentDateRow AddStockOnHandSummary_CurrentDateRow(System.DateTime CurrentDate) {
                StockOnHandSummary_CurrentDateRow rowStockOnHandSummary_CurrentDateRow = ((StockOnHandSummary_CurrentDateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CurrentDate};
                rowStockOnHandSummary_CurrentDateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockOnHandSummary_CurrentDateRow);
                return rowStockOnHandSummary_CurrentDateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockOnHandSummary_CurrentDateDataTable cln = ((StockOnHandSummary_CurrentDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockOnHandSummary_CurrentDateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCurrentDate = base.Columns["CurrentDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCurrentDate = new global::System.Data.DataColumn("CurrentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_CurrentDateRow NewStockOnHandSummary_CurrentDateRow() {
                return ((StockOnHandSummary_CurrentDateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockOnHandSummary_CurrentDateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockOnHandSummary_CurrentDateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockOnHandSummary_CurrentDateRowChanged != null)) {
                    this.StockOnHandSummary_CurrentDateRowChanged(this, new StockOnHandSummary_CurrentDateRowChangeEvent(((StockOnHandSummary_CurrentDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockOnHandSummary_CurrentDateRowChanging != null)) {
                    this.StockOnHandSummary_CurrentDateRowChanging(this, new StockOnHandSummary_CurrentDateRowChangeEvent(((StockOnHandSummary_CurrentDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockOnHandSummary_CurrentDateRowDeleted != null)) {
                    this.StockOnHandSummary_CurrentDateRowDeleted(this, new StockOnHandSummary_CurrentDateRowChangeEvent(((StockOnHandSummary_CurrentDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockOnHandSummary_CurrentDateRowDeleting != null)) {
                    this.StockOnHandSummary_CurrentDateRowDeleting(this, new StockOnHandSummary_CurrentDateRowChangeEvent(((StockOnHandSummary_CurrentDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockOnHandSummary_CurrentDateRow(StockOnHandSummary_CurrentDateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockOnHandSummary_CurrentDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockOnHandSummary_LocationDataTable : global::System.Data.TypedTableBase<StockOnHandSummary_LocationRow> {
            
            private global::System.Data.DataColumn columnLocation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_LocationDataTable() {
                this.TableName = "StockOnHandSummary_Location";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockOnHandSummary_LocationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockOnHandSummary_LocationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_LocationRow this[int index] {
                get {
                    return ((StockOnHandSummary_LocationRow)(this.Rows[index]));
                }
            }
            
            public event StockOnHandSummary_LocationRowChangeEventHandler StockOnHandSummary_LocationRowChanging;
            
            public event StockOnHandSummary_LocationRowChangeEventHandler StockOnHandSummary_LocationRowChanged;
            
            public event StockOnHandSummary_LocationRowChangeEventHandler StockOnHandSummary_LocationRowDeleting;
            
            public event StockOnHandSummary_LocationRowChangeEventHandler StockOnHandSummary_LocationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockOnHandSummary_LocationRow(StockOnHandSummary_LocationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_LocationRow AddStockOnHandSummary_LocationRow(string Location) {
                StockOnHandSummary_LocationRow rowStockOnHandSummary_LocationRow = ((StockOnHandSummary_LocationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Location};
                rowStockOnHandSummary_LocationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockOnHandSummary_LocationRow);
                return rowStockOnHandSummary_LocationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockOnHandSummary_LocationDataTable cln = ((StockOnHandSummary_LocationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockOnHandSummary_LocationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLocation = base.Columns["Location"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_LocationRow NewStockOnHandSummary_LocationRow() {
                return ((StockOnHandSummary_LocationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockOnHandSummary_LocationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockOnHandSummary_LocationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockOnHandSummary_LocationRowChanged != null)) {
                    this.StockOnHandSummary_LocationRowChanged(this, new StockOnHandSummary_LocationRowChangeEvent(((StockOnHandSummary_LocationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockOnHandSummary_LocationRowChanging != null)) {
                    this.StockOnHandSummary_LocationRowChanging(this, new StockOnHandSummary_LocationRowChangeEvent(((StockOnHandSummary_LocationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockOnHandSummary_LocationRowDeleted != null)) {
                    this.StockOnHandSummary_LocationRowDeleted(this, new StockOnHandSummary_LocationRowChangeEvent(((StockOnHandSummary_LocationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockOnHandSummary_LocationRowDeleting != null)) {
                    this.StockOnHandSummary_LocationRowDeleting(this, new StockOnHandSummary_LocationRowChangeEvent(((StockOnHandSummary_LocationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockOnHandSummary_LocationRow(StockOnHandSummary_LocationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockOnHandSummary_LocationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesSummaryDaily_ListDataTable : global::System.Data.TypedTableBase<SalesSummaryDaily_ListRow> {
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnItemNo;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnSalesAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_ListDataTable() {
                this.TableName = "SalesSummaryDaily_List";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesSummaryDaily_ListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesSummaryDaily_ListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNoColumn {
                get {
                    return this.columnItemNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesAmountColumn {
                get {
                    return this.columnSalesAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_ListRow this[int index] {
                get {
                    return ((SalesSummaryDaily_ListRow)(this.Rows[index]));
                }
            }
            
            public event SalesSummaryDaily_ListRowChangeEventHandler SalesSummaryDaily_ListRowChanging;
            
            public event SalesSummaryDaily_ListRowChangeEventHandler SalesSummaryDaily_ListRowChanged;
            
            public event SalesSummaryDaily_ListRowChangeEventHandler SalesSummaryDaily_ListRowDeleting;
            
            public event SalesSummaryDaily_ListRowChangeEventHandler SalesSummaryDaily_ListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesSummaryDaily_ListRow(SalesSummaryDaily_ListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_ListRow AddSalesSummaryDaily_ListRow(string Category, string ItemNo, string ItemName, string ItemDesc, int Qty, decimal UnitPrice, decimal SalesAmount) {
                SalesSummaryDaily_ListRow rowSalesSummaryDaily_ListRow = ((SalesSummaryDaily_ListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Category,
                        ItemNo,
                        ItemName,
                        ItemDesc,
                        Qty,
                        UnitPrice,
                        SalesAmount};
                rowSalesSummaryDaily_ListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesSummaryDaily_ListRow);
                return rowSalesSummaryDaily_ListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesSummaryDaily_ListDataTable cln = ((SalesSummaryDaily_ListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesSummaryDaily_ListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCategory = base.Columns["Category"];
                this.columnItemNo = base.Columns["ItemNo"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnQty = base.Columns["Qty"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnSalesAmount = base.Columns["SalesAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnItemNo = new global::System.Data.DataColumn("ItemNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNo);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnSalesAmount = new global::System.Data.DataColumn("SalesAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_ListRow NewSalesSummaryDaily_ListRow() {
                return ((SalesSummaryDaily_ListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesSummaryDaily_ListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesSummaryDaily_ListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesSummaryDaily_ListRowChanged != null)) {
                    this.SalesSummaryDaily_ListRowChanged(this, new SalesSummaryDaily_ListRowChangeEvent(((SalesSummaryDaily_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesSummaryDaily_ListRowChanging != null)) {
                    this.SalesSummaryDaily_ListRowChanging(this, new SalesSummaryDaily_ListRowChangeEvent(((SalesSummaryDaily_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesSummaryDaily_ListRowDeleted != null)) {
                    this.SalesSummaryDaily_ListRowDeleted(this, new SalesSummaryDaily_ListRowChangeEvent(((SalesSummaryDaily_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesSummaryDaily_ListRowDeleting != null)) {
                    this.SalesSummaryDaily_ListRowDeleting(this, new SalesSummaryDaily_ListRowChangeEvent(((SalesSummaryDaily_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesSummaryDaily_ListRow(SalesSummaryDaily_ListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesSummaryDaily_ListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesSummaryDaily_PaymentTypeDataTable : global::System.Data.TypedTableBase<SalesSummaryDaily_PaymentTypeRow> {
            
            private global::System.Data.DataColumn columnCASH;
            
            private global::System.Data.DataColumn columnMASTER;
            
            private global::System.Data.DataColumn columnNETS;
            
            private global::System.Data.DataColumn columnVISA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_PaymentTypeDataTable() {
                this.TableName = "SalesSummaryDaily_PaymentType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesSummaryDaily_PaymentTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesSummaryDaily_PaymentTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASHColumn {
                get {
                    return this.columnCASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTERColumn {
                get {
                    return this.columnMASTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NETSColumn {
                get {
                    return this.columnNETS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VISAColumn {
                get {
                    return this.columnVISA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_PaymentTypeRow this[int index] {
                get {
                    return ((SalesSummaryDaily_PaymentTypeRow)(this.Rows[index]));
                }
            }
            
            public event SalesSummaryDaily_PaymentTypeRowChangeEventHandler SalesSummaryDaily_PaymentTypeRowChanging;
            
            public event SalesSummaryDaily_PaymentTypeRowChangeEventHandler SalesSummaryDaily_PaymentTypeRowChanged;
            
            public event SalesSummaryDaily_PaymentTypeRowChangeEventHandler SalesSummaryDaily_PaymentTypeRowDeleting;
            
            public event SalesSummaryDaily_PaymentTypeRowChangeEventHandler SalesSummaryDaily_PaymentTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesSummaryDaily_PaymentTypeRow(SalesSummaryDaily_PaymentTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_PaymentTypeRow AddSalesSummaryDaily_PaymentTypeRow(decimal CASH, decimal MASTER, decimal NETS, decimal VISA) {
                SalesSummaryDaily_PaymentTypeRow rowSalesSummaryDaily_PaymentTypeRow = ((SalesSummaryDaily_PaymentTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CASH,
                        MASTER,
                        NETS,
                        VISA};
                rowSalesSummaryDaily_PaymentTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesSummaryDaily_PaymentTypeRow);
                return rowSalesSummaryDaily_PaymentTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesSummaryDaily_PaymentTypeDataTable cln = ((SalesSummaryDaily_PaymentTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesSummaryDaily_PaymentTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCASH = base.Columns["CASH"];
                this.columnMASTER = base.Columns["MASTER"];
                this.columnNETS = base.Columns["NETS"];
                this.columnVISA = base.Columns["VISA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCASH = new global::System.Data.DataColumn("CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASH);
                this.columnMASTER = new global::System.Data.DataColumn("MASTER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMASTER);
                this.columnNETS = new global::System.Data.DataColumn("NETS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETS);
                this.columnVISA = new global::System.Data.DataColumn("VISA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVISA);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_PaymentTypeRow NewSalesSummaryDaily_PaymentTypeRow() {
                return ((SalesSummaryDaily_PaymentTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesSummaryDaily_PaymentTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesSummaryDaily_PaymentTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesSummaryDaily_PaymentTypeRowChanged != null)) {
                    this.SalesSummaryDaily_PaymentTypeRowChanged(this, new SalesSummaryDaily_PaymentTypeRowChangeEvent(((SalesSummaryDaily_PaymentTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesSummaryDaily_PaymentTypeRowChanging != null)) {
                    this.SalesSummaryDaily_PaymentTypeRowChanging(this, new SalesSummaryDaily_PaymentTypeRowChangeEvent(((SalesSummaryDaily_PaymentTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesSummaryDaily_PaymentTypeRowDeleted != null)) {
                    this.SalesSummaryDaily_PaymentTypeRowDeleted(this, new SalesSummaryDaily_PaymentTypeRowChangeEvent(((SalesSummaryDaily_PaymentTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesSummaryDaily_PaymentTypeRowDeleting != null)) {
                    this.SalesSummaryDaily_PaymentTypeRowDeleting(this, new SalesSummaryDaily_PaymentTypeRowChangeEvent(((SalesSummaryDaily_PaymentTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesSummaryDaily_PaymentTypeRow(SalesSummaryDaily_PaymentTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesSummaryDaily_PaymentTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesSummaryDaily_SalesDateDataTable : global::System.Data.TypedTableBase<SalesSummaryDaily_SalesDateRow> {
            
            private global::System.Data.DataColumn columnSalesDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_SalesDateDataTable() {
                this.TableName = "SalesSummaryDaily_SalesDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesSummaryDaily_SalesDateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesSummaryDaily_SalesDateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_SalesDateRow this[int index] {
                get {
                    return ((SalesSummaryDaily_SalesDateRow)(this.Rows[index]));
                }
            }
            
            public event SalesSummaryDaily_SalesDateRowChangeEventHandler SalesSummaryDaily_SalesDateRowChanging;
            
            public event SalesSummaryDaily_SalesDateRowChangeEventHandler SalesSummaryDaily_SalesDateRowChanged;
            
            public event SalesSummaryDaily_SalesDateRowChangeEventHandler SalesSummaryDaily_SalesDateRowDeleting;
            
            public event SalesSummaryDaily_SalesDateRowChangeEventHandler SalesSummaryDaily_SalesDateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesSummaryDaily_SalesDateRow(SalesSummaryDaily_SalesDateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_SalesDateRow AddSalesSummaryDaily_SalesDateRow(System.DateTime SalesDate) {
                SalesSummaryDaily_SalesDateRow rowSalesSummaryDaily_SalesDateRow = ((SalesSummaryDaily_SalesDateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalesDate};
                rowSalesSummaryDaily_SalesDateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesSummaryDaily_SalesDateRow);
                return rowSalesSummaryDaily_SalesDateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesSummaryDaily_SalesDateDataTable cln = ((SalesSummaryDaily_SalesDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesSummaryDaily_SalesDateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSalesDate = base.Columns["SalesDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_SalesDateRow NewSalesSummaryDaily_SalesDateRow() {
                return ((SalesSummaryDaily_SalesDateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesSummaryDaily_SalesDateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesSummaryDaily_SalesDateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesSummaryDaily_SalesDateRowChanged != null)) {
                    this.SalesSummaryDaily_SalesDateRowChanged(this, new SalesSummaryDaily_SalesDateRowChangeEvent(((SalesSummaryDaily_SalesDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesSummaryDaily_SalesDateRowChanging != null)) {
                    this.SalesSummaryDaily_SalesDateRowChanging(this, new SalesSummaryDaily_SalesDateRowChangeEvent(((SalesSummaryDaily_SalesDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesSummaryDaily_SalesDateRowDeleted != null)) {
                    this.SalesSummaryDaily_SalesDateRowDeleted(this, new SalesSummaryDaily_SalesDateRowChangeEvent(((SalesSummaryDaily_SalesDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesSummaryDaily_SalesDateRowDeleting != null)) {
                    this.SalesSummaryDaily_SalesDateRowDeleting(this, new SalesSummaryDaily_SalesDateRowChangeEvent(((SalesSummaryDaily_SalesDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesSummaryDaily_SalesDateRow(SalesSummaryDaily_SalesDateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesSummaryDaily_SalesDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesSummaryDaily_OutletDataTable : global::System.Data.TypedTableBase<SalesSummaryDaily_OutletRow> {
            
            private global::System.Data.DataColumn columnOutletName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_OutletDataTable() {
                this.TableName = "SalesSummaryDaily_Outlet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesSummaryDaily_OutletDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesSummaryDaily_OutletDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletNameColumn {
                get {
                    return this.columnOutletName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_OutletRow this[int index] {
                get {
                    return ((SalesSummaryDaily_OutletRow)(this.Rows[index]));
                }
            }
            
            public event SalesSummaryDaily_OutletRowChangeEventHandler SalesSummaryDaily_OutletRowChanging;
            
            public event SalesSummaryDaily_OutletRowChangeEventHandler SalesSummaryDaily_OutletRowChanged;
            
            public event SalesSummaryDaily_OutletRowChangeEventHandler SalesSummaryDaily_OutletRowDeleting;
            
            public event SalesSummaryDaily_OutletRowChangeEventHandler SalesSummaryDaily_OutletRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesSummaryDaily_OutletRow(SalesSummaryDaily_OutletRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_OutletRow AddSalesSummaryDaily_OutletRow(string OutletName) {
                SalesSummaryDaily_OutletRow rowSalesSummaryDaily_OutletRow = ((SalesSummaryDaily_OutletRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OutletName};
                rowSalesSummaryDaily_OutletRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesSummaryDaily_OutletRow);
                return rowSalesSummaryDaily_OutletRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesSummaryDaily_OutletDataTable cln = ((SalesSummaryDaily_OutletDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesSummaryDaily_OutletDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOutletName = base.Columns["OutletName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOutletName = new global::System.Data.DataColumn("OutletName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_OutletRow NewSalesSummaryDaily_OutletRow() {
                return ((SalesSummaryDaily_OutletRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesSummaryDaily_OutletRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesSummaryDaily_OutletRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesSummaryDaily_OutletRowChanged != null)) {
                    this.SalesSummaryDaily_OutletRowChanged(this, new SalesSummaryDaily_OutletRowChangeEvent(((SalesSummaryDaily_OutletRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesSummaryDaily_OutletRowChanging != null)) {
                    this.SalesSummaryDaily_OutletRowChanging(this, new SalesSummaryDaily_OutletRowChangeEvent(((SalesSummaryDaily_OutletRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesSummaryDaily_OutletRowDeleted != null)) {
                    this.SalesSummaryDaily_OutletRowDeleted(this, new SalesSummaryDaily_OutletRowChangeEvent(((SalesSummaryDaily_OutletRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesSummaryDaily_OutletRowDeleting != null)) {
                    this.SalesSummaryDaily_OutletRowDeleting(this, new SalesSummaryDaily_OutletRowChangeEvent(((SalesSummaryDaily_OutletRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesSummaryDaily_OutletRow(SalesSummaryDaily_OutletRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesSummaryDaily_OutletDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PreOrderSummaryDaily_OrderDateDataTable : global::System.Data.TypedTableBase<PreOrderSummaryDaily_OrderDateRow> {
            
            private global::System.Data.DataColumn columnOrderDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_OrderDateDataTable() {
                this.TableName = "PreOrderSummaryDaily_OrderDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PreOrderSummaryDaily_OrderDateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PreOrderSummaryDaily_OrderDateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDateColumn {
                get {
                    return this.columnOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_OrderDateRow this[int index] {
                get {
                    return ((PreOrderSummaryDaily_OrderDateRow)(this.Rows[index]));
                }
            }
            
            public event PreOrderSummaryDaily_OrderDateRowChangeEventHandler PreOrderSummaryDaily_OrderDateRowChanging;
            
            public event PreOrderSummaryDaily_OrderDateRowChangeEventHandler PreOrderSummaryDaily_OrderDateRowChanged;
            
            public event PreOrderSummaryDaily_OrderDateRowChangeEventHandler PreOrderSummaryDaily_OrderDateRowDeleting;
            
            public event PreOrderSummaryDaily_OrderDateRowChangeEventHandler PreOrderSummaryDaily_OrderDateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPreOrderSummaryDaily_OrderDateRow(PreOrderSummaryDaily_OrderDateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_OrderDateRow AddPreOrderSummaryDaily_OrderDateRow(System.DateTime OrderDate) {
                PreOrderSummaryDaily_OrderDateRow rowPreOrderSummaryDaily_OrderDateRow = ((PreOrderSummaryDaily_OrderDateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OrderDate};
                rowPreOrderSummaryDaily_OrderDateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPreOrderSummaryDaily_OrderDateRow);
                return rowPreOrderSummaryDaily_OrderDateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PreOrderSummaryDaily_OrderDateDataTable cln = ((PreOrderSummaryDaily_OrderDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PreOrderSummaryDaily_OrderDateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrderDate = base.Columns["OrderDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrderDate = new global::System.Data.DataColumn("OrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_OrderDateRow NewPreOrderSummaryDaily_OrderDateRow() {
                return ((PreOrderSummaryDaily_OrderDateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PreOrderSummaryDaily_OrderDateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PreOrderSummaryDaily_OrderDateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PreOrderSummaryDaily_OrderDateRowChanged != null)) {
                    this.PreOrderSummaryDaily_OrderDateRowChanged(this, new PreOrderSummaryDaily_OrderDateRowChangeEvent(((PreOrderSummaryDaily_OrderDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PreOrderSummaryDaily_OrderDateRowChanging != null)) {
                    this.PreOrderSummaryDaily_OrderDateRowChanging(this, new PreOrderSummaryDaily_OrderDateRowChangeEvent(((PreOrderSummaryDaily_OrderDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PreOrderSummaryDaily_OrderDateRowDeleted != null)) {
                    this.PreOrderSummaryDaily_OrderDateRowDeleted(this, new PreOrderSummaryDaily_OrderDateRowChangeEvent(((PreOrderSummaryDaily_OrderDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PreOrderSummaryDaily_OrderDateRowDeleting != null)) {
                    this.PreOrderSummaryDaily_OrderDateRowDeleting(this, new PreOrderSummaryDaily_OrderDateRowChangeEvent(((PreOrderSummaryDaily_OrderDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePreOrderSummaryDaily_OrderDateRow(PreOrderSummaryDaily_OrderDateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PreOrderSummaryDaily_OrderDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PreOrderSummaryDaily_OutletDataTable : global::System.Data.TypedTableBase<PreOrderSummaryDaily_OutletRow> {
            
            private global::System.Data.DataColumn columnOutletName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_OutletDataTable() {
                this.TableName = "PreOrderSummaryDaily_Outlet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PreOrderSummaryDaily_OutletDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PreOrderSummaryDaily_OutletDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutletNameColumn {
                get {
                    return this.columnOutletName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_OutletRow this[int index] {
                get {
                    return ((PreOrderSummaryDaily_OutletRow)(this.Rows[index]));
                }
            }
            
            public event PreOrderSummaryDaily_OutletRowChangeEventHandler PreOrderSummaryDaily_OutletRowChanging;
            
            public event PreOrderSummaryDaily_OutletRowChangeEventHandler PreOrderSummaryDaily_OutletRowChanged;
            
            public event PreOrderSummaryDaily_OutletRowChangeEventHandler PreOrderSummaryDaily_OutletRowDeleting;
            
            public event PreOrderSummaryDaily_OutletRowChangeEventHandler PreOrderSummaryDaily_OutletRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPreOrderSummaryDaily_OutletRow(PreOrderSummaryDaily_OutletRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_OutletRow AddPreOrderSummaryDaily_OutletRow(string OutletName) {
                PreOrderSummaryDaily_OutletRow rowPreOrderSummaryDaily_OutletRow = ((PreOrderSummaryDaily_OutletRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OutletName};
                rowPreOrderSummaryDaily_OutletRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPreOrderSummaryDaily_OutletRow);
                return rowPreOrderSummaryDaily_OutletRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PreOrderSummaryDaily_OutletDataTable cln = ((PreOrderSummaryDaily_OutletDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PreOrderSummaryDaily_OutletDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOutletName = base.Columns["OutletName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOutletName = new global::System.Data.DataColumn("OutletName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutletName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_OutletRow NewPreOrderSummaryDaily_OutletRow() {
                return ((PreOrderSummaryDaily_OutletRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PreOrderSummaryDaily_OutletRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PreOrderSummaryDaily_OutletRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PreOrderSummaryDaily_OutletRowChanged != null)) {
                    this.PreOrderSummaryDaily_OutletRowChanged(this, new PreOrderSummaryDaily_OutletRowChangeEvent(((PreOrderSummaryDaily_OutletRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PreOrderSummaryDaily_OutletRowChanging != null)) {
                    this.PreOrderSummaryDaily_OutletRowChanging(this, new PreOrderSummaryDaily_OutletRowChangeEvent(((PreOrderSummaryDaily_OutletRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PreOrderSummaryDaily_OutletRowDeleted != null)) {
                    this.PreOrderSummaryDaily_OutletRowDeleted(this, new PreOrderSummaryDaily_OutletRowChangeEvent(((PreOrderSummaryDaily_OutletRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PreOrderSummaryDaily_OutletRowDeleting != null)) {
                    this.PreOrderSummaryDaily_OutletRowDeleting(this, new PreOrderSummaryDaily_OutletRowChangeEvent(((PreOrderSummaryDaily_OutletRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePreOrderSummaryDaily_OutletRow(PreOrderSummaryDaily_OutletRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PreOrderSummaryDaily_OutletDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PreOrderSummaryDaily_ListDataTable : global::System.Data.TypedTableBase<PreOrderSummaryDaily_ListRow> {
            
            private global::System.Data.DataColumn columnOrderHdrID;
            
            private global::System.Data.DataColumn columnOrderDetID;
            
            private global::System.Data.DataColumn columnMembershipNo;
            
            private global::System.Data.DataColumn columnOrderDate;
            
            private global::System.Data.DataColumn columnItemNo;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnCategoryName;
            
            private global::System.Data.DataColumn columnDepartmentName;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDeposit;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnEstDel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_ListDataTable() {
                this.TableName = "PreOrderSummaryDaily_List";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PreOrderSummaryDaily_ListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PreOrderSummaryDaily_ListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderHdrIDColumn {
                get {
                    return this.columnOrderHdrID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDetIDColumn {
                get {
                    return this.columnOrderDetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MembershipNoColumn {
                get {
                    return this.columnMembershipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDateColumn {
                get {
                    return this.columnOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNoColumn {
                get {
                    return this.columnItemNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryNameColumn {
                get {
                    return this.columnCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartmentNameColumn {
                get {
                    return this.columnDepartmentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepositColumn {
                get {
                    return this.columnDeposit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstDelColumn {
                get {
                    return this.columnEstDel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_ListRow this[int index] {
                get {
                    return ((PreOrderSummaryDaily_ListRow)(this.Rows[index]));
                }
            }
            
            public event PreOrderSummaryDaily_ListRowChangeEventHandler PreOrderSummaryDaily_ListRowChanging;
            
            public event PreOrderSummaryDaily_ListRowChangeEventHandler PreOrderSummaryDaily_ListRowChanged;
            
            public event PreOrderSummaryDaily_ListRowChangeEventHandler PreOrderSummaryDaily_ListRowDeleting;
            
            public event PreOrderSummaryDaily_ListRowChangeEventHandler PreOrderSummaryDaily_ListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPreOrderSummaryDaily_ListRow(PreOrderSummaryDaily_ListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_ListRow AddPreOrderSummaryDaily_ListRow(string OrderHdrID, string OrderDetID, string MembershipNo, System.DateTime OrderDate, string ItemNo, string ItemName, string ItemDesc, string CategoryName, string DepartmentName, int Quantity, decimal UnitPrice, decimal Amount, decimal Deposit, decimal Balance, string EstDel) {
                PreOrderSummaryDaily_ListRow rowPreOrderSummaryDaily_ListRow = ((PreOrderSummaryDaily_ListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OrderHdrID,
                        OrderDetID,
                        MembershipNo,
                        OrderDate,
                        ItemNo,
                        ItemName,
                        ItemDesc,
                        CategoryName,
                        DepartmentName,
                        Quantity,
                        UnitPrice,
                        Amount,
                        Deposit,
                        Balance,
                        EstDel};
                rowPreOrderSummaryDaily_ListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPreOrderSummaryDaily_ListRow);
                return rowPreOrderSummaryDaily_ListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PreOrderSummaryDaily_ListDataTable cln = ((PreOrderSummaryDaily_ListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PreOrderSummaryDaily_ListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrderHdrID = base.Columns["OrderHdrID"];
                this.columnOrderDetID = base.Columns["OrderDetID"];
                this.columnMembershipNo = base.Columns["MembershipNo"];
                this.columnOrderDate = base.Columns["OrderDate"];
                this.columnItemNo = base.Columns["ItemNo"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnCategoryName = base.Columns["CategoryName"];
                this.columnDepartmentName = base.Columns["DepartmentName"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDeposit = base.Columns["Deposit"];
                this.columnBalance = base.Columns["Balance"];
                this.columnEstDel = base.Columns["EstDel"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrderHdrID = new global::System.Data.DataColumn("OrderHdrID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderHdrID);
                this.columnOrderDetID = new global::System.Data.DataColumn("OrderDetID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDetID);
                this.columnMembershipNo = new global::System.Data.DataColumn("MembershipNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMembershipNo);
                this.columnOrderDate = new global::System.Data.DataColumn("OrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDate);
                this.columnItemNo = new global::System.Data.DataColumn("ItemNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNo);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnCategoryName = new global::System.Data.DataColumn("CategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryName);
                this.columnDepartmentName = new global::System.Data.DataColumn("DepartmentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartmentName);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDeposit = new global::System.Data.DataColumn("Deposit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeposit);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnEstDel = new global::System.Data.DataColumn("EstDel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstDel);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_ListRow NewPreOrderSummaryDaily_ListRow() {
                return ((PreOrderSummaryDaily_ListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PreOrderSummaryDaily_ListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PreOrderSummaryDaily_ListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PreOrderSummaryDaily_ListRowChanged != null)) {
                    this.PreOrderSummaryDaily_ListRowChanged(this, new PreOrderSummaryDaily_ListRowChangeEvent(((PreOrderSummaryDaily_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PreOrderSummaryDaily_ListRowChanging != null)) {
                    this.PreOrderSummaryDaily_ListRowChanging(this, new PreOrderSummaryDaily_ListRowChangeEvent(((PreOrderSummaryDaily_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PreOrderSummaryDaily_ListRowDeleted != null)) {
                    this.PreOrderSummaryDaily_ListRowDeleted(this, new PreOrderSummaryDaily_ListRowChangeEvent(((PreOrderSummaryDaily_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PreOrderSummaryDaily_ListRowDeleting != null)) {
                    this.PreOrderSummaryDaily_ListRowDeleting(this, new PreOrderSummaryDaily_ListRowChangeEvent(((PreOrderSummaryDaily_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePreOrderSummaryDaily_ListRow(PreOrderSummaryDaily_ListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PreOrderSummaryDaily_ListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PreOrderSummaryDaily_PaymentDataTable : global::System.Data.TypedTableBase<PreOrderSummaryDaily_PaymentRow> {
            
            private global::System.Data.DataColumn columnVISAX;
            
            private global::System.Data.DataColumn columnMASTER;
            
            private global::System.Data.DataColumn columnCASH;
            
            private global::System.Data.DataColumn columnNETSX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_PaymentDataTable() {
                this.TableName = "PreOrderSummaryDaily_Payment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PreOrderSummaryDaily_PaymentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PreOrderSummaryDaily_PaymentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VISAXColumn {
                get {
                    return this.columnVISAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTERColumn {
                get {
                    return this.columnMASTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CASHColumn {
                get {
                    return this.columnCASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NETSXColumn {
                get {
                    return this.columnNETSX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_PaymentRow this[int index] {
                get {
                    return ((PreOrderSummaryDaily_PaymentRow)(this.Rows[index]));
                }
            }
            
            public event PreOrderSummaryDaily_PaymentRowChangeEventHandler PreOrderSummaryDaily_PaymentRowChanging;
            
            public event PreOrderSummaryDaily_PaymentRowChangeEventHandler PreOrderSummaryDaily_PaymentRowChanged;
            
            public event PreOrderSummaryDaily_PaymentRowChangeEventHandler PreOrderSummaryDaily_PaymentRowDeleting;
            
            public event PreOrderSummaryDaily_PaymentRowChangeEventHandler PreOrderSummaryDaily_PaymentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPreOrderSummaryDaily_PaymentRow(PreOrderSummaryDaily_PaymentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_PaymentRow AddPreOrderSummaryDaily_PaymentRow(decimal VISAX, decimal MASTER, decimal CASH, decimal NETSX) {
                PreOrderSummaryDaily_PaymentRow rowPreOrderSummaryDaily_PaymentRow = ((PreOrderSummaryDaily_PaymentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VISAX,
                        MASTER,
                        CASH,
                        NETSX};
                rowPreOrderSummaryDaily_PaymentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPreOrderSummaryDaily_PaymentRow);
                return rowPreOrderSummaryDaily_PaymentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PreOrderSummaryDaily_PaymentDataTable cln = ((PreOrderSummaryDaily_PaymentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PreOrderSummaryDaily_PaymentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVISAX = base.Columns["VISAX"];
                this.columnMASTER = base.Columns["MASTER"];
                this.columnCASH = base.Columns["CASH"];
                this.columnNETSX = base.Columns["NETSX"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVISAX = new global::System.Data.DataColumn("VISAX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVISAX);
                this.columnMASTER = new global::System.Data.DataColumn("MASTER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMASTER);
                this.columnCASH = new global::System.Data.DataColumn("CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASH);
                this.columnNETSX = new global::System.Data.DataColumn("NETSX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETSX);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_PaymentRow NewPreOrderSummaryDaily_PaymentRow() {
                return ((PreOrderSummaryDaily_PaymentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PreOrderSummaryDaily_PaymentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PreOrderSummaryDaily_PaymentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PreOrderSummaryDaily_PaymentRowChanged != null)) {
                    this.PreOrderSummaryDaily_PaymentRowChanged(this, new PreOrderSummaryDaily_PaymentRowChangeEvent(((PreOrderSummaryDaily_PaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PreOrderSummaryDaily_PaymentRowChanging != null)) {
                    this.PreOrderSummaryDaily_PaymentRowChanging(this, new PreOrderSummaryDaily_PaymentRowChangeEvent(((PreOrderSummaryDaily_PaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PreOrderSummaryDaily_PaymentRowDeleted != null)) {
                    this.PreOrderSummaryDaily_PaymentRowDeleted(this, new PreOrderSummaryDaily_PaymentRowChangeEvent(((PreOrderSummaryDaily_PaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PreOrderSummaryDaily_PaymentRowDeleting != null)) {
                    this.PreOrderSummaryDaily_PaymentRowDeleting(this, new PreOrderSummaryDaily_PaymentRowChangeEvent(((PreOrderSummaryDaily_PaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePreOrderSummaryDaily_PaymentRow(PreOrderSummaryDaily_PaymentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PreOrderSummaryDaily_PaymentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PreOrder_ListDataTable : global::System.Data.TypedTableBase<PreOrder_ListRow> {
            
            private global::System.Data.DataColumn columnOrderDetID;
            
            private global::System.Data.DataColumn columnMembershipNo;
            
            private global::System.Data.DataColumn columnOrderDate;
            
            private global::System.Data.DataColumn columnItemNo;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnCategoryName;
            
            private global::System.Data.DataColumn columnDepartmentName;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDeposit;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnEstDel;
            
            private global::System.Data.DataColumn columnOrderHdrID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrder_ListDataTable() {
                this.TableName = "PreOrder_List";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PreOrder_ListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PreOrder_ListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDetIDColumn {
                get {
                    return this.columnOrderDetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MembershipNoColumn {
                get {
                    return this.columnMembershipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDateColumn {
                get {
                    return this.columnOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNoColumn {
                get {
                    return this.columnItemNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryNameColumn {
                get {
                    return this.columnCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartmentNameColumn {
                get {
                    return this.columnDepartmentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepositColumn {
                get {
                    return this.columnDeposit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstDelColumn {
                get {
                    return this.columnEstDel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderHdrIDColumn {
                get {
                    return this.columnOrderHdrID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrder_ListRow this[int index] {
                get {
                    return ((PreOrder_ListRow)(this.Rows[index]));
                }
            }
            
            public event PreOrder_ListRowChangeEventHandler PreOrder_ListRowChanging;
            
            public event PreOrder_ListRowChangeEventHandler PreOrder_ListRowChanged;
            
            public event PreOrder_ListRowChangeEventHandler PreOrder_ListRowDeleting;
            
            public event PreOrder_ListRowChangeEventHandler PreOrder_ListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPreOrder_ListRow(PreOrder_ListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrder_ListRow AddPreOrder_ListRow(string OrderDetID, string MembershipNo, System.DateTime OrderDate, string ItemNo, string ItemName, string ItemDesc, string CategoryName, string DepartmentName, int Quantity, decimal UnitPrice, decimal Amount, decimal Deposit, decimal Balance, string EstDel, string OrderHdrID) {
                PreOrder_ListRow rowPreOrder_ListRow = ((PreOrder_ListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OrderDetID,
                        MembershipNo,
                        OrderDate,
                        ItemNo,
                        ItemName,
                        ItemDesc,
                        CategoryName,
                        DepartmentName,
                        Quantity,
                        UnitPrice,
                        Amount,
                        Deposit,
                        Balance,
                        EstDel,
                        OrderHdrID};
                rowPreOrder_ListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPreOrder_ListRow);
                return rowPreOrder_ListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PreOrder_ListDataTable cln = ((PreOrder_ListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PreOrder_ListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrderDetID = base.Columns["OrderDetID"];
                this.columnMembershipNo = base.Columns["MembershipNo"];
                this.columnOrderDate = base.Columns["OrderDate"];
                this.columnItemNo = base.Columns["ItemNo"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnCategoryName = base.Columns["CategoryName"];
                this.columnDepartmentName = base.Columns["DepartmentName"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDeposit = base.Columns["Deposit"];
                this.columnBalance = base.Columns["Balance"];
                this.columnEstDel = base.Columns["EstDel"];
                this.columnOrderHdrID = base.Columns["OrderHdrID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrderDetID = new global::System.Data.DataColumn("OrderDetID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDetID);
                this.columnMembershipNo = new global::System.Data.DataColumn("MembershipNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMembershipNo);
                this.columnOrderDate = new global::System.Data.DataColumn("OrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDate);
                this.columnItemNo = new global::System.Data.DataColumn("ItemNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNo);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnCategoryName = new global::System.Data.DataColumn("CategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryName);
                this.columnDepartmentName = new global::System.Data.DataColumn("DepartmentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartmentName);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDeposit = new global::System.Data.DataColumn("Deposit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeposit);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnEstDel = new global::System.Data.DataColumn("EstDel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstDel);
                this.columnOrderHdrID = new global::System.Data.DataColumn("OrderHdrID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderHdrID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrder_ListRow NewPreOrder_ListRow() {
                return ((PreOrder_ListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PreOrder_ListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PreOrder_ListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PreOrder_ListRowChanged != null)) {
                    this.PreOrder_ListRowChanged(this, new PreOrder_ListRowChangeEvent(((PreOrder_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PreOrder_ListRowChanging != null)) {
                    this.PreOrder_ListRowChanging(this, new PreOrder_ListRowChangeEvent(((PreOrder_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PreOrder_ListRowDeleted != null)) {
                    this.PreOrder_ListRowDeleted(this, new PreOrder_ListRowChangeEvent(((PreOrder_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PreOrder_ListRowDeleting != null)) {
                    this.PreOrder_ListRowDeleting(this, new PreOrder_ListRowChangeEvent(((PreOrder_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePreOrder_ListRow(PreOrder_ListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PreOrder_ListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.TypedTableBase<DataTable1Row> {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row AddDataTable1Row() {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                POS ds = new POS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockOnHandSummary_ListRow : global::System.Data.DataRow {
            
            private StockOnHandSummary_ListDataTable tableStockOnHandSummary_List;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockOnHandSummary_ListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockOnHandSummary_List = ((StockOnHandSummary_ListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableStockOnHandSummary_List.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'StockOnHandSummary_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOnHandSummary_List.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemNo {
                get {
                    try {
                        return ((string)(this[this.tableStockOnHandSummary_List.ItemNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNo\' in table \'StockOnHandSummary_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOnHandSummary_List.ItemNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableStockOnHandSummary_List.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'StockOnHandSummary_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOnHandSummary_List.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDesc {
                get {
                    try {
                        return ((string)(this[this.tableStockOnHandSummary_List.ItemDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc\' in table \'StockOnHandSummary_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOnHandSummary_List.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tableStockOnHandSummary_List.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'StockOnHandSummary_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOnHandSummary_List.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableStockOnHandSummary_List.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableStockOnHandSummary_List.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNoNull() {
                return this.IsNull(this.tableStockOnHandSummary_List.ItemNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNoNull() {
                this[this.tableStockOnHandSummary_List.ItemNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableStockOnHandSummary_List.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableStockOnHandSummary_List.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescNull() {
                return this.IsNull(this.tableStockOnHandSummary_List.ItemDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescNull() {
                this[this.tableStockOnHandSummary_List.ItemDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableStockOnHandSummary_List.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableStockOnHandSummary_List.QuantityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockOnHandSummary_CurrentDateRow : global::System.Data.DataRow {
            
            private StockOnHandSummary_CurrentDateDataTable tableStockOnHandSummary_CurrentDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockOnHandSummary_CurrentDateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockOnHandSummary_CurrentDate = ((StockOnHandSummary_CurrentDateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CurrentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockOnHandSummary_CurrentDate.CurrentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentDate\' in table \'StockOnHandSummary_CurrentDate\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableStockOnHandSummary_CurrentDate.CurrentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentDateNull() {
                return this.IsNull(this.tableStockOnHandSummary_CurrentDate.CurrentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentDateNull() {
                this[this.tableStockOnHandSummary_CurrentDate.CurrentDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockOnHandSummary_LocationRow : global::System.Data.DataRow {
            
            private StockOnHandSummary_LocationDataTable tableStockOnHandSummary_Location;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockOnHandSummary_LocationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockOnHandSummary_Location = ((StockOnHandSummary_LocationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableStockOnHandSummary_Location.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'StockOnHandSummary_Location\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStockOnHandSummary_Location.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableStockOnHandSummary_Location.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableStockOnHandSummary_Location.LocationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesSummaryDaily_ListRow : global::System.Data.DataRow {
            
            private SalesSummaryDaily_ListDataTable tableSalesSummaryDaily_List;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesSummaryDaily_ListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesSummaryDaily_List = ((SalesSummaryDaily_ListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableSalesSummaryDaily_List.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'SalesSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_List.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesSummaryDaily_List.ItemNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNo\' in table \'SalesSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_List.ItemNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableSalesSummaryDaily_List.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'SalesSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_List.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDesc {
                get {
                    try {
                        return ((string)(this[this.tableSalesSummaryDaily_List.ItemDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc\' in table \'SalesSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_List.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Qty {
                get {
                    try {
                        return ((int)(this[this.tableSalesSummaryDaily_List.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'SalesSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_List.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesSummaryDaily_List.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'SalesSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_List.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalesAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesSummaryDaily_List.SalesAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesAmount\' in table \'SalesSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_List.SalesAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableSalesSummaryDaily_List.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableSalesSummaryDaily_List.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNoNull() {
                return this.IsNull(this.tableSalesSummaryDaily_List.ItemNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNoNull() {
                this[this.tableSalesSummaryDaily_List.ItemNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableSalesSummaryDaily_List.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableSalesSummaryDaily_List.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescNull() {
                return this.IsNull(this.tableSalesSummaryDaily_List.ItemDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescNull() {
                this[this.tableSalesSummaryDaily_List.ItemDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableSalesSummaryDaily_List.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableSalesSummaryDaily_List.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tableSalesSummaryDaily_List.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tableSalesSummaryDaily_List.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesAmountNull() {
                return this.IsNull(this.tableSalesSummaryDaily_List.SalesAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesAmountNull() {
                this[this.tableSalesSummaryDaily_List.SalesAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesSummaryDaily_PaymentTypeRow : global::System.Data.DataRow {
            
            private SalesSummaryDaily_PaymentTypeDataTable tableSalesSummaryDaily_PaymentType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesSummaryDaily_PaymentTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesSummaryDaily_PaymentType = ((SalesSummaryDaily_PaymentTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CASH {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesSummaryDaily_PaymentType.CASHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CASH\' in table \'SalesSummaryDaily_PaymentType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_PaymentType.CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MASTER {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesSummaryDaily_PaymentType.MASTERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MASTER\' in table \'SalesSummaryDaily_PaymentType\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_PaymentType.MASTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NETS {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesSummaryDaily_PaymentType.NETSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NETS\' in table \'SalesSummaryDaily_PaymentType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_PaymentType.NETSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VISA {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesSummaryDaily_PaymentType.VISAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VISA\' in table \'SalesSummaryDaily_PaymentType\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_PaymentType.VISAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCASHNull() {
                return this.IsNull(this.tableSalesSummaryDaily_PaymentType.CASHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCASHNull() {
                this[this.tableSalesSummaryDaily_PaymentType.CASHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMASTERNull() {
                return this.IsNull(this.tableSalesSummaryDaily_PaymentType.MASTERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMASTERNull() {
                this[this.tableSalesSummaryDaily_PaymentType.MASTERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETSNull() {
                return this.IsNull(this.tableSalesSummaryDaily_PaymentType.NETSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETSNull() {
                this[this.tableSalesSummaryDaily_PaymentType.NETSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVISANull() {
                return this.IsNull(this.tableSalesSummaryDaily_PaymentType.VISAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVISANull() {
                this[this.tableSalesSummaryDaily_PaymentType.VISAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesSummaryDaily_SalesDateRow : global::System.Data.DataRow {
            
            private SalesSummaryDaily_SalesDateDataTable tableSalesSummaryDaily_SalesDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesSummaryDaily_SalesDateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesSummaryDaily_SalesDate = ((SalesSummaryDaily_SalesDateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesSummaryDaily_SalesDate.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesDate\' in table \'SalesSummaryDaily_SalesDate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_SalesDate.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tableSalesSummaryDaily_SalesDate.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tableSalesSummaryDaily_SalesDate.SalesDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesSummaryDaily_OutletRow : global::System.Data.DataRow {
            
            private SalesSummaryDaily_OutletDataTable tableSalesSummaryDaily_Outlet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesSummaryDaily_OutletRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesSummaryDaily_Outlet = ((SalesSummaryDaily_OutletDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletName {
                get {
                    try {
                        return ((string)(this[this.tableSalesSummaryDaily_Outlet.OutletNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletName\' in table \'SalesSummaryDaily_Outlet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesSummaryDaily_Outlet.OutletNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletNameNull() {
                return this.IsNull(this.tableSalesSummaryDaily_Outlet.OutletNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletNameNull() {
                this[this.tableSalesSummaryDaily_Outlet.OutletNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PreOrderSummaryDaily_OrderDateRow : global::System.Data.DataRow {
            
            private PreOrderSummaryDaily_OrderDateDataTable tablePreOrderSummaryDaily_OrderDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PreOrderSummaryDaily_OrderDateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePreOrderSummaryDaily_OrderDate = ((PreOrderSummaryDaily_OrderDateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePreOrderSummaryDaily_OrderDate.OrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderDate\' in table \'PreOrderSummaryDaily_OrderDate\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_OrderDate.OrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDateNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_OrderDate.OrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDateNull() {
                this[this.tablePreOrderSummaryDaily_OrderDate.OrderDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PreOrderSummaryDaily_OutletRow : global::System.Data.DataRow {
            
            private PreOrderSummaryDaily_OutletDataTable tablePreOrderSummaryDaily_Outlet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PreOrderSummaryDaily_OutletRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePreOrderSummaryDaily_Outlet = ((PreOrderSummaryDaily_OutletDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutletName {
                get {
                    try {
                        return ((string)(this[this.tablePreOrderSummaryDaily_Outlet.OutletNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutletName\' in table \'PreOrderSummaryDaily_Outlet\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_Outlet.OutletNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutletNameNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_Outlet.OutletNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutletNameNull() {
                this[this.tablePreOrderSummaryDaily_Outlet.OutletNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PreOrderSummaryDaily_ListRow : global::System.Data.DataRow {
            
            private PreOrderSummaryDaily_ListDataTable tablePreOrderSummaryDaily_List;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PreOrderSummaryDaily_ListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePreOrderSummaryDaily_List = ((PreOrderSummaryDaily_ListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderHdrID {
                get {
                    try {
                        return ((string)(this[this.tablePreOrderSummaryDaily_List.OrderHdrIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderHdrID\' in table \'PreOrderSummaryDaily_List\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.OrderHdrIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderDetID {
                get {
                    try {
                        return ((string)(this[this.tablePreOrderSummaryDaily_List.OrderDetIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderDetID\' in table \'PreOrderSummaryDaily_List\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.OrderDetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MembershipNo {
                get {
                    try {
                        return ((string)(this[this.tablePreOrderSummaryDaily_List.MembershipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MembershipNo\' in table \'PreOrderSummaryDaily_List\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.MembershipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePreOrderSummaryDaily_List.OrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderDate\' in table \'PreOrderSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.OrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemNo {
                get {
                    try {
                        return ((string)(this[this.tablePreOrderSummaryDaily_List.ItemNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNo\' in table \'PreOrderSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.ItemNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tablePreOrderSummaryDaily_List.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'PreOrderSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDesc {
                get {
                    try {
                        return ((string)(this[this.tablePreOrderSummaryDaily_List.ItemDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc\' in table \'PreOrderSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryName {
                get {
                    try {
                        return ((string)(this[this.tablePreOrderSummaryDaily_List.CategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryName\' in table \'PreOrderSummaryDaily_List\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.CategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepartmentName {
                get {
                    try {
                        return ((string)(this[this.tablePreOrderSummaryDaily_List.DepartmentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepartmentName\' in table \'PreOrderSummaryDaily_List\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.DepartmentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tablePreOrderSummaryDaily_List.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'PreOrderSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablePreOrderSummaryDaily_List.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'PreOrderSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablePreOrderSummaryDaily_List.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'PreOrderSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Deposit {
                get {
                    try {
                        return ((decimal)(this[this.tablePreOrderSummaryDaily_List.DepositColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deposit\' in table \'PreOrderSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.DepositColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tablePreOrderSummaryDaily_List.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'PreOrderSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EstDel {
                get {
                    try {
                        return ((string)(this[this.tablePreOrderSummaryDaily_List.EstDelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstDel\' in table \'PreOrderSummaryDaily_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_List.EstDelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderHdrIDNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.OrderHdrIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderHdrIDNull() {
                this[this.tablePreOrderSummaryDaily_List.OrderHdrIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDetIDNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.OrderDetIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDetIDNull() {
                this[this.tablePreOrderSummaryDaily_List.OrderDetIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMembershipNoNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.MembershipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMembershipNoNull() {
                this[this.tablePreOrderSummaryDaily_List.MembershipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDateNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.OrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDateNull() {
                this[this.tablePreOrderSummaryDaily_List.OrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNoNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.ItemNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNoNull() {
                this[this.tablePreOrderSummaryDaily_List.ItemNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tablePreOrderSummaryDaily_List.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.ItemDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescNull() {
                this[this.tablePreOrderSummaryDaily_List.ItemDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNameNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.CategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNameNull() {
                this[this.tablePreOrderSummaryDaily_List.CategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentNameNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.DepartmentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentNameNull() {
                this[this.tablePreOrderSummaryDaily_List.DepartmentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tablePreOrderSummaryDaily_List.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tablePreOrderSummaryDaily_List.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablePreOrderSummaryDaily_List.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepositNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.DepositColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepositNull() {
                this[this.tablePreOrderSummaryDaily_List.DepositColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tablePreOrderSummaryDaily_List.BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstDelNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_List.EstDelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstDelNull() {
                this[this.tablePreOrderSummaryDaily_List.EstDelColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PreOrderSummaryDaily_PaymentRow : global::System.Data.DataRow {
            
            private PreOrderSummaryDaily_PaymentDataTable tablePreOrderSummaryDaily_Payment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PreOrderSummaryDaily_PaymentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePreOrderSummaryDaily_Payment = ((PreOrderSummaryDaily_PaymentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VISAX {
                get {
                    try {
                        return ((decimal)(this[this.tablePreOrderSummaryDaily_Payment.VISAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VISAX\' in table \'PreOrderSummaryDaily_Payment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_Payment.VISAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MASTER {
                get {
                    try {
                        return ((decimal)(this[this.tablePreOrderSummaryDaily_Payment.MASTERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MASTER\' in table \'PreOrderSummaryDaily_Payment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_Payment.MASTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CASH {
                get {
                    try {
                        return ((decimal)(this[this.tablePreOrderSummaryDaily_Payment.CASHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CASH\' in table \'PreOrderSummaryDaily_Payment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_Payment.CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NETSX {
                get {
                    try {
                        return ((decimal)(this[this.tablePreOrderSummaryDaily_Payment.NETSXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NETSX\' in table \'PreOrderSummaryDaily_Payment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrderSummaryDaily_Payment.NETSXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVISAXNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_Payment.VISAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVISAXNull() {
                this[this.tablePreOrderSummaryDaily_Payment.VISAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMASTERNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_Payment.MASTERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMASTERNull() {
                this[this.tablePreOrderSummaryDaily_Payment.MASTERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCASHNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_Payment.CASHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCASHNull() {
                this[this.tablePreOrderSummaryDaily_Payment.CASHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNETSXNull() {
                return this.IsNull(this.tablePreOrderSummaryDaily_Payment.NETSXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNETSXNull() {
                this[this.tablePreOrderSummaryDaily_Payment.NETSXColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PreOrder_ListRow : global::System.Data.DataRow {
            
            private PreOrder_ListDataTable tablePreOrder_List;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PreOrder_ListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePreOrder_List = ((PreOrder_ListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderDetID {
                get {
                    try {
                        return ((string)(this[this.tablePreOrder_List.OrderDetIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderDetID\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.OrderDetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MembershipNo {
                get {
                    try {
                        return ((string)(this[this.tablePreOrder_List.MembershipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MembershipNo\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.MembershipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePreOrder_List.OrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderDate\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.OrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemNo {
                get {
                    try {
                        return ((string)(this[this.tablePreOrder_List.ItemNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNo\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.ItemNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tablePreOrder_List.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDesc {
                get {
                    try {
                        return ((string)(this[this.tablePreOrder_List.ItemDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryName {
                get {
                    try {
                        return ((string)(this[this.tablePreOrder_List.CategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryName\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.CategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepartmentName {
                get {
                    try {
                        return ((string)(this[this.tablePreOrder_List.DepartmentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepartmentName\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.DepartmentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tablePreOrder_List.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablePreOrder_List.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablePreOrder_List.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Deposit {
                get {
                    try {
                        return ((decimal)(this[this.tablePreOrder_List.DepositColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deposit\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.DepositColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tablePreOrder_List.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EstDel {
                get {
                    try {
                        return ((string)(this[this.tablePreOrder_List.EstDelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstDel\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.EstDelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderHdrID {
                get {
                    try {
                        return ((string)(this[this.tablePreOrder_List.OrderHdrIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderHdrID\' in table \'PreOrder_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePreOrder_List.OrderHdrIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDetIDNull() {
                return this.IsNull(this.tablePreOrder_List.OrderDetIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDetIDNull() {
                this[this.tablePreOrder_List.OrderDetIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMembershipNoNull() {
                return this.IsNull(this.tablePreOrder_List.MembershipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMembershipNoNull() {
                this[this.tablePreOrder_List.MembershipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDateNull() {
                return this.IsNull(this.tablePreOrder_List.OrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDateNull() {
                this[this.tablePreOrder_List.OrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNoNull() {
                return this.IsNull(this.tablePreOrder_List.ItemNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNoNull() {
                this[this.tablePreOrder_List.ItemNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tablePreOrder_List.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tablePreOrder_List.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescNull() {
                return this.IsNull(this.tablePreOrder_List.ItemDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescNull() {
                this[this.tablePreOrder_List.ItemDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNameNull() {
                return this.IsNull(this.tablePreOrder_List.CategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNameNull() {
                this[this.tablePreOrder_List.CategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentNameNull() {
                return this.IsNull(this.tablePreOrder_List.DepartmentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentNameNull() {
                this[this.tablePreOrder_List.DepartmentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tablePreOrder_List.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tablePreOrder_List.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tablePreOrder_List.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tablePreOrder_List.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablePreOrder_List.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablePreOrder_List.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepositNull() {
                return this.IsNull(this.tablePreOrder_List.DepositColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepositNull() {
                this[this.tablePreOrder_List.DepositColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tablePreOrder_List.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tablePreOrder_List.BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstDelNull() {
                return this.IsNull(this.tablePreOrder_List.EstDelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstDelNull() {
                this[this.tablePreOrder_List.EstDelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderHdrIDNull() {
                return this.IsNull(this.tablePreOrder_List.OrderHdrIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderHdrIDNull() {
                this[this.tablePreOrder_List.OrderHdrIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockOnHandSummary_ListRowChangeEvent : global::System.EventArgs {
            
            private StockOnHandSummary_ListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_ListRowChangeEvent(StockOnHandSummary_ListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_ListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockOnHandSummary_CurrentDateRowChangeEvent : global::System.EventArgs {
            
            private StockOnHandSummary_CurrentDateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_CurrentDateRowChangeEvent(StockOnHandSummary_CurrentDateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_CurrentDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockOnHandSummary_LocationRowChangeEvent : global::System.EventArgs {
            
            private StockOnHandSummary_LocationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_LocationRowChangeEvent(StockOnHandSummary_LocationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOnHandSummary_LocationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesSummaryDaily_ListRowChangeEvent : global::System.EventArgs {
            
            private SalesSummaryDaily_ListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_ListRowChangeEvent(SalesSummaryDaily_ListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_ListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesSummaryDaily_PaymentTypeRowChangeEvent : global::System.EventArgs {
            
            private SalesSummaryDaily_PaymentTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_PaymentTypeRowChangeEvent(SalesSummaryDaily_PaymentTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_PaymentTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesSummaryDaily_SalesDateRowChangeEvent : global::System.EventArgs {
            
            private SalesSummaryDaily_SalesDateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_SalesDateRowChangeEvent(SalesSummaryDaily_SalesDateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_SalesDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesSummaryDaily_OutletRowChangeEvent : global::System.EventArgs {
            
            private SalesSummaryDaily_OutletRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_OutletRowChangeEvent(SalesSummaryDaily_OutletRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSummaryDaily_OutletRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PreOrderSummaryDaily_OrderDateRowChangeEvent : global::System.EventArgs {
            
            private PreOrderSummaryDaily_OrderDateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_OrderDateRowChangeEvent(PreOrderSummaryDaily_OrderDateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_OrderDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PreOrderSummaryDaily_OutletRowChangeEvent : global::System.EventArgs {
            
            private PreOrderSummaryDaily_OutletRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_OutletRowChangeEvent(PreOrderSummaryDaily_OutletRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_OutletRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PreOrderSummaryDaily_ListRowChangeEvent : global::System.EventArgs {
            
            private PreOrderSummaryDaily_ListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_ListRowChangeEvent(PreOrderSummaryDaily_ListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_ListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PreOrderSummaryDaily_PaymentRowChangeEvent : global::System.EventArgs {
            
            private PreOrderSummaryDaily_PaymentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_PaymentRowChangeEvent(PreOrderSummaryDaily_PaymentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrderSummaryDaily_PaymentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PreOrder_ListRowChangeEvent : global::System.EventArgs {
            
            private PreOrder_ListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrder_ListRowChangeEvent(PreOrder_ListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PreOrder_ListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591