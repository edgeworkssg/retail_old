//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
#pragma warning disable 1591

namespace Synchronizer.PowerPOSSync {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SynchronizationSoap", Namespace="http://www.edgeworks.com.sg/")]
    public partial class Synchronization : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FetchOrdersCCMWOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchNewMembershipSignUpsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchLogTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderHdrListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Synchronization() {
            this.Url = global::Synchronizer.Properties.Settings.Default.Synchronizer_PowerPOSSync_Synchronization;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FetchOrdersCCMWCompletedEventHandler FetchOrdersCCMWCompleted;
        
        /// <remarks/>
        public event FetchOrdersCompletedEventHandler FetchOrdersCompleted;
        
        /// <remarks/>
        public event FetchNewMembershipSignUpsCompletedEventHandler FetchNewMembershipSignUpsCompleted;
        
        /// <remarks/>
        public event FetchLogTableCompletedEventHandler FetchLogTableCompleted;
        
        /// <remarks/>
        public event GetDataTableCompletedEventHandler GetDataTableCompleted;
        
        /// <remarks/>
        public event GetOrderHdrListCompletedEventHandler GetOrderHdrListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchOrdersCCMW", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchOrdersCCMW([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsHeaders, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsDetails, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsReceiptHdr, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsReceiptDet) {
            object[] results = this.Invoke("FetchOrdersCCMW", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsReceiptHdr,
                        dsReceiptDet});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchOrdersCCMWAsync(string[][] dsHeaders, string[][] dsDetails, string[][] dsReceiptHdr, string[][] dsReceiptDet) {
            this.FetchOrdersCCMWAsync(dsHeaders, dsDetails, dsReceiptHdr, dsReceiptDet, null);
        }
        
        /// <remarks/>
        public void FetchOrdersCCMWAsync(string[][] dsHeaders, string[][] dsDetails, string[][] dsReceiptHdr, string[][] dsReceiptDet, object userState) {
            if ((this.FetchOrdersCCMWOperationCompleted == null)) {
                this.FetchOrdersCCMWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchOrdersCCMWOperationCompleted);
            }
            this.InvokeAsync("FetchOrdersCCMW", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsReceiptHdr,
                        dsReceiptDet}, this.FetchOrdersCCMWOperationCompleted, userState);
        }
        
        private void OnFetchOrdersCCMWOperationCompleted(object arg) {
            if ((this.FetchOrdersCCMWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchOrdersCCMWCompleted(this, new FetchOrdersCCMWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchOrders", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchOrders(System.Data.DataSet dsHeaders, System.Data.DataSet dsDetails, System.Data.DataSet dsReceiptHdr, System.Data.DataSet dsReceiptDet, System.Data.DataSet dsComm) {
            object[] results = this.Invoke("FetchOrders", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsReceiptHdr,
                        dsReceiptDet,
                        dsComm});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchOrdersAsync(System.Data.DataSet dsHeaders, System.Data.DataSet dsDetails, System.Data.DataSet dsReceiptHdr, System.Data.DataSet dsReceiptDet, System.Data.DataSet dsComm) {
            this.FetchOrdersAsync(dsHeaders, dsDetails, dsReceiptHdr, dsReceiptDet, dsComm, null);
        }
        
        /// <remarks/>
        public void FetchOrdersAsync(System.Data.DataSet dsHeaders, System.Data.DataSet dsDetails, System.Data.DataSet dsReceiptHdr, System.Data.DataSet dsReceiptDet, System.Data.DataSet dsComm, object userState) {
            if ((this.FetchOrdersOperationCompleted == null)) {
                this.FetchOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchOrdersOperationCompleted);
            }
            this.InvokeAsync("FetchOrders", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsReceiptHdr,
                        dsReceiptDet,
                        dsComm}, this.FetchOrdersOperationCompleted, userState);
        }
        
        private void OnFetchOrdersOperationCompleted(object arg) {
            if ((this.FetchOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchOrdersCompleted(this, new FetchOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchNewMembershipSignUps", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchNewMembershipSignUps(System.Data.DataSet dsMember) {
            object[] results = this.Invoke("FetchNewMembershipSignUps", new object[] {
                        dsMember});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchNewMembershipSignUpsAsync(System.Data.DataSet dsMember) {
            this.FetchNewMembershipSignUpsAsync(dsMember, null);
        }
        
        /// <remarks/>
        public void FetchNewMembershipSignUpsAsync(System.Data.DataSet dsMember, object userState) {
            if ((this.FetchNewMembershipSignUpsOperationCompleted == null)) {
                this.FetchNewMembershipSignUpsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchNewMembershipSignUpsOperationCompleted);
            }
            this.InvokeAsync("FetchNewMembershipSignUps", new object[] {
                        dsMember}, this.FetchNewMembershipSignUpsOperationCompleted, userState);
        }
        
        private void OnFetchNewMembershipSignUpsOperationCompleted(object arg) {
            if ((this.FetchNewMembershipSignUpsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchNewMembershipSignUpsCompleted(this, new FetchNewMembershipSignUpsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchLogTable", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchLogTable(System.Data.DataSet dsLogTable, string logTableName) {
            object[] results = this.Invoke("FetchLogTable", new object[] {
                        dsLogTable,
                        logTableName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchLogTableAsync(System.Data.DataSet dsLogTable, string logTableName) {
            this.FetchLogTableAsync(dsLogTable, logTableName, null);
        }
        
        /// <remarks/>
        public void FetchLogTableAsync(System.Data.DataSet dsLogTable, string logTableName, object userState) {
            if ((this.FetchLogTableOperationCompleted == null)) {
                this.FetchLogTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchLogTableOperationCompleted);
            }
            this.InvokeAsync("FetchLogTable", new object[] {
                        dsLogTable,
                        logTableName}, this.FetchLogTableOperationCompleted, userState);
        }
        
        private void OnFetchLogTableOperationCompleted(object arg) {
            if ((this.FetchLogTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchLogTableCompleted(this, new FetchLogTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetDataTable", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataTable(string tableName, bool syncAll) {
            object[] results = this.Invoke("GetDataTable", new object[] {
                        tableName,
                        syncAll});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataTableAsync(string tableName, bool syncAll) {
            this.GetDataTableAsync(tableName, syncAll, null);
        }
        
        /// <remarks/>
        public void GetDataTableAsync(string tableName, bool syncAll, object userState) {
            if ((this.GetDataTableOperationCompleted == null)) {
                this.GetDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataTableOperationCompleted);
            }
            this.InvokeAsync("GetDataTable", new object[] {
                        tableName,
                        syncAll}, this.GetDataTableOperationCompleted, userState);
        }
        
        private void OnGetDataTableOperationCompleted(object arg) {
            if ((this.GetDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataTableCompleted(this, new GetDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetOrderHdrList", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetOrderHdrList(System.DateTime startDate, System.DateTime endDate, int PointOfSaleID) {
            object[] results = this.Invoke("GetOrderHdrList", new object[] {
                        startDate,
                        endDate,
                        PointOfSaleID});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderHdrListAsync(System.DateTime startDate, System.DateTime endDate, int PointOfSaleID) {
            this.GetOrderHdrListAsync(startDate, endDate, PointOfSaleID, null);
        }
        
        /// <remarks/>
        public void GetOrderHdrListAsync(System.DateTime startDate, System.DateTime endDate, int PointOfSaleID, object userState) {
            if ((this.GetOrderHdrListOperationCompleted == null)) {
                this.GetOrderHdrListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderHdrListOperationCompleted);
            }
            this.InvokeAsync("GetOrderHdrList", new object[] {
                        startDate,
                        endDate,
                        PointOfSaleID}, this.GetOrderHdrListOperationCompleted, userState);
        }
        
        private void OnGetOrderHdrListOperationCompleted(object arg) {
            if ((this.GetOrderHdrListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderHdrListCompleted(this, new GetOrderHdrListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FetchOrdersCCMWCompletedEventHandler(object sender, FetchOrdersCCMWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchOrdersCCMWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchOrdersCCMWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FetchOrdersCompletedEventHandler(object sender, FetchOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FetchNewMembershipSignUpsCompletedEventHandler(object sender, FetchNewMembershipSignUpsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchNewMembershipSignUpsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchNewMembershipSignUpsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FetchLogTableCompletedEventHandler(object sender, FetchLogTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchLogTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchLogTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDataTableCompletedEventHandler(object sender, GetDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetOrderHdrListCompletedEventHandler(object sender, GetOrderHdrListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderHdrListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderHdrListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591