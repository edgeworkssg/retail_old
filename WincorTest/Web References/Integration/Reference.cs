//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5420.
// 
#pragma warning disable 1591

namespace WincorTest.Integration {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IntegrationSoap", Namespace="http://www.edgeworks.com.sg/")]
    public partial class Integration : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetItemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadMemberDataNewOrUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback StockOutItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockQuantityByItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendNewMembershipSignupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSalesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsEmailRegisteredOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsNRICRegisteredOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberTransactionHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberFULLTransactionHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberTransactionHistoryByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberFULLTransactionHistoryByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeductPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentPointsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Integration() {
            this.Url = global::WincorTest.Properties.Settings.Default.WincorTest_Integration_Integration;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetItemListCompletedEventHandler GetItemListCompleted;
        
        /// <remarks/>
        public event GetMemberListCompletedEventHandler GetMemberListCompleted;
        
        /// <remarks/>
        public event DownloadMemberDataNewOrUpdatedCompletedEventHandler DownloadMemberDataNewOrUpdatedCompleted;
        
        /// <remarks/>
        public event StockOutItemCompletedEventHandler StockOutItemCompleted;
        
        /// <remarks/>
        public event GetStockQuantityCompletedEventHandler GetStockQuantityCompleted;
        
        /// <remarks/>
        public event GetStockQuantityByItemCompletedEventHandler GetStockQuantityByItemCompleted;
        
        /// <remarks/>
        public event SendNewMembershipSignupCompletedEventHandler SendNewMembershipSignupCompleted;
        
        /// <remarks/>
        public event AddProductCompletedEventHandler AddProductCompleted;
        
        /// <remarks/>
        public event DeleteProductCompletedEventHandler DeleteProductCompleted;
        
        /// <remarks/>
        public event DeleteMemberCompletedEventHandler DeleteMemberCompleted;
        
        /// <remarks/>
        public event SendSalesCompletedEventHandler SendSalesCompleted;
        
        /// <remarks/>
        public event IsEmailRegisteredCompletedEventHandler IsEmailRegisteredCompleted;
        
        /// <remarks/>
        public event IsNRICRegisteredCompletedEventHandler IsNRICRegisteredCompleted;
        
        /// <remarks/>
        public event GetMemberTransactionHistoryCompletedEventHandler GetMemberTransactionHistoryCompleted;
        
        /// <remarks/>
        public event GetMemberFULLTransactionHistoryCompletedEventHandler GetMemberFULLTransactionHistoryCompleted;
        
        /// <remarks/>
        public event GetMemberTransactionHistoryByDateCompletedEventHandler GetMemberTransactionHistoryByDateCompleted;
        
        /// <remarks/>
        public event GetMemberFULLTransactionHistoryByDateCompletedEventHandler GetMemberFULLTransactionHistoryByDateCompleted;
        
        /// <remarks/>
        public event AddPointsCompletedEventHandler AddPointsCompleted;
        
        /// <remarks/>
        public event DeductPointsCompletedEventHandler DeductPointsCompleted;
        
        /// <remarks/>
        public event GetCurrentPointsCompletedEventHandler GetCurrentPointsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetItemList", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemList(bool syncAll) {
            object[] results = this.Invoke("GetItemList", new object[] {
                        syncAll});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemListAsync(bool syncAll) {
            this.GetItemListAsync(syncAll, null);
        }
        
        /// <remarks/>
        public void GetItemListAsync(bool syncAll, object userState) {
            if ((this.GetItemListOperationCompleted == null)) {
                this.GetItemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemListOperationCompleted);
            }
            this.InvokeAsync("GetItemList", new object[] {
                        syncAll}, this.GetItemListOperationCompleted, userState);
        }
        
        private void OnGetItemListOperationCompleted(object arg) {
            if ((this.GetItemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemListCompleted(this, new GetItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetMemberList", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberList(bool syncAll) {
            object[] results = this.Invoke("GetMemberList", new object[] {
                        syncAll});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberListAsync(bool syncAll) {
            this.GetMemberListAsync(syncAll, null);
        }
        
        /// <remarks/>
        public void GetMemberListAsync(bool syncAll, object userState) {
            if ((this.GetMemberListOperationCompleted == null)) {
                this.GetMemberListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberListOperationCompleted);
            }
            this.InvokeAsync("GetMemberList", new object[] {
                        syncAll}, this.GetMemberListOperationCompleted, userState);
        }
        
        private void OnGetMemberListOperationCompleted(object arg) {
            if ((this.GetMemberListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberListCompleted(this, new GetMemberListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DownloadMemberDataNewOrUpdated", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadMemberDataNewOrUpdated(System.DateTime SinceLastTimestamp) {
            object[] results = this.Invoke("DownloadMemberDataNewOrUpdated", new object[] {
                        SinceLastTimestamp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadMemberDataNewOrUpdatedAsync(System.DateTime SinceLastTimestamp) {
            this.DownloadMemberDataNewOrUpdatedAsync(SinceLastTimestamp, null);
        }
        
        /// <remarks/>
        public void DownloadMemberDataNewOrUpdatedAsync(System.DateTime SinceLastTimestamp, object userState) {
            if ((this.DownloadMemberDataNewOrUpdatedOperationCompleted == null)) {
                this.DownloadMemberDataNewOrUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadMemberDataNewOrUpdatedOperationCompleted);
            }
            this.InvokeAsync("DownloadMemberDataNewOrUpdated", new object[] {
                        SinceLastTimestamp}, this.DownloadMemberDataNewOrUpdatedOperationCompleted, userState);
        }
        
        private void OnDownloadMemberDataNewOrUpdatedOperationCompleted(object arg) {
            if ((this.DownloadMemberDataNewOrUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadMemberDataNewOrUpdatedCompleted(this, new DownloadMemberDataNewOrUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/StockOutItem", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StockOutItem(string itemno, int quantity, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool deductRemainingQty, out string newRefNo, out string status) {
            object[] results = this.Invoke("StockOutItem", new object[] {
                        itemno,
                        quantity,
                        username,
                        StockOutReasonID,
                        InventoryLocationID,
                        IsAdjustment,
                        deductRemainingQty});
            newRefNo = ((string)(results[1]));
            status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StockOutItemAsync(string itemno, int quantity, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool deductRemainingQty) {
            this.StockOutItemAsync(itemno, quantity, username, StockOutReasonID, InventoryLocationID, IsAdjustment, deductRemainingQty, null);
        }
        
        /// <remarks/>
        public void StockOutItemAsync(string itemno, int quantity, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool deductRemainingQty, object userState) {
            if ((this.StockOutItemOperationCompleted == null)) {
                this.StockOutItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockOutItemOperationCompleted);
            }
            this.InvokeAsync("StockOutItem", new object[] {
                        itemno,
                        quantity,
                        username,
                        StockOutReasonID,
                        InventoryLocationID,
                        IsAdjustment,
                        deductRemainingQty}, this.StockOutItemOperationCompleted, userState);
        }
        
        private void OnStockOutItemOperationCompleted(object arg) {
            if ((this.StockOutItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StockOutItemCompleted(this, new StockOutItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetStockQuantity", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InventoryItem[] GetStockQuantity(int InventoryLocation) {
            object[] results = this.Invoke("GetStockQuantity", new object[] {
                        InventoryLocation});
            return ((InventoryItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStockQuantityAsync(int InventoryLocation) {
            this.GetStockQuantityAsync(InventoryLocation, null);
        }
        
        /// <remarks/>
        public void GetStockQuantityAsync(int InventoryLocation, object userState) {
            if ((this.GetStockQuantityOperationCompleted == null)) {
                this.GetStockQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockQuantityOperationCompleted);
            }
            this.InvokeAsync("GetStockQuantity", new object[] {
                        InventoryLocation}, this.GetStockQuantityOperationCompleted, userState);
        }
        
        private void OnGetStockQuantityOperationCompleted(object arg) {
            if ((this.GetStockQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockQuantityCompleted(this, new GetStockQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetStockQuantityByItem", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStockQuantityByItem(int InventoryLocation, string ItemNo) {
            object[] results = this.Invoke("GetStockQuantityByItem", new object[] {
                        InventoryLocation,
                        ItemNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockQuantityByItemAsync(int InventoryLocation, string ItemNo) {
            this.GetStockQuantityByItemAsync(InventoryLocation, ItemNo, null);
        }
        
        /// <remarks/>
        public void GetStockQuantityByItemAsync(int InventoryLocation, string ItemNo, object userState) {
            if ((this.GetStockQuantityByItemOperationCompleted == null)) {
                this.GetStockQuantityByItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockQuantityByItemOperationCompleted);
            }
            this.InvokeAsync("GetStockQuantityByItem", new object[] {
                        InventoryLocation,
                        ItemNo}, this.GetStockQuantityByItemOperationCompleted, userState);
        }
        
        private void OnGetStockQuantityByItemOperationCompleted(object arg) {
            if ((this.GetStockQuantityByItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockQuantityByItemCompleted(this, new GetStockQuantityByItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SendNewMembershipSignup", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendNewMembershipSignup(string membershipno, int membershipgroupid, string nametoappear, string firstname, string lastname, string address, string email, string country, string nric, string mobile, string gender, out string status) {
            object[] results = this.Invoke("SendNewMembershipSignup", new object[] {
                        membershipno,
                        membershipgroupid,
                        nametoappear,
                        firstname,
                        lastname,
                        address,
                        email,
                        country,
                        nric,
                        mobile,
                        gender});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendNewMembershipSignupAsync(string membershipno, int membershipgroupid, string nametoappear, string firstname, string lastname, string address, string email, string country, string nric, string mobile, string gender) {
            this.SendNewMembershipSignupAsync(membershipno, membershipgroupid, nametoappear, firstname, lastname, address, email, country, nric, mobile, gender, null);
        }
        
        /// <remarks/>
        public void SendNewMembershipSignupAsync(string membershipno, int membershipgroupid, string nametoappear, string firstname, string lastname, string address, string email, string country, string nric, string mobile, string gender, object userState) {
            if ((this.SendNewMembershipSignupOperationCompleted == null)) {
                this.SendNewMembershipSignupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendNewMembershipSignupOperationCompleted);
            }
            this.InvokeAsync("SendNewMembershipSignup", new object[] {
                        membershipno,
                        membershipgroupid,
                        nametoappear,
                        firstname,
                        lastname,
                        address,
                        email,
                        country,
                        nric,
                        mobile,
                        gender}, this.SendNewMembershipSignupOperationCompleted, userState);
        }
        
        private void OnSendNewMembershipSignupOperationCompleted(object arg) {
            if ((this.SendNewMembershipSignupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendNewMembershipSignupCompleted(this, new SendNewMembershipSignupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/AddProduct", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddProduct(
                    string ProductID, 
                    string ProductName, 
                    string CategoryName, 
                    string DepartmentName, 
                    string Barcode, 
                    bool IsInventory, 
                    decimal RetailPrice, 
                    decimal FactoryPrice, 
                    string itemDescription, 
                    string Remark, 
                    string GSTRule, 
                    string Attributes1, 
                    string Attributes2, 
                    string Attributes3, 
                    string Attributes4, 
                    string Attributes5, 
                    string Attributes6, 
                    string Attributes7, 
                    string Attributes8, 
                    bool isMatrixItem, 
                    bool NonDiscountable, 
                    bool isPointRedeemable, 
                    out string status) {
            object[] results = this.Invoke("AddProduct", new object[] {
                        ProductID,
                        ProductName,
                        CategoryName,
                        DepartmentName,
                        Barcode,
                        IsInventory,
                        RetailPrice,
                        FactoryPrice,
                        itemDescription,
                        Remark,
                        GSTRule,
                        Attributes1,
                        Attributes2,
                        Attributes3,
                        Attributes4,
                        Attributes5,
                        Attributes6,
                        Attributes7,
                        Attributes8,
                        isMatrixItem,
                        NonDiscountable,
                        isPointRedeemable});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddProductAsync(
                    string ProductID, 
                    string ProductName, 
                    string CategoryName, 
                    string DepartmentName, 
                    string Barcode, 
                    bool IsInventory, 
                    decimal RetailPrice, 
                    decimal FactoryPrice, 
                    string itemDescription, 
                    string Remark, 
                    string GSTRule, 
                    string Attributes1, 
                    string Attributes2, 
                    string Attributes3, 
                    string Attributes4, 
                    string Attributes5, 
                    string Attributes6, 
                    string Attributes7, 
                    string Attributes8, 
                    bool isMatrixItem, 
                    bool NonDiscountable, 
                    bool isPointRedeemable) {
            this.AddProductAsync(ProductID, ProductName, CategoryName, DepartmentName, Barcode, IsInventory, RetailPrice, FactoryPrice, itemDescription, Remark, GSTRule, Attributes1, Attributes2, Attributes3, Attributes4, Attributes5, Attributes6, Attributes7, Attributes8, isMatrixItem, NonDiscountable, isPointRedeemable, null);
        }
        
        /// <remarks/>
        public void AddProductAsync(
                    string ProductID, 
                    string ProductName, 
                    string CategoryName, 
                    string DepartmentName, 
                    string Barcode, 
                    bool IsInventory, 
                    decimal RetailPrice, 
                    decimal FactoryPrice, 
                    string itemDescription, 
                    string Remark, 
                    string GSTRule, 
                    string Attributes1, 
                    string Attributes2, 
                    string Attributes3, 
                    string Attributes4, 
                    string Attributes5, 
                    string Attributes6, 
                    string Attributes7, 
                    string Attributes8, 
                    bool isMatrixItem, 
                    bool NonDiscountable, 
                    bool isPointRedeemable, 
                    object userState) {
            if ((this.AddProductOperationCompleted == null)) {
                this.AddProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProductOperationCompleted);
            }
            this.InvokeAsync("AddProduct", new object[] {
                        ProductID,
                        ProductName,
                        CategoryName,
                        DepartmentName,
                        Barcode,
                        IsInventory,
                        RetailPrice,
                        FactoryPrice,
                        itemDescription,
                        Remark,
                        GSTRule,
                        Attributes1,
                        Attributes2,
                        Attributes3,
                        Attributes4,
                        Attributes5,
                        Attributes6,
                        Attributes7,
                        Attributes8,
                        isMatrixItem,
                        NonDiscountable,
                        isPointRedeemable}, this.AddProductOperationCompleted, userState);
        }
        
        private void OnAddProductOperationCompleted(object arg) {
            if ((this.AddProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProductCompleted(this, new AddProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DeleteProduct", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteProduct(string ProductID, out string status) {
            object[] results = this.Invoke("DeleteProduct", new object[] {
                        ProductID});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProductAsync(string ProductID) {
            this.DeleteProductAsync(ProductID, null);
        }
        
        /// <remarks/>
        public void DeleteProductAsync(string ProductID, object userState) {
            if ((this.DeleteProductOperationCompleted == null)) {
                this.DeleteProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductOperationCompleted);
            }
            this.InvokeAsync("DeleteProduct", new object[] {
                        ProductID}, this.DeleteProductOperationCompleted, userState);
        }
        
        private void OnDeleteProductOperationCompleted(object arg) {
            if ((this.DeleteProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductCompleted(this, new DeleteProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DeleteMember", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMember(string MembershipNo, out string status) {
            object[] results = this.Invoke("DeleteMember", new object[] {
                        MembershipNo});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMemberAsync(string MembershipNo) {
            this.DeleteMemberAsync(MembershipNo, null);
        }
        
        /// <remarks/>
        public void DeleteMemberAsync(string MembershipNo, object userState) {
            if ((this.DeleteMemberOperationCompleted == null)) {
                this.DeleteMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMemberOperationCompleted);
            }
            this.InvokeAsync("DeleteMember", new object[] {
                        MembershipNo}, this.DeleteMemberOperationCompleted, userState);
        }
        
        private void OnDeleteMemberOperationCompleted(object arg) {
            if ((this.DeleteMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMemberCompleted(this, new DeleteMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SendSales", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSales(string orderdata, string membershipno, string cashier, string paymentdata) {
            object[] results = this.Invoke("SendSales", new object[] {
                        orderdata,
                        membershipno,
                        cashier,
                        paymentdata});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSalesAsync(string orderdata, string membershipno, string cashier, string paymentdata) {
            this.SendSalesAsync(orderdata, membershipno, cashier, paymentdata, null);
        }
        
        /// <remarks/>
        public void SendSalesAsync(string orderdata, string membershipno, string cashier, string paymentdata, object userState) {
            if ((this.SendSalesOperationCompleted == null)) {
                this.SendSalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSalesOperationCompleted);
            }
            this.InvokeAsync("SendSales", new object[] {
                        orderdata,
                        membershipno,
                        cashier,
                        paymentdata}, this.SendSalesOperationCompleted, userState);
        }
        
        private void OnSendSalesOperationCompleted(object arg) {
            if ((this.SendSalesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSalesCompleted(this, new SendSalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/IsEmailRegistered", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsEmailRegistered(string emailAddress) {
            object[] results = this.Invoke("IsEmailRegistered", new object[] {
                        emailAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsEmailRegisteredAsync(string emailAddress) {
            this.IsEmailRegisteredAsync(emailAddress, null);
        }
        
        /// <remarks/>
        public void IsEmailRegisteredAsync(string emailAddress, object userState) {
            if ((this.IsEmailRegisteredOperationCompleted == null)) {
                this.IsEmailRegisteredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsEmailRegisteredOperationCompleted);
            }
            this.InvokeAsync("IsEmailRegistered", new object[] {
                        emailAddress}, this.IsEmailRegisteredOperationCompleted, userState);
        }
        
        private void OnIsEmailRegisteredOperationCompleted(object arg) {
            if ((this.IsEmailRegisteredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsEmailRegisteredCompleted(this, new IsEmailRegisteredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/IsNRICRegistered", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsNRICRegistered(string nric) {
            object[] results = this.Invoke("IsNRICRegistered", new object[] {
                        nric});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsNRICRegisteredAsync(string nric) {
            this.IsNRICRegisteredAsync(nric, null);
        }
        
        /// <remarks/>
        public void IsNRICRegisteredAsync(string nric, object userState) {
            if ((this.IsNRICRegisteredOperationCompleted == null)) {
                this.IsNRICRegisteredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsNRICRegisteredOperationCompleted);
            }
            this.InvokeAsync("IsNRICRegistered", new object[] {
                        nric}, this.IsNRICRegisteredOperationCompleted, userState);
        }
        
        private void OnIsNRICRegisteredOperationCompleted(object arg) {
            if ((this.IsNRICRegisteredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsNRICRegisteredCompleted(this, new IsNRICRegisteredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetMemberTransactionHistory", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberTransactionHistory(string membershipNo) {
            object[] results = this.Invoke("GetMemberTransactionHistory", new object[] {
                        membershipNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberTransactionHistoryAsync(string membershipNo) {
            this.GetMemberTransactionHistoryAsync(membershipNo, null);
        }
        
        /// <remarks/>
        public void GetMemberTransactionHistoryAsync(string membershipNo, object userState) {
            if ((this.GetMemberTransactionHistoryOperationCompleted == null)) {
                this.GetMemberTransactionHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberTransactionHistoryOperationCompleted);
            }
            this.InvokeAsync("GetMemberTransactionHistory", new object[] {
                        membershipNo}, this.GetMemberTransactionHistoryOperationCompleted, userState);
        }
        
        private void OnGetMemberTransactionHistoryOperationCompleted(object arg) {
            if ((this.GetMemberTransactionHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberTransactionHistoryCompleted(this, new GetMemberTransactionHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetMemberFULLTransactionHistory", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberFULLTransactionHistory(string membershipNo) {
            object[] results = this.Invoke("GetMemberFULLTransactionHistory", new object[] {
                        membershipNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberFULLTransactionHistoryAsync(string membershipNo) {
            this.GetMemberFULLTransactionHistoryAsync(membershipNo, null);
        }
        
        /// <remarks/>
        public void GetMemberFULLTransactionHistoryAsync(string membershipNo, object userState) {
            if ((this.GetMemberFULLTransactionHistoryOperationCompleted == null)) {
                this.GetMemberFULLTransactionHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberFULLTransactionHistoryOperationCompleted);
            }
            this.InvokeAsync("GetMemberFULLTransactionHistory", new object[] {
                        membershipNo}, this.GetMemberFULLTransactionHistoryOperationCompleted, userState);
        }
        
        private void OnGetMemberFULLTransactionHistoryOperationCompleted(object arg) {
            if ((this.GetMemberFULLTransactionHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberFULLTransactionHistoryCompleted(this, new GetMemberFULLTransactionHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetMemberTransactionHistoryByDate", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberTransactionHistoryByDate(string membershipNo, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetMemberTransactionHistoryByDate", new object[] {
                        membershipNo,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberTransactionHistoryByDateAsync(string membershipNo, System.DateTime startDate, System.DateTime endDate) {
            this.GetMemberTransactionHistoryByDateAsync(membershipNo, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetMemberTransactionHistoryByDateAsync(string membershipNo, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetMemberTransactionHistoryByDateOperationCompleted == null)) {
                this.GetMemberTransactionHistoryByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberTransactionHistoryByDateOperationCompleted);
            }
            this.InvokeAsync("GetMemberTransactionHistoryByDate", new object[] {
                        membershipNo,
                        startDate,
                        endDate}, this.GetMemberTransactionHistoryByDateOperationCompleted, userState);
        }
        
        private void OnGetMemberTransactionHistoryByDateOperationCompleted(object arg) {
            if ((this.GetMemberTransactionHistoryByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberTransactionHistoryByDateCompleted(this, new GetMemberTransactionHistoryByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetMemberFULLTransactionHistoryByDate", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemberFULLTransactionHistoryByDate(string membershipNo, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetMemberFULLTransactionHistoryByDate", new object[] {
                        membershipNo,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberFULLTransactionHistoryByDateAsync(string membershipNo, System.DateTime startDate, System.DateTime endDate) {
            this.GetMemberFULLTransactionHistoryByDateAsync(membershipNo, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetMemberFULLTransactionHistoryByDateAsync(string membershipNo, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetMemberFULLTransactionHistoryByDateOperationCompleted == null)) {
                this.GetMemberFULLTransactionHistoryByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberFULLTransactionHistoryByDateOperationCompleted);
            }
            this.InvokeAsync("GetMemberFULLTransactionHistoryByDate", new object[] {
                        membershipNo,
                        startDate,
                        endDate}, this.GetMemberFULLTransactionHistoryByDateOperationCompleted, userState);
        }
        
        private void OnGetMemberFULLTransactionHistoryByDateOperationCompleted(object arg) {
            if ((this.GetMemberFULLTransactionHistoryByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberFULLTransactionHistoryByDateCompleted(this, new GetMemberFULLTransactionHistoryByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/AddPoints", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPoints(string membershipNo, string orderHdrID, System.DateTime transactionDate, int validPeriod, decimal points, string userName) {
            object[] results = this.Invoke("AddPoints", new object[] {
                        membershipNo,
                        orderHdrID,
                        transactionDate,
                        validPeriod,
                        points,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPointsAsync(string membershipNo, string orderHdrID, System.DateTime transactionDate, int validPeriod, decimal points, string userName) {
            this.AddPointsAsync(membershipNo, orderHdrID, transactionDate, validPeriod, points, userName, null);
        }
        
        /// <remarks/>
        public void AddPointsAsync(string membershipNo, string orderHdrID, System.DateTime transactionDate, int validPeriod, decimal points, string userName, object userState) {
            if ((this.AddPointsOperationCompleted == null)) {
                this.AddPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPointsOperationCompleted);
            }
            this.InvokeAsync("AddPoints", new object[] {
                        membershipNo,
                        orderHdrID,
                        transactionDate,
                        validPeriod,
                        points,
                        userName}, this.AddPointsOperationCompleted, userState);
        }
        
        private void OnAddPointsOperationCompleted(object arg) {
            if ((this.AddPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPointsCompleted(this, new AddPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DeductPoints", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeductPoints(string membershipNo, string orderHdrID, System.DateTime transactionDate, decimal points, string userName) {
            object[] results = this.Invoke("DeductPoints", new object[] {
                        membershipNo,
                        orderHdrID,
                        transactionDate,
                        points,
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeductPointsAsync(string membershipNo, string orderHdrID, System.DateTime transactionDate, decimal points, string userName) {
            this.DeductPointsAsync(membershipNo, orderHdrID, transactionDate, points, userName, null);
        }
        
        /// <remarks/>
        public void DeductPointsAsync(string membershipNo, string orderHdrID, System.DateTime transactionDate, decimal points, string userName, object userState) {
            if ((this.DeductPointsOperationCompleted == null)) {
                this.DeductPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeductPointsOperationCompleted);
            }
            this.InvokeAsync("DeductPoints", new object[] {
                        membershipNo,
                        orderHdrID,
                        transactionDate,
                        points,
                        userName}, this.DeductPointsOperationCompleted, userState);
        }
        
        private void OnDeductPointsOperationCompleted(object arg) {
            if ((this.DeductPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeductPointsCompleted(this, new DeductPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetCurrentPoints", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentPoints(string membershipNo, System.DateTime currentDate) {
            object[] results = this.Invoke("GetCurrentPoints", new object[] {
                        membershipNo,
                        currentDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentPointsAsync(string membershipNo, System.DateTime currentDate) {
            this.GetCurrentPointsAsync(membershipNo, currentDate, null);
        }
        
        /// <remarks/>
        public void GetCurrentPointsAsync(string membershipNo, System.DateTime currentDate, object userState) {
            if ((this.GetCurrentPointsOperationCompleted == null)) {
                this.GetCurrentPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentPointsOperationCompleted);
            }
            this.InvokeAsync("GetCurrentPoints", new object[] {
                        membershipNo,
                        currentDate}, this.GetCurrentPointsOperationCompleted, userState);
        }
        
        private void OnGetCurrentPointsOperationCompleted(object arg) {
            if ((this.GetCurrentPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentPointsCompleted(this, new GetCurrentPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.edgeworks.com.sg/")]
    public partial class InventoryItem {
        
        private string itemNoField;
        
        private decimal qtyField;
        
        /// <remarks/>
        public string ItemNo {
            get {
                return this.itemNoField;
            }
            set {
                this.itemNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetItemListCompletedEventHandler(object sender, GetItemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetMemberListCompletedEventHandler(object sender, GetMemberListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void DownloadMemberDataNewOrUpdatedCompletedEventHandler(object sender, DownloadMemberDataNewOrUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadMemberDataNewOrUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadMemberDataNewOrUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void StockOutItemCompletedEventHandler(object sender, StockOutItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StockOutItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StockOutItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetStockQuantityCompletedEventHandler(object sender, GetStockQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InventoryItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InventoryItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetStockQuantityByItemCompletedEventHandler(object sender, GetStockQuantityByItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockQuantityByItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockQuantityByItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SendNewMembershipSignupCompletedEventHandler(object sender, SendNewMembershipSignupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendNewMembershipSignupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendNewMembershipSignupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void AddProductCompletedEventHandler(object sender, AddProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void DeleteProductCompletedEventHandler(object sender, DeleteProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void DeleteMemberCompletedEventHandler(object sender, DeleteMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SendSalesCompletedEventHandler(object sender, SendSalesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void IsEmailRegisteredCompletedEventHandler(object sender, IsEmailRegisteredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsEmailRegisteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsEmailRegisteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void IsNRICRegisteredCompletedEventHandler(object sender, IsNRICRegisteredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsNRICRegisteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsNRICRegisteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetMemberTransactionHistoryCompletedEventHandler(object sender, GetMemberTransactionHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberTransactionHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberTransactionHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetMemberFULLTransactionHistoryCompletedEventHandler(object sender, GetMemberFULLTransactionHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberFULLTransactionHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberFULLTransactionHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetMemberTransactionHistoryByDateCompletedEventHandler(object sender, GetMemberTransactionHistoryByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberTransactionHistoryByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberTransactionHistoryByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetMemberFULLTransactionHistoryByDateCompletedEventHandler(object sender, GetMemberFULLTransactionHistoryByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberFULLTransactionHistoryByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberFULLTransactionHistoryByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void AddPointsCompletedEventHandler(object sender, AddPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void DeductPointsCompletedEventHandler(object sender, DeductPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeductPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeductPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetCurrentPointsCompletedEventHandler(object sender, GetCurrentPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591