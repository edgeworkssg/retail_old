//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5420.
// 
#pragma warning disable 1591

namespace MallIntegrationServerPicker.MallIntegrationService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MallIntegrationService", Namespace="http://www.edgeworks.com.sg")]
    public partial class MallIntegrationServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private UserCredentials userCredentialsValueField;
        
        private System.Threading.SendOrPostCallback SendDataFromServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAPIKeyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MallIntegrationServer() {
            this.Url = global::MallIntegrationServerPicker.Properties.Settings.Default.MallIntegrationServerPicker_MallIntegrationService_MallIntegrationServer;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public UserCredentials UserCredentialsValue {
            get {
                return this.userCredentialsValueField;
            }
            set {
                this.userCredentialsValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendDataFromServerCompletedEventHandler SendDataFromServerCompleted;
        
        /// <remarks/>
        public event getAPIKeyCompletedEventHandler getAPIKeyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SendDataFromServer", RequestNamespace="http://www.edgeworks.com.sg", ResponseNamespace="http://www.edgeworks.com.sg", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendDataFromServer(string data) {
            object[] results = this.Invoke("SendDataFromServer", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendDataFromServerAsync(string data) {
            this.SendDataFromServerAsync(data, null);
        }
        
        /// <remarks/>
        public void SendDataFromServerAsync(string data, object userState) {
            if ((this.SendDataFromServerOperationCompleted == null)) {
                this.SendDataFromServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDataFromServerOperationCompleted);
            }
            this.InvokeAsync("SendDataFromServer", new object[] {
                        data}, this.SendDataFromServerOperationCompleted, userState);
        }
        
        private void OnSendDataFromServerOperationCompleted(object arg) {
            if ((this.SendDataFromServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDataFromServerCompleted(this, new SendDataFromServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/getAPIKey", RequestNamespace="http://www.edgeworks.com.sg", ResponseNamespace="http://www.edgeworks.com.sg", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAPIKey(string tenantCode) {
            object[] results = this.Invoke("getAPIKey", new object[] {
                        tenantCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAPIKeyAsync(string tenantCode) {
            this.getAPIKeyAsync(tenantCode, null);
        }
        
        /// <remarks/>
        public void getAPIKeyAsync(string tenantCode, object userState) {
            if ((this.getAPIKeyOperationCompleted == null)) {
                this.getAPIKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAPIKeyOperationCompleted);
            }
            this.InvokeAsync("getAPIKey", new object[] {
                        tenantCode}, this.getAPIKeyOperationCompleted, userState);
        }
        
        private void OngetAPIKeyOperationCompleted(object arg) {
            if ((this.getAPIKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAPIKeyCompleted(this, new getAPIKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.edgeworks.com.sg")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.edgeworks.com.sg", IsNullable=false)]
    public partial class UserCredentials : System.Web.Services.Protocols.SoapHeader {
        
        private string mallCodeField;
        
        private string userNameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string mallCode {
            get {
                return this.mallCodeField;
            }
            set {
                this.mallCodeField = value;
            }
        }
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SendDataFromServerCompletedEventHandler(object sender, SendDataFromServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDataFromServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDataFromServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void getAPIKeyCompletedEventHandler(object sender, getAPIKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAPIKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAPIKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591