//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4959
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WinPowerPOS.TestingReport {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("datClosingReport")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class datClosingReport : global::System.Data.DataSet {
        
        private CounterCloseLogDataTable tableCounterCloseLog;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public datClosingReport() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected datClosingReport(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CounterCloseLog"] != null)) {
                    base.Tables.Add(new CounterCloseLogDataTable(ds.Tables["CounterCloseLog"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CounterCloseLogDataTable CounterCloseLog {
            get {
                return this.tableCounterCloseLog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            datClosingReport cln = ((datClosingReport)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CounterCloseLog"] != null)) {
                    base.Tables.Add(new CounterCloseLogDataTable(ds.Tables["CounterCloseLog"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCounterCloseLog = ((CounterCloseLogDataTable)(base.Tables["CounterCloseLog"]));
            if ((initTable == true)) {
                if ((this.tableCounterCloseLog != null)) {
                    this.tableCounterCloseLog.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "datClosingReport";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/datClosingReport.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCounterCloseLog = new CounterCloseLogDataTable();
            base.Tables.Add(this.tableCounterCloseLog);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCounterCloseLog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            datClosingReport ds = new datClosingReport();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CounterCloseLogRowChangeEventHandler(object sender, CounterCloseLogRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CounterCloseLogDataTable : global::System.Data.TypedTableBase<CounterCloseLogRow> {
            
            private global::System.Data.DataColumn columnCounterCloseLogID;
            
            private global::System.Data.DataColumn columnCounterCloseID;
            
            private global::System.Data.DataColumn columnFloatBalance;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnCashier;
            
            private global::System.Data.DataColumn columnSupervisor;
            
            private global::System.Data.DataColumn columnCashIn;
            
            private global::System.Data.DataColumn columnCashOut;
            
            private global::System.Data.DataColumn columnOpeningBalance;
            
            private global::System.Data.DataColumn columnTotalSystemRecorded;
            
            private global::System.Data.DataColumn columnCashCollected;
            
            private global::System.Data.DataColumn columnCashRecorded;
            
            private global::System.Data.DataColumn columnNetsCollected;
            
            private global::System.Data.DataColumn columnNetsRecorded;
            
            private global::System.Data.DataColumn columnNetsTerminalID;
            
            private global::System.Data.DataColumn columnVisaCollected;
            
            private global::System.Data.DataColumn columnVisaRecorded;
            
            private global::System.Data.DataColumn columnVisaBatchNo;
            
            private global::System.Data.DataColumn columnAmexCollected;
            
            private global::System.Data.DataColumn columnAmexRecorded;
            
            private global::System.Data.DataColumn columnAmexBatchNo;
            
            private global::System.Data.DataColumn columnChinaNetsCollected;
            
            private global::System.Data.DataColumn columnChinaNetsRecorded;
            
            private global::System.Data.DataColumn columnChinaNetsTerminalID;
            
            private global::System.Data.DataColumn columnVoucherCollected;
            
            private global::System.Data.DataColumn columnVoucherRecorded;
            
            private global::System.Data.DataColumn columnDepositBagNo;
            
            private global::System.Data.DataColumn columnTotalActualCollected;
            
            private global::System.Data.DataColumn columnClosingCashOut;
            
            private global::System.Data.DataColumn columnVariance;
            
            private global::System.Data.DataColumn columnPointOfSaleID;
            
            private global::System.Data.DataColumn columnCreatedOn;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnModifiedOn;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnUniqueID;
            
            private global::System.Data.DataColumn columnuserfld1;
            
            private global::System.Data.DataColumn columnuserfld2;
            
            private global::System.Data.DataColumn columnuserfld3;
            
            private global::System.Data.DataColumn columnuserfld4;
            
            private global::System.Data.DataColumn columnuserfld5;
            
            private global::System.Data.DataColumn columnuserfld6;
            
            private global::System.Data.DataColumn columnuserfld7;
            
            private global::System.Data.DataColumn columnuserfld8;
            
            private global::System.Data.DataColumn columnuserfld9;
            
            private global::System.Data.DataColumn columnuserfld10;
            
            private global::System.Data.DataColumn columnuserflag1;
            
            private global::System.Data.DataColumn columnuserflag2;
            
            private global::System.Data.DataColumn columnuserflag3;
            
            private global::System.Data.DataColumn columnuserflag4;
            
            private global::System.Data.DataColumn columnuserflag5;
            
            private global::System.Data.DataColumn columnuserfloat1;
            
            private global::System.Data.DataColumn columnuserfloat2;
            
            private global::System.Data.DataColumn columnuserfloat3;
            
            private global::System.Data.DataColumn columnuserfloat4;
            
            private global::System.Data.DataColumn columnuserfloat5;
            
            private global::System.Data.DataColumn columnuserint1;
            
            private global::System.Data.DataColumn columnuserint2;
            
            private global::System.Data.DataColumn columnuserint3;
            
            private global::System.Data.DataColumn columnuserint4;
            
            private global::System.Data.DataColumn columnuserint5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CounterCloseLogDataTable() {
                this.TableName = "CounterCloseLog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CounterCloseLogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CounterCloseLogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CounterCloseLogIDColumn {
                get {
                    return this.columnCounterCloseLogID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CounterCloseIDColumn {
                get {
                    return this.columnCounterCloseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FloatBalanceColumn {
                get {
                    return this.columnFloatBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashierColumn {
                get {
                    return this.columnCashier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupervisorColumn {
                get {
                    return this.columnSupervisor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashInColumn {
                get {
                    return this.columnCashIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashOutColumn {
                get {
                    return this.columnCashOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpeningBalanceColumn {
                get {
                    return this.columnOpeningBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalSystemRecordedColumn {
                get {
                    return this.columnTotalSystemRecorded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashCollectedColumn {
                get {
                    return this.columnCashCollected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashRecordedColumn {
                get {
                    return this.columnCashRecorded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetsCollectedColumn {
                get {
                    return this.columnNetsCollected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetsRecordedColumn {
                get {
                    return this.columnNetsRecorded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetsTerminalIDColumn {
                get {
                    return this.columnNetsTerminalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VisaCollectedColumn {
                get {
                    return this.columnVisaCollected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VisaRecordedColumn {
                get {
                    return this.columnVisaRecorded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VisaBatchNoColumn {
                get {
                    return this.columnVisaBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmexCollectedColumn {
                get {
                    return this.columnAmexCollected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmexRecordedColumn {
                get {
                    return this.columnAmexRecorded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmexBatchNoColumn {
                get {
                    return this.columnAmexBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChinaNetsCollectedColumn {
                get {
                    return this.columnChinaNetsCollected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChinaNetsRecordedColumn {
                get {
                    return this.columnChinaNetsRecorded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChinaNetsTerminalIDColumn {
                get {
                    return this.columnChinaNetsTerminalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherCollectedColumn {
                get {
                    return this.columnVoucherCollected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherRecordedColumn {
                get {
                    return this.columnVoucherRecorded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepositBagNoColumn {
                get {
                    return this.columnDepositBagNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalActualCollectedColumn {
                get {
                    return this.columnTotalActualCollected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosingCashOutColumn {
                get {
                    return this.columnClosingCashOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VarianceColumn {
                get {
                    return this.columnVariance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PointOfSaleIDColumn {
                get {
                    return this.columnPointOfSaleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedOnColumn {
                get {
                    return this.columnCreatedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedOnColumn {
                get {
                    return this.columnModifiedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UniqueIDColumn {
                get {
                    return this.columnUniqueID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfld1Column {
                get {
                    return this.columnuserfld1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfld2Column {
                get {
                    return this.columnuserfld2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfld3Column {
                get {
                    return this.columnuserfld3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfld4Column {
                get {
                    return this.columnuserfld4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfld5Column {
                get {
                    return this.columnuserfld5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfld6Column {
                get {
                    return this.columnuserfld6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfld7Column {
                get {
                    return this.columnuserfld7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfld8Column {
                get {
                    return this.columnuserfld8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfld9Column {
                get {
                    return this.columnuserfld9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfld10Column {
                get {
                    return this.columnuserfld10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userflag1Column {
                get {
                    return this.columnuserflag1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userflag2Column {
                get {
                    return this.columnuserflag2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userflag3Column {
                get {
                    return this.columnuserflag3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userflag4Column {
                get {
                    return this.columnuserflag4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userflag5Column {
                get {
                    return this.columnuserflag5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfloat1Column {
                get {
                    return this.columnuserfloat1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfloat2Column {
                get {
                    return this.columnuserfloat2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfloat3Column {
                get {
                    return this.columnuserfloat3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfloat4Column {
                get {
                    return this.columnuserfloat4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userfloat5Column {
                get {
                    return this.columnuserfloat5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userint1Column {
                get {
                    return this.columnuserint1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userint2Column {
                get {
                    return this.columnuserint2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userint3Column {
                get {
                    return this.columnuserint3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userint4Column {
                get {
                    return this.columnuserint4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userint5Column {
                get {
                    return this.columnuserint5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CounterCloseLogRow this[int index] {
                get {
                    return ((CounterCloseLogRow)(this.Rows[index]));
                }
            }
            
            public event CounterCloseLogRowChangeEventHandler CounterCloseLogRowChanging;
            
            public event CounterCloseLogRowChangeEventHandler CounterCloseLogRowChanged;
            
            public event CounterCloseLogRowChangeEventHandler CounterCloseLogRowDeleting;
            
            public event CounterCloseLogRowChangeEventHandler CounterCloseLogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCounterCloseLogRow(CounterCloseLogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CounterCloseLogRow AddCounterCloseLogRow(
                        string CounterCloseID, 
                        decimal FloatBalance, 
                        System.DateTime StartTime, 
                        System.DateTime EndTime, 
                        string Cashier, 
                        string Supervisor, 
                        decimal CashIn, 
                        decimal CashOut, 
                        decimal OpeningBalance, 
                        decimal TotalSystemRecorded, 
                        decimal CashCollected, 
                        decimal CashRecorded, 
                        decimal NetsCollected, 
                        decimal NetsRecorded, 
                        string NetsTerminalID, 
                        decimal VisaCollected, 
                        decimal VisaRecorded, 
                        string VisaBatchNo, 
                        decimal AmexCollected, 
                        decimal AmexRecorded, 
                        string AmexBatchNo, 
                        decimal ChinaNetsCollected, 
                        decimal ChinaNetsRecorded, 
                        string ChinaNetsTerminalID, 
                        decimal VoucherCollected, 
                        decimal VoucherRecorded, 
                        string DepositBagNo, 
                        decimal TotalActualCollected, 
                        decimal ClosingCashOut, 
                        decimal Variance, 
                        int PointOfSaleID, 
                        System.DateTime CreatedOn, 
                        string CreatedBy, 
                        System.DateTime ModifiedOn, 
                        string ModifiedBy, 
                        System.Guid UniqueID, 
                        string userfld1, 
                        string userfld2, 
                        string userfld3, 
                        string userfld4, 
                        string userfld5, 
                        string userfld6, 
                        string userfld7, 
                        string userfld8, 
                        string userfld9, 
                        string userfld10, 
                        bool userflag1, 
                        bool userflag2, 
                        bool userflag3, 
                        bool userflag4, 
                        bool userflag5, 
                        decimal userfloat1, 
                        decimal userfloat2, 
                        decimal userfloat3, 
                        decimal userfloat4, 
                        decimal userfloat5, 
                        int userint1, 
                        int userint2, 
                        int userint3, 
                        int userint4, 
                        int userint5) {
                CounterCloseLogRow rowCounterCloseLogRow = ((CounterCloseLogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CounterCloseID,
                        FloatBalance,
                        StartTime,
                        EndTime,
                        Cashier,
                        Supervisor,
                        CashIn,
                        CashOut,
                        OpeningBalance,
                        TotalSystemRecorded,
                        CashCollected,
                        CashRecorded,
                        NetsCollected,
                        NetsRecorded,
                        NetsTerminalID,
                        VisaCollected,
                        VisaRecorded,
                        VisaBatchNo,
                        AmexCollected,
                        AmexRecorded,
                        AmexBatchNo,
                        ChinaNetsCollected,
                        ChinaNetsRecorded,
                        ChinaNetsTerminalID,
                        VoucherCollected,
                        VoucherRecorded,
                        DepositBagNo,
                        TotalActualCollected,
                        ClosingCashOut,
                        Variance,
                        PointOfSaleID,
                        CreatedOn,
                        CreatedBy,
                        ModifiedOn,
                        ModifiedBy,
                        UniqueID,
                        userfld1,
                        userfld2,
                        userfld3,
                        userfld4,
                        userfld5,
                        userfld6,
                        userfld7,
                        userfld8,
                        userfld9,
                        userfld10,
                        userflag1,
                        userflag2,
                        userflag3,
                        userflag4,
                        userflag5,
                        userfloat1,
                        userfloat2,
                        userfloat3,
                        userfloat4,
                        userfloat5,
                        userint1,
                        userint2,
                        userint3,
                        userint4,
                        userint5};
                rowCounterCloseLogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCounterCloseLogRow);
                return rowCounterCloseLogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CounterCloseLogRow FindByCounterCloseLogID(int CounterCloseLogID) {
                return ((CounterCloseLogRow)(this.Rows.Find(new object[] {
                            CounterCloseLogID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CounterCloseLogDataTable cln = ((CounterCloseLogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CounterCloseLogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCounterCloseLogID = base.Columns["CounterCloseLogID"];
                this.columnCounterCloseID = base.Columns["CounterCloseID"];
                this.columnFloatBalance = base.Columns["FloatBalance"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnCashier = base.Columns["Cashier"];
                this.columnSupervisor = base.Columns["Supervisor"];
                this.columnCashIn = base.Columns["CashIn"];
                this.columnCashOut = base.Columns["CashOut"];
                this.columnOpeningBalance = base.Columns["OpeningBalance"];
                this.columnTotalSystemRecorded = base.Columns["TotalSystemRecorded"];
                this.columnCashCollected = base.Columns["CashCollected"];
                this.columnCashRecorded = base.Columns["CashRecorded"];
                this.columnNetsCollected = base.Columns["NetsCollected"];
                this.columnNetsRecorded = base.Columns["NetsRecorded"];
                this.columnNetsTerminalID = base.Columns["NetsTerminalID"];
                this.columnVisaCollected = base.Columns["VisaCollected"];
                this.columnVisaRecorded = base.Columns["VisaRecorded"];
                this.columnVisaBatchNo = base.Columns["VisaBatchNo"];
                this.columnAmexCollected = base.Columns["AmexCollected"];
                this.columnAmexRecorded = base.Columns["AmexRecorded"];
                this.columnAmexBatchNo = base.Columns["AmexBatchNo"];
                this.columnChinaNetsCollected = base.Columns["ChinaNetsCollected"];
                this.columnChinaNetsRecorded = base.Columns["ChinaNetsRecorded"];
                this.columnChinaNetsTerminalID = base.Columns["ChinaNetsTerminalID"];
                this.columnVoucherCollected = base.Columns["VoucherCollected"];
                this.columnVoucherRecorded = base.Columns["VoucherRecorded"];
                this.columnDepositBagNo = base.Columns["DepositBagNo"];
                this.columnTotalActualCollected = base.Columns["TotalActualCollected"];
                this.columnClosingCashOut = base.Columns["ClosingCashOut"];
                this.columnVariance = base.Columns["Variance"];
                this.columnPointOfSaleID = base.Columns["PointOfSaleID"];
                this.columnCreatedOn = base.Columns["CreatedOn"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnModifiedOn = base.Columns["ModifiedOn"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnUniqueID = base.Columns["UniqueID"];
                this.columnuserfld1 = base.Columns["userfld1"];
                this.columnuserfld2 = base.Columns["userfld2"];
                this.columnuserfld3 = base.Columns["userfld3"];
                this.columnuserfld4 = base.Columns["userfld4"];
                this.columnuserfld5 = base.Columns["userfld5"];
                this.columnuserfld6 = base.Columns["userfld6"];
                this.columnuserfld7 = base.Columns["userfld7"];
                this.columnuserfld8 = base.Columns["userfld8"];
                this.columnuserfld9 = base.Columns["userfld9"];
                this.columnuserfld10 = base.Columns["userfld10"];
                this.columnuserflag1 = base.Columns["userflag1"];
                this.columnuserflag2 = base.Columns["userflag2"];
                this.columnuserflag3 = base.Columns["userflag3"];
                this.columnuserflag4 = base.Columns["userflag4"];
                this.columnuserflag5 = base.Columns["userflag5"];
                this.columnuserfloat1 = base.Columns["userfloat1"];
                this.columnuserfloat2 = base.Columns["userfloat2"];
                this.columnuserfloat3 = base.Columns["userfloat3"];
                this.columnuserfloat4 = base.Columns["userfloat4"];
                this.columnuserfloat5 = base.Columns["userfloat5"];
                this.columnuserint1 = base.Columns["userint1"];
                this.columnuserint2 = base.Columns["userint2"];
                this.columnuserint3 = base.Columns["userint3"];
                this.columnuserint4 = base.Columns["userint4"];
                this.columnuserint5 = base.Columns["userint5"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCounterCloseLogID = new global::System.Data.DataColumn("CounterCloseLogID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounterCloseLogID);
                this.columnCounterCloseID = new global::System.Data.DataColumn("CounterCloseID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounterCloseID);
                this.columnFloatBalance = new global::System.Data.DataColumn("FloatBalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloatBalance);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnCashier = new global::System.Data.DataColumn("Cashier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashier);
                this.columnSupervisor = new global::System.Data.DataColumn("Supervisor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisor);
                this.columnCashIn = new global::System.Data.DataColumn("CashIn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashIn);
                this.columnCashOut = new global::System.Data.DataColumn("CashOut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashOut);
                this.columnOpeningBalance = new global::System.Data.DataColumn("OpeningBalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningBalance);
                this.columnTotalSystemRecorded = new global::System.Data.DataColumn("TotalSystemRecorded", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSystemRecorded);
                this.columnCashCollected = new global::System.Data.DataColumn("CashCollected", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashCollected);
                this.columnCashRecorded = new global::System.Data.DataColumn("CashRecorded", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashRecorded);
                this.columnNetsCollected = new global::System.Data.DataColumn("NetsCollected", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetsCollected);
                this.columnNetsRecorded = new global::System.Data.DataColumn("NetsRecorded", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetsRecorded);
                this.columnNetsTerminalID = new global::System.Data.DataColumn("NetsTerminalID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetsTerminalID);
                this.columnVisaCollected = new global::System.Data.DataColumn("VisaCollected", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisaCollected);
                this.columnVisaRecorded = new global::System.Data.DataColumn("VisaRecorded", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisaRecorded);
                this.columnVisaBatchNo = new global::System.Data.DataColumn("VisaBatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisaBatchNo);
                this.columnAmexCollected = new global::System.Data.DataColumn("AmexCollected", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmexCollected);
                this.columnAmexRecorded = new global::System.Data.DataColumn("AmexRecorded", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmexRecorded);
                this.columnAmexBatchNo = new global::System.Data.DataColumn("AmexBatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmexBatchNo);
                this.columnChinaNetsCollected = new global::System.Data.DataColumn("ChinaNetsCollected", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChinaNetsCollected);
                this.columnChinaNetsRecorded = new global::System.Data.DataColumn("ChinaNetsRecorded", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChinaNetsRecorded);
                this.columnChinaNetsTerminalID = new global::System.Data.DataColumn("ChinaNetsTerminalID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChinaNetsTerminalID);
                this.columnVoucherCollected = new global::System.Data.DataColumn("VoucherCollected", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherCollected);
                this.columnVoucherRecorded = new global::System.Data.DataColumn("VoucherRecorded", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherRecorded);
                this.columnDepositBagNo = new global::System.Data.DataColumn("DepositBagNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositBagNo);
                this.columnTotalActualCollected = new global::System.Data.DataColumn("TotalActualCollected", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalActualCollected);
                this.columnClosingCashOut = new global::System.Data.DataColumn("ClosingCashOut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingCashOut);
                this.columnVariance = new global::System.Data.DataColumn("Variance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariance);
                this.columnPointOfSaleID = new global::System.Data.DataColumn("PointOfSaleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointOfSaleID);
                this.columnCreatedOn = new global::System.Data.DataColumn("CreatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedOn);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnModifiedOn = new global::System.Data.DataColumn("ModifiedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedOn);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnUniqueID = new global::System.Data.DataColumn("UniqueID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUniqueID);
                this.columnuserfld1 = new global::System.Data.DataColumn("userfld1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfld1);
                this.columnuserfld2 = new global::System.Data.DataColumn("userfld2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfld2);
                this.columnuserfld3 = new global::System.Data.DataColumn("userfld3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfld3);
                this.columnuserfld4 = new global::System.Data.DataColumn("userfld4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfld4);
                this.columnuserfld5 = new global::System.Data.DataColumn("userfld5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfld5);
                this.columnuserfld6 = new global::System.Data.DataColumn("userfld6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfld6);
                this.columnuserfld7 = new global::System.Data.DataColumn("userfld7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfld7);
                this.columnuserfld8 = new global::System.Data.DataColumn("userfld8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfld8);
                this.columnuserfld9 = new global::System.Data.DataColumn("userfld9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfld9);
                this.columnuserfld10 = new global::System.Data.DataColumn("userfld10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfld10);
                this.columnuserflag1 = new global::System.Data.DataColumn("userflag1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserflag1);
                this.columnuserflag2 = new global::System.Data.DataColumn("userflag2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserflag2);
                this.columnuserflag3 = new global::System.Data.DataColumn("userflag3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserflag3);
                this.columnuserflag4 = new global::System.Data.DataColumn("userflag4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserflag4);
                this.columnuserflag5 = new global::System.Data.DataColumn("userflag5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserflag5);
                this.columnuserfloat1 = new global::System.Data.DataColumn("userfloat1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfloat1);
                this.columnuserfloat2 = new global::System.Data.DataColumn("userfloat2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfloat2);
                this.columnuserfloat3 = new global::System.Data.DataColumn("userfloat3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfloat3);
                this.columnuserfloat4 = new global::System.Data.DataColumn("userfloat4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfloat4);
                this.columnuserfloat5 = new global::System.Data.DataColumn("userfloat5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserfloat5);
                this.columnuserint1 = new global::System.Data.DataColumn("userint1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserint1);
                this.columnuserint2 = new global::System.Data.DataColumn("userint2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserint2);
                this.columnuserint3 = new global::System.Data.DataColumn("userint3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserint3);
                this.columnuserint4 = new global::System.Data.DataColumn("userint4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserint4);
                this.columnuserint5 = new global::System.Data.DataColumn("userint5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserint5);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCounterCloseLogID}, true));
                this.columnCounterCloseLogID.AutoIncrement = true;
                this.columnCounterCloseLogID.AutoIncrementSeed = -1;
                this.columnCounterCloseLogID.AutoIncrementStep = -1;
                this.columnCounterCloseLogID.AllowDBNull = false;
                this.columnCounterCloseLogID.ReadOnly = true;
                this.columnCounterCloseLogID.Unique = true;
                this.columnCounterCloseID.AllowDBNull = false;
                this.columnCounterCloseID.MaxLength = 16;
                this.columnFloatBalance.AllowDBNull = false;
                this.columnStartTime.AllowDBNull = false;
                this.columnEndTime.AllowDBNull = false;
                this.columnCashier.AllowDBNull = false;
                this.columnCashier.MaxLength = 50;
                this.columnSupervisor.AllowDBNull = false;
                this.columnSupervisor.MaxLength = 50;
                this.columnCashIn.AllowDBNull = false;
                this.columnCashOut.AllowDBNull = false;
                this.columnOpeningBalance.AllowDBNull = false;
                this.columnTotalSystemRecorded.AllowDBNull = false;
                this.columnCashCollected.AllowDBNull = false;
                this.columnNetsCollected.AllowDBNull = false;
                this.columnNetsTerminalID.MaxLength = 50;
                this.columnVisaCollected.AllowDBNull = false;
                this.columnVisaBatchNo.MaxLength = 50;
                this.columnAmexCollected.AllowDBNull = false;
                this.columnAmexBatchNo.MaxLength = 50;
                this.columnChinaNetsCollected.AllowDBNull = false;
                this.columnChinaNetsTerminalID.MaxLength = 50;
                this.columnVoucherCollected.AllowDBNull = false;
                this.columnDepositBagNo.MaxLength = 50;
                this.columnTotalActualCollected.AllowDBNull = false;
                this.columnClosingCashOut.AllowDBNull = false;
                this.columnVariance.AllowDBNull = false;
                this.columnPointOfSaleID.AllowDBNull = false;
                this.columnCreatedOn.AllowDBNull = false;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 50;
                this.columnModifiedOn.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 50;
                this.columnUniqueID.AllowDBNull = false;
                this.columnuserfld1.MaxLength = 50;
                this.columnuserfld2.MaxLength = 50;
                this.columnuserfld3.MaxLength = 50;
                this.columnuserfld4.MaxLength = 50;
                this.columnuserfld5.MaxLength = 50;
                this.columnuserfld6.MaxLength = 50;
                this.columnuserfld7.MaxLength = 50;
                this.columnuserfld8.MaxLength = 50;
                this.columnuserfld9.MaxLength = 50;
                this.columnuserfld10.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CounterCloseLogRow NewCounterCloseLogRow() {
                return ((CounterCloseLogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CounterCloseLogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CounterCloseLogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CounterCloseLogRowChanged != null)) {
                    this.CounterCloseLogRowChanged(this, new CounterCloseLogRowChangeEvent(((CounterCloseLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CounterCloseLogRowChanging != null)) {
                    this.CounterCloseLogRowChanging(this, new CounterCloseLogRowChangeEvent(((CounterCloseLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CounterCloseLogRowDeleted != null)) {
                    this.CounterCloseLogRowDeleted(this, new CounterCloseLogRowChangeEvent(((CounterCloseLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CounterCloseLogRowDeleting != null)) {
                    this.CounterCloseLogRowDeleting(this, new CounterCloseLogRowChangeEvent(((CounterCloseLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCounterCloseLogRow(CounterCloseLogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                datClosingReport ds = new datClosingReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CounterCloseLogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CounterCloseLogRow : global::System.Data.DataRow {
            
            private CounterCloseLogDataTable tableCounterCloseLog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CounterCloseLogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCounterCloseLog = ((CounterCloseLogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CounterCloseLogID {
                get {
                    return ((int)(this[this.tableCounterCloseLog.CounterCloseLogIDColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.CounterCloseLogIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CounterCloseID {
                get {
                    return ((string)(this[this.tableCounterCloseLog.CounterCloseIDColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.CounterCloseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FloatBalance {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.FloatBalanceColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.FloatBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCounterCloseLog.StartTimeColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCounterCloseLog.EndTimeColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cashier {
                get {
                    return ((string)(this[this.tableCounterCloseLog.CashierColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.CashierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Supervisor {
                get {
                    return ((string)(this[this.tableCounterCloseLog.SupervisorColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.SupervisorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CashIn {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.CashInColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.CashInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CashOut {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.CashOutColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.CashOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OpeningBalance {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.OpeningBalanceColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.OpeningBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalSystemRecorded {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.TotalSystemRecordedColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.TotalSystemRecordedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CashCollected {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.CashCollectedColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.CashCollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CashRecorded {
                get {
                    try {
                        return ((decimal)(this[this.tableCounterCloseLog.CashRecordedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashRecorded\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.CashRecordedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetsCollected {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.NetsCollectedColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.NetsCollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetsRecorded {
                get {
                    try {
                        return ((decimal)(this[this.tableCounterCloseLog.NetsRecordedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetsRecorded\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.NetsRecordedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetsTerminalID {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.NetsTerminalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetsTerminalID\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.NetsTerminalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VisaCollected {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.VisaCollectedColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.VisaCollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VisaRecorded {
                get {
                    try {
                        return ((decimal)(this[this.tableCounterCloseLog.VisaRecordedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisaRecorded\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.VisaRecordedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VisaBatchNo {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.VisaBatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VisaBatchNo\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.VisaBatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmexCollected {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.AmexCollectedColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.AmexCollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmexRecorded {
                get {
                    try {
                        return ((decimal)(this[this.tableCounterCloseLog.AmexRecordedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmexRecorded\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.AmexRecordedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AmexBatchNo {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.AmexBatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmexBatchNo\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.AmexBatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ChinaNetsCollected {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.ChinaNetsCollectedColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.ChinaNetsCollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ChinaNetsRecorded {
                get {
                    try {
                        return ((decimal)(this[this.tableCounterCloseLog.ChinaNetsRecordedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChinaNetsRecorded\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.ChinaNetsRecordedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChinaNetsTerminalID {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.ChinaNetsTerminalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChinaNetsTerminalID\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.ChinaNetsTerminalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VoucherCollected {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.VoucherCollectedColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.VoucherCollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VoucherRecorded {
                get {
                    try {
                        return ((decimal)(this[this.tableCounterCloseLog.VoucherRecordedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherRecorded\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.VoucherRecordedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DepositBagNo {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.DepositBagNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepositBagNo\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.DepositBagNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalActualCollected {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.TotalActualCollectedColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.TotalActualCollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ClosingCashOut {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.ClosingCashOutColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.ClosingCashOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Variance {
                get {
                    return ((decimal)(this[this.tableCounterCloseLog.VarianceColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.VarianceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PointOfSaleID {
                get {
                    return ((int)(this[this.tableCounterCloseLog.PointOfSaleIDColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.PointOfSaleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedOn {
                get {
                    return ((global::System.DateTime)(this[this.tableCounterCloseLog.CreatedOnColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.CreatedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCounterCloseLog.CreatedByColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedOn {
                get {
                    return ((global::System.DateTime)(this[this.tableCounterCloseLog.ModifiedOnColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.ModifiedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCounterCloseLog.ModifiedByColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid UniqueID {
                get {
                    return ((global::System.Guid)(this[this.tableCounterCloseLog.UniqueIDColumn]));
                }
                set {
                    this[this.tableCounterCloseLog.UniqueIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userfld1 {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.userfld1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfld1\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfld1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userfld2 {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.userfld2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfld2\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfld2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userfld3 {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.userfld3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfld3\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfld3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userfld4 {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.userfld4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfld4\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfld4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userfld5 {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.userfld5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfld5\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfld5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userfld6 {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.userfld6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfld6\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfld6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userfld7 {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.userfld7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfld7\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfld7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userfld8 {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.userfld8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfld8\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfld8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userfld9 {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.userfld9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfld9\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfld9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userfld10 {
                get {
                    try {
                        return ((string)(this[this.tableCounterCloseLog.userfld10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfld10\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfld10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool userflag1 {
                get {
                    try {
                        return ((bool)(this[this.tableCounterCloseLog.userflag1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userflag1\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userflag1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool userflag2 {
                get {
                    try {
                        return ((bool)(this[this.tableCounterCloseLog.userflag2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userflag2\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userflag2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool userflag3 {
                get {
                    try {
                        return ((bool)(this[this.tableCounterCloseLog.userflag3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userflag3\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userflag3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool userflag4 {
                get {
                    try {
                        return ((bool)(this[this.tableCounterCloseLog.userflag4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userflag4\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userflag4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool userflag5 {
                get {
                    try {
                        return ((bool)(this[this.tableCounterCloseLog.userflag5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userflag5\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userflag5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal userfloat1 {
                get {
                    try {
                        return ((decimal)(this[this.tableCounterCloseLog.userfloat1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfloat1\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfloat1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal userfloat2 {
                get {
                    try {
                        return ((decimal)(this[this.tableCounterCloseLog.userfloat2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfloat2\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfloat2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal userfloat3 {
                get {
                    try {
                        return ((decimal)(this[this.tableCounterCloseLog.userfloat3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfloat3\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfloat3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal userfloat4 {
                get {
                    try {
                        return ((decimal)(this[this.tableCounterCloseLog.userfloat4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfloat4\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfloat4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal userfloat5 {
                get {
                    try {
                        return ((decimal)(this[this.tableCounterCloseLog.userfloat5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userfloat5\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userfloat5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userint1 {
                get {
                    try {
                        return ((int)(this[this.tableCounterCloseLog.userint1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userint1\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userint1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userint2 {
                get {
                    try {
                        return ((int)(this[this.tableCounterCloseLog.userint2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userint2\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userint2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userint3 {
                get {
                    try {
                        return ((int)(this[this.tableCounterCloseLog.userint3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userint3\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userint3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userint4 {
                get {
                    try {
                        return ((int)(this[this.tableCounterCloseLog.userint4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userint4\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userint4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userint5 {
                get {
                    try {
                        return ((int)(this[this.tableCounterCloseLog.userint5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userint5\' in table \'CounterCloseLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCounterCloseLog.userint5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashRecordedNull() {
                return this.IsNull(this.tableCounterCloseLog.CashRecordedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashRecordedNull() {
                this[this.tableCounterCloseLog.CashRecordedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetsRecordedNull() {
                return this.IsNull(this.tableCounterCloseLog.NetsRecordedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetsRecordedNull() {
                this[this.tableCounterCloseLog.NetsRecordedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetsTerminalIDNull() {
                return this.IsNull(this.tableCounterCloseLog.NetsTerminalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetsTerminalIDNull() {
                this[this.tableCounterCloseLog.NetsTerminalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVisaRecordedNull() {
                return this.IsNull(this.tableCounterCloseLog.VisaRecordedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVisaRecordedNull() {
                this[this.tableCounterCloseLog.VisaRecordedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVisaBatchNoNull() {
                return this.IsNull(this.tableCounterCloseLog.VisaBatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVisaBatchNoNull() {
                this[this.tableCounterCloseLog.VisaBatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmexRecordedNull() {
                return this.IsNull(this.tableCounterCloseLog.AmexRecordedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmexRecordedNull() {
                this[this.tableCounterCloseLog.AmexRecordedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmexBatchNoNull() {
                return this.IsNull(this.tableCounterCloseLog.AmexBatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmexBatchNoNull() {
                this[this.tableCounterCloseLog.AmexBatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChinaNetsRecordedNull() {
                return this.IsNull(this.tableCounterCloseLog.ChinaNetsRecordedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChinaNetsRecordedNull() {
                this[this.tableCounterCloseLog.ChinaNetsRecordedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChinaNetsTerminalIDNull() {
                return this.IsNull(this.tableCounterCloseLog.ChinaNetsTerminalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChinaNetsTerminalIDNull() {
                this[this.tableCounterCloseLog.ChinaNetsTerminalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherRecordedNull() {
                return this.IsNull(this.tableCounterCloseLog.VoucherRecordedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherRecordedNull() {
                this[this.tableCounterCloseLog.VoucherRecordedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepositBagNoNull() {
                return this.IsNull(this.tableCounterCloseLog.DepositBagNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepositBagNoNull() {
                this[this.tableCounterCloseLog.DepositBagNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfld1Null() {
                return this.IsNull(this.tableCounterCloseLog.userfld1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfld1Null() {
                this[this.tableCounterCloseLog.userfld1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfld2Null() {
                return this.IsNull(this.tableCounterCloseLog.userfld2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfld2Null() {
                this[this.tableCounterCloseLog.userfld2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfld3Null() {
                return this.IsNull(this.tableCounterCloseLog.userfld3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfld3Null() {
                this[this.tableCounterCloseLog.userfld3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfld4Null() {
                return this.IsNull(this.tableCounterCloseLog.userfld4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfld4Null() {
                this[this.tableCounterCloseLog.userfld4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfld5Null() {
                return this.IsNull(this.tableCounterCloseLog.userfld5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfld5Null() {
                this[this.tableCounterCloseLog.userfld5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfld6Null() {
                return this.IsNull(this.tableCounterCloseLog.userfld6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfld6Null() {
                this[this.tableCounterCloseLog.userfld6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfld7Null() {
                return this.IsNull(this.tableCounterCloseLog.userfld7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfld7Null() {
                this[this.tableCounterCloseLog.userfld7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfld8Null() {
                return this.IsNull(this.tableCounterCloseLog.userfld8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfld8Null() {
                this[this.tableCounterCloseLog.userfld8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfld9Null() {
                return this.IsNull(this.tableCounterCloseLog.userfld9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfld9Null() {
                this[this.tableCounterCloseLog.userfld9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfld10Null() {
                return this.IsNull(this.tableCounterCloseLog.userfld10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfld10Null() {
                this[this.tableCounterCloseLog.userfld10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserflag1Null() {
                return this.IsNull(this.tableCounterCloseLog.userflag1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserflag1Null() {
                this[this.tableCounterCloseLog.userflag1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserflag2Null() {
                return this.IsNull(this.tableCounterCloseLog.userflag2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserflag2Null() {
                this[this.tableCounterCloseLog.userflag2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserflag3Null() {
                return this.IsNull(this.tableCounterCloseLog.userflag3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserflag3Null() {
                this[this.tableCounterCloseLog.userflag3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserflag4Null() {
                return this.IsNull(this.tableCounterCloseLog.userflag4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserflag4Null() {
                this[this.tableCounterCloseLog.userflag4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserflag5Null() {
                return this.IsNull(this.tableCounterCloseLog.userflag5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserflag5Null() {
                this[this.tableCounterCloseLog.userflag5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfloat1Null() {
                return this.IsNull(this.tableCounterCloseLog.userfloat1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfloat1Null() {
                this[this.tableCounterCloseLog.userfloat1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfloat2Null() {
                return this.IsNull(this.tableCounterCloseLog.userfloat2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfloat2Null() {
                this[this.tableCounterCloseLog.userfloat2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfloat3Null() {
                return this.IsNull(this.tableCounterCloseLog.userfloat3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfloat3Null() {
                this[this.tableCounterCloseLog.userfloat3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfloat4Null() {
                return this.IsNull(this.tableCounterCloseLog.userfloat4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfloat4Null() {
                this[this.tableCounterCloseLog.userfloat4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserfloat5Null() {
                return this.IsNull(this.tableCounterCloseLog.userfloat5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserfloat5Null() {
                this[this.tableCounterCloseLog.userfloat5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserint1Null() {
                return this.IsNull(this.tableCounterCloseLog.userint1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserint1Null() {
                this[this.tableCounterCloseLog.userint1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserint2Null() {
                return this.IsNull(this.tableCounterCloseLog.userint2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserint2Null() {
                this[this.tableCounterCloseLog.userint2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserint3Null() {
                return this.IsNull(this.tableCounterCloseLog.userint3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserint3Null() {
                this[this.tableCounterCloseLog.userint3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserint4Null() {
                return this.IsNull(this.tableCounterCloseLog.userint4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserint4Null() {
                this[this.tableCounterCloseLog.userint4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuserint5Null() {
                return this.IsNull(this.tableCounterCloseLog.userint5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuserint5Null() {
                this[this.tableCounterCloseLog.userint5Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CounterCloseLogRowChangeEvent : global::System.EventArgs {
            
            private CounterCloseLogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CounterCloseLogRowChangeEvent(CounterCloseLogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CounterCloseLogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WinPowerPOS.TestingReport.datClosingReportTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CounterCloseLogTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CounterCloseLogTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CounterCloseLog";
            tableMapping.ColumnMappings.Add("CounterCloseLogID", "CounterCloseLogID");
            tableMapping.ColumnMappings.Add("CounterCloseID", "CounterCloseID");
            tableMapping.ColumnMappings.Add("FloatBalance", "FloatBalance");
            tableMapping.ColumnMappings.Add("StartTime", "StartTime");
            tableMapping.ColumnMappings.Add("EndTime", "EndTime");
            tableMapping.ColumnMappings.Add("Cashier", "Cashier");
            tableMapping.ColumnMappings.Add("Supervisor", "Supervisor");
            tableMapping.ColumnMappings.Add("CashIn", "CashIn");
            tableMapping.ColumnMappings.Add("CashOut", "CashOut");
            tableMapping.ColumnMappings.Add("OpeningBalance", "OpeningBalance");
            tableMapping.ColumnMappings.Add("TotalSystemRecorded", "TotalSystemRecorded");
            tableMapping.ColumnMappings.Add("CashCollected", "CashCollected");
            tableMapping.ColumnMappings.Add("CashRecorded", "CashRecorded");
            tableMapping.ColumnMappings.Add("NetsCollected", "NetsCollected");
            tableMapping.ColumnMappings.Add("NetsRecorded", "NetsRecorded");
            tableMapping.ColumnMappings.Add("NetsTerminalID", "NetsTerminalID");
            tableMapping.ColumnMappings.Add("VisaCollected", "VisaCollected");
            tableMapping.ColumnMappings.Add("VisaRecorded", "VisaRecorded");
            tableMapping.ColumnMappings.Add("VisaBatchNo", "VisaBatchNo");
            tableMapping.ColumnMappings.Add("AmexCollected", "AmexCollected");
            tableMapping.ColumnMappings.Add("AmexRecorded", "AmexRecorded");
            tableMapping.ColumnMappings.Add("AmexBatchNo", "AmexBatchNo");
            tableMapping.ColumnMappings.Add("ChinaNetsCollected", "ChinaNetsCollected");
            tableMapping.ColumnMappings.Add("ChinaNetsRecorded", "ChinaNetsRecorded");
            tableMapping.ColumnMappings.Add("ChinaNetsTerminalID", "ChinaNetsTerminalID");
            tableMapping.ColumnMappings.Add("VoucherCollected", "VoucherCollected");
            tableMapping.ColumnMappings.Add("VoucherRecorded", "VoucherRecorded");
            tableMapping.ColumnMappings.Add("DepositBagNo", "DepositBagNo");
            tableMapping.ColumnMappings.Add("TotalActualCollected", "TotalActualCollected");
            tableMapping.ColumnMappings.Add("ClosingCashOut", "ClosingCashOut");
            tableMapping.ColumnMappings.Add("Variance", "Variance");
            tableMapping.ColumnMappings.Add("PointOfSaleID", "PointOfSaleID");
            tableMapping.ColumnMappings.Add("CreatedOn", "CreatedOn");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("ModifiedOn", "ModifiedOn");
            tableMapping.ColumnMappings.Add("ModifiedBy", "ModifiedBy");
            tableMapping.ColumnMappings.Add("UniqueID", "UniqueID");
            tableMapping.ColumnMappings.Add("userfld1", "userfld1");
            tableMapping.ColumnMappings.Add("userfld2", "userfld2");
            tableMapping.ColumnMappings.Add("userfld3", "userfld3");
            tableMapping.ColumnMappings.Add("userfld4", "userfld4");
            tableMapping.ColumnMappings.Add("userfld5", "userfld5");
            tableMapping.ColumnMappings.Add("userfld6", "userfld6");
            tableMapping.ColumnMappings.Add("userfld7", "userfld7");
            tableMapping.ColumnMappings.Add("userfld8", "userfld8");
            tableMapping.ColumnMappings.Add("userfld9", "userfld9");
            tableMapping.ColumnMappings.Add("userfld10", "userfld10");
            tableMapping.ColumnMappings.Add("userflag1", "userflag1");
            tableMapping.ColumnMappings.Add("userflag2", "userflag2");
            tableMapping.ColumnMappings.Add("userflag3", "userflag3");
            tableMapping.ColumnMappings.Add("userflag4", "userflag4");
            tableMapping.ColumnMappings.Add("userflag5", "userflag5");
            tableMapping.ColumnMappings.Add("userfloat1", "userfloat1");
            tableMapping.ColumnMappings.Add("userfloat2", "userfloat2");
            tableMapping.ColumnMappings.Add("userfloat3", "userfloat3");
            tableMapping.ColumnMappings.Add("userfloat4", "userfloat4");
            tableMapping.ColumnMappings.Add("userfloat5", "userfloat5");
            tableMapping.ColumnMappings.Add("userint1", "userint1");
            tableMapping.ColumnMappings.Add("userint2", "userint2");
            tableMapping.ColumnMappings.Add("userint3", "userint3");
            tableMapping.ColumnMappings.Add("userint4", "userint4");
            tableMapping.ColumnMappings.Add("userint5", "userint5");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [CounterCloseLog] WHERE (([CounterCloseLogID] = @Original_CounterClos" +
                "eLogID) AND ([CounterCloseID] = @Original_CounterCloseID) AND ([FloatBalance] = " +
                "@Original_FloatBalance) AND ([StartTime] = @Original_StartTime) AND ([EndTime] =" +
                " @Original_EndTime) AND ([Cashier] = @Original_Cashier) AND ([Supervisor] = @Ori" +
                "ginal_Supervisor) AND ([CashIn] = @Original_CashIn) AND ([CashOut] = @Original_C" +
                "ashOut) AND ([OpeningBalance] = @Original_OpeningBalance) AND ([TotalSystemRecor" +
                "ded] = @Original_TotalSystemRecorded) AND ([CashCollected] = @Original_CashColle" +
                "cted) AND ((@IsNull_CashRecorded = 1 AND [CashRecorded] IS NULL) OR ([CashRecord" +
                "ed] = @Original_CashRecorded)) AND ([NetsCollected] = @Original_NetsCollected) A" +
                "ND ((@IsNull_NetsRecorded = 1 AND [NetsRecorded] IS NULL) OR ([NetsRecorded] = @" +
                "Original_NetsRecorded)) AND ((@IsNull_NetsTerminalID = 1 AND [NetsTerminalID] IS" +
                " NULL) OR ([NetsTerminalID] = @Original_NetsTerminalID)) AND ([VisaCollected] = " +
                "@Original_VisaCollected) AND ((@IsNull_VisaRecorded = 1 AND [VisaRecorded] IS NU" +
                "LL) OR ([VisaRecorded] = @Original_VisaRecorded)) AND ((@IsNull_VisaBatchNo = 1 " +
                "AND [VisaBatchNo] IS NULL) OR ([VisaBatchNo] = @Original_VisaBatchNo)) AND ([Ame" +
                "xCollected] = @Original_AmexCollected) AND ((@IsNull_AmexRecorded = 1 AND [AmexR" +
                "ecorded] IS NULL) OR ([AmexRecorded] = @Original_AmexRecorded)) AND ((@IsNull_Am" +
                "exBatchNo = 1 AND [AmexBatchNo] IS NULL) OR ([AmexBatchNo] = @Original_AmexBatch" +
                "No)) AND ([ChinaNetsCollected] = @Original_ChinaNetsCollected) AND ((@IsNull_Chi" +
                "naNetsRecorded = 1 AND [ChinaNetsRecorded] IS NULL) OR ([ChinaNetsRecorded] = @O" +
                "riginal_ChinaNetsRecorded)) AND ((@IsNull_ChinaNetsTerminalID = 1 AND [ChinaNets" +
                "TerminalID] IS NULL) OR ([ChinaNetsTerminalID] = @Original_ChinaNetsTerminalID))" +
                " AND ([VoucherCollected] = @Original_VoucherCollected) AND ((@IsNull_VoucherReco" +
                "rded = 1 AND [VoucherRecorded] IS NULL) OR ([VoucherRecorded] = @Original_Vouche" +
                "rRecorded)) AND ((@IsNull_DepositBagNo = 1 AND [DepositBagNo] IS NULL) OR ([Depo" +
                "sitBagNo] = @Original_DepositBagNo)) AND ([TotalActualCollected] = @Original_Tot" +
                "alActualCollected) AND ([ClosingCashOut] = @Original_ClosingCashOut) AND ([Varia" +
                "nce] = @Original_Variance) AND ([PointOfSaleID] = @Original_PointOfSaleID) AND (" +
                "[CreatedOn] = @Original_CreatedOn) AND ([CreatedBy] = @Original_CreatedBy) AND (" +
                "[ModifiedOn] = @Original_ModifiedOn) AND ([ModifiedBy] = @Original_ModifiedBy) A" +
                "ND ([UniqueID] = @Original_UniqueID) AND ((@IsNull_userfld1 = 1 AND [userfld1] I" +
                "S NULL) OR ([userfld1] = @Original_userfld1)) AND ((@IsNull_userfld2 = 1 AND [us" +
                "erfld2] IS NULL) OR ([userfld2] = @Original_userfld2)) AND ((@IsNull_userfld3 = " +
                "1 AND [userfld3] IS NULL) OR ([userfld3] = @Original_userfld3)) AND ((@IsNull_us" +
                "erfld4 = 1 AND [userfld4] IS NULL) OR ([userfld4] = @Original_userfld4)) AND ((@" +
                "IsNull_userfld5 = 1 AND [userfld5] IS NULL) OR ([userfld5] = @Original_userfld5)" +
                ") AND ((@IsNull_userfld6 = 1 AND [userfld6] IS NULL) OR ([userfld6] = @Original_" +
                "userfld6)) AND ((@IsNull_userfld7 = 1 AND [userfld7] IS NULL) OR ([userfld7] = @" +
                "Original_userfld7)) AND ((@IsNull_userfld8 = 1 AND [userfld8] IS NULL) OR ([user" +
                "fld8] = @Original_userfld8)) AND ((@IsNull_userfld9 = 1 AND [userfld9] IS NULL) " +
                "OR ([userfld9] = @Original_userfld9)) AND ((@IsNull_userfld10 = 1 AND [userfld10" +
                "] IS NULL) OR ([userfld10] = @Original_userfld10)) AND ((@IsNull_userflag1 = 1 A" +
                "ND [userflag1] IS NULL) OR ([userflag1] = @Original_userflag1)) AND ((@IsNull_us" +
                "erflag2 = 1 AND [userflag2] IS NULL) OR ([userflag2] = @Original_userflag2)) AND" +
                " ((@IsNull_userflag3 = 1 AND [userflag3] IS NULL) OR ([userflag3] = @Original_us" +
                "erflag3)) AND ((@IsNull_userflag4 = 1 AND [userflag4] IS NULL) OR ([userflag4] =" +
                " @Original_userflag4)) AND ((@IsNull_userflag5 = 1 AND [userflag5] IS NULL) OR (" +
                "[userflag5] = @Original_userflag5)) AND ((@IsNull_userfloat1 = 1 AND [userfloat1" +
                "] IS NULL) OR ([userfloat1] = @Original_userfloat1)) AND ((@IsNull_userfloat2 = " +
                "1 AND [userfloat2] IS NULL) OR ([userfloat2] = @Original_userfloat2)) AND ((@IsN" +
                "ull_userfloat3 = 1 AND [userfloat3] IS NULL) OR ([userfloat3] = @Original_userfl" +
                "oat3)) AND ((@IsNull_userfloat4 = 1 AND [userfloat4] IS NULL) OR ([userfloat4] =" +
                " @Original_userfloat4)) AND ((@IsNull_userfloat5 = 1 AND [userfloat5] IS NULL) O" +
                "R ([userfloat5] = @Original_userfloat5)) AND ((@IsNull_userint1 = 1 AND [userint" +
                "1] IS NULL) OR ([userint1] = @Original_userint1)) AND ((@IsNull_userint2 = 1 AND" +
                " [userint2] IS NULL) OR ([userint2] = @Original_userint2)) AND ((@IsNull_userint" +
                "3 = 1 AND [userint3] IS NULL) OR ([userint3] = @Original_userint3)) AND ((@IsNul" +
                "l_userint4 = 1 AND [userint4] IS NULL) OR ([userint4] = @Original_userint4)) AND" +
                " ((@IsNull_userint5 = 1 AND [userint5] IS NULL) OR ([userint5] = @Original_useri" +
                "nt5)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CounterCloseLogID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CounterCloseLogID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CounterCloseID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CounterCloseID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FloatBalance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FloatBalance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cashier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cashier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supervisor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supervisor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CashIn", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashIn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CashOut", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OpeningBalance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OpeningBalance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalSystemRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalSystemRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CashCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CashRecorded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashRecorded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CashRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NetsCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NetsRecorded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsRecorded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NetsRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NetsTerminalID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsTerminalID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NetsTerminalID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsTerminalID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VisaCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VisaRecorded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaRecorded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VisaRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VisaBatchNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaBatchNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VisaBatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaBatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmexCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AmexRecorded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexRecorded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmexRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AmexBatchNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexBatchNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmexBatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexBatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChinaNetsCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ChinaNetsRecorded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsRecorded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChinaNetsRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ChinaNetsTerminalID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsTerminalID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChinaNetsTerminalID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsTerminalID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoucherCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoucherCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoucherRecorded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoucherRecorded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoucherRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoucherRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DepositBagNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepositBagNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepositBagNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepositBagNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalActualCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalActualCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClosingCashOut", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClosingCashOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Variance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Variance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PointOfSaleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointOfSaleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UniqueID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userflag1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userflag1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userflag2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userflag2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userflag3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userflag3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userflag4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userflag4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userflag5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userflag5", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfloat1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfloat1", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfloat2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfloat2", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfloat3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfloat3", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfloat4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfloat4", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfloat5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfloat5", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userint1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userint1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userint2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userint2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userint3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userint3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userint4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userint4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userint5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userint5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [CounterCloseLog] ([CounterCloseID], [FloatBalance], [StartTime], [En" +
                "dTime], [Cashier], [Supervisor], [CashIn], [CashOut], [OpeningBalance], [TotalSy" +
                "stemRecorded], [CashCollected], [CashRecorded], [NetsCollected], [NetsRecorded]," +
                " [NetsTerminalID], [VisaCollected], [VisaRecorded], [VisaBatchNo], [AmexCollecte" +
                "d], [AmexRecorded], [AmexBatchNo], [ChinaNetsCollected], [ChinaNetsRecorded], [C" +
                "hinaNetsTerminalID], [VoucherCollected], [VoucherRecorded], [DepositBagNo], [Tot" +
                "alActualCollected], [ClosingCashOut], [Variance], [PointOfSaleID], [CreatedOn], " +
                "[CreatedBy], [ModifiedOn], [ModifiedBy], [UniqueID], [userfld1], [userfld2], [us" +
                "erfld3], [userfld4], [userfld5], [userfld6], [userfld7], [userfld8], [userfld9]," +
                " [userfld10], [userflag1], [userflag2], [userflag3], [userflag4], [userflag5], [" +
                "userfloat1], [userfloat2], [userfloat3], [userfloat4], [userfloat5], [userint1]," +
                " [userint2], [userint3], [userint4], [userint5]) VALUES (@CounterCloseID, @Float" +
                "Balance, @StartTime, @EndTime, @Cashier, @Supervisor, @CashIn, @CashOut, @Openin" +
                "gBalance, @TotalSystemRecorded, @CashCollected, @CashRecorded, @NetsCollected, @" +
                "NetsRecorded, @NetsTerminalID, @VisaCollected, @VisaRecorded, @VisaBatchNo, @Ame" +
                "xCollected, @AmexRecorded, @AmexBatchNo, @ChinaNetsCollected, @ChinaNetsRecorded" +
                ", @ChinaNetsTerminalID, @VoucherCollected, @VoucherRecorded, @DepositBagNo, @Tot" +
                "alActualCollected, @ClosingCashOut, @Variance, @PointOfSaleID, @CreatedOn, @Crea" +
                "tedBy, @ModifiedOn, @ModifiedBy, @UniqueID, @userfld1, @userfld2, @userfld3, @us" +
                "erfld4, @userfld5, @userfld6, @userfld7, @userfld8, @userfld9, @userfld10, @user" +
                "flag1, @userflag2, @userflag3, @userflag4, @userflag5, @userfloat1, @userfloat2," +
                " @userfloat3, @userfloat4, @userfloat5, @userint1, @userint2, @userint3, @userin" +
                "t4, @userint5);\r\nSELECT CounterCloseLogID, CounterCloseID, FloatBalance, StartTi" +
                "me, EndTime, Cashier, Supervisor, CashIn, CashOut, OpeningBalance, TotalSystemRe" +
                "corded, CashCollected, CashRecorded, NetsCollected, NetsRecorded, NetsTerminalID" +
                ", VisaCollected, VisaRecorded, VisaBatchNo, AmexCollected, AmexRecorded, AmexBat" +
                "chNo, ChinaNetsCollected, ChinaNetsRecorded, ChinaNetsTerminalID, VoucherCollect" +
                "ed, VoucherRecorded, DepositBagNo, TotalActualCollected, ClosingCashOut, Varianc" +
                "e, PointOfSaleID, CreatedOn, CreatedBy, ModifiedOn, ModifiedBy, UniqueID, userfl" +
                "d1, userfld2, userfld3, userfld4, userfld5, userfld6, userfld7, userfld8, userfl" +
                "d9, userfld10, userflag1, userflag2, userflag3, userflag4, userflag5, userfloat1" +
                ", userfloat2, userfloat3, userfloat4, userfloat5, userint1, userint2, userint3, " +
                "userint4, userint5 FROM CounterCloseLog WHERE (CounterCloseLogID = SCOPE_IDENTIT" +
                "Y())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CounterCloseID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CounterCloseID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FloatBalance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FloatBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cashier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cashier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supervisor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supervisor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CashIn", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashIn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CashOut", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OpeningBalance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OpeningBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalSystemRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalSystemRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CashCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CashRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetsCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetsRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetsTerminalID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsTerminalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisaCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisaRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisaBatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaBatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmexCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmexRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmexBatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexBatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChinaNetsCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChinaNetsRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChinaNetsTerminalID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsTerminalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoucherCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoucherCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoucherRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoucherRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepositBagNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepositBagNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalActualCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalActualCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClosingCashOut", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClosingCashOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Variance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Variance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PointOfSaleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointOfSaleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniqueID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userflag1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userflag2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userflag3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userflag4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userflag5", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfloat1", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfloat2", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfloat3", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfloat4", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfloat5", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userint1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userint2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userint3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userint4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userint5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [CounterCloseLog] SET [CounterCloseID] = @CounterCloseID, [FloatBalance] =" +
                " @FloatBalance, [StartTime] = @StartTime, [EndTime] = @EndTime, [Cashier] = @Cas" +
                "hier, [Supervisor] = @Supervisor, [CashIn] = @CashIn, [CashOut] = @CashOut, [Ope" +
                "ningBalance] = @OpeningBalance, [TotalSystemRecorded] = @TotalSystemRecorded, [C" +
                "ashCollected] = @CashCollected, [CashRecorded] = @CashRecorded, [NetsCollected] " +
                "= @NetsCollected, [NetsRecorded] = @NetsRecorded, [NetsTerminalID] = @NetsTermin" +
                "alID, [VisaCollected] = @VisaCollected, [VisaRecorded] = @VisaRecorded, [VisaBat" +
                "chNo] = @VisaBatchNo, [AmexCollected] = @AmexCollected, [AmexRecorded] = @AmexRe" +
                "corded, [AmexBatchNo] = @AmexBatchNo, [ChinaNetsCollected] = @ChinaNetsCollected" +
                ", [ChinaNetsRecorded] = @ChinaNetsRecorded, [ChinaNetsTerminalID] = @ChinaNetsTe" +
                "rminalID, [VoucherCollected] = @VoucherCollected, [VoucherRecorded] = @VoucherRe" +
                "corded, [DepositBagNo] = @DepositBagNo, [TotalActualCollected] = @TotalActualCol" +
                "lected, [ClosingCashOut] = @ClosingCashOut, [Variance] = @Variance, [PointOfSale" +
                "ID] = @PointOfSaleID, [CreatedOn] = @CreatedOn, [CreatedBy] = @CreatedBy, [Modif" +
                "iedOn] = @ModifiedOn, [ModifiedBy] = @ModifiedBy, [UniqueID] = @UniqueID, [userf" +
                "ld1] = @userfld1, [userfld2] = @userfld2, [userfld3] = @userfld3, [userfld4] = @" +
                "userfld4, [userfld5] = @userfld5, [userfld6] = @userfld6, [userfld7] = @userfld7" +
                ", [userfld8] = @userfld8, [userfld9] = @userfld9, [userfld10] = @userfld10, [use" +
                "rflag1] = @userflag1, [userflag2] = @userflag2, [userflag3] = @userflag3, [userf" +
                "lag4] = @userflag4, [userflag5] = @userflag5, [userfloat1] = @userfloat1, [userf" +
                "loat2] = @userfloat2, [userfloat3] = @userfloat3, [userfloat4] = @userfloat4, [u" +
                "serfloat5] = @userfloat5, [userint1] = @userint1, [userint2] = @userint2, [useri" +
                "nt3] = @userint3, [userint4] = @userint4, [userint5] = @userint5 WHERE (([Counte" +
                "rCloseLogID] = @Original_CounterCloseLogID) AND ([CounterCloseID] = @Original_Co" +
                "unterCloseID) AND ([FloatBalance] = @Original_FloatBalance) AND ([StartTime] = @" +
                "Original_StartTime) AND ([EndTime] = @Original_EndTime) AND ([Cashier] = @Origin" +
                "al_Cashier) AND ([Supervisor] = @Original_Supervisor) AND ([CashIn] = @Original_" +
                "CashIn) AND ([CashOut] = @Original_CashOut) AND ([OpeningBalance] = @Original_Op" +
                "eningBalance) AND ([TotalSystemRecorded] = @Original_TotalSystemRecorded) AND ([" +
                "CashCollected] = @Original_CashCollected) AND ((@IsNull_CashRecorded = 1 AND [Ca" +
                "shRecorded] IS NULL) OR ([CashRecorded] = @Original_CashRecorded)) AND ([NetsCol" +
                "lected] = @Original_NetsCollected) AND ((@IsNull_NetsRecorded = 1 AND [NetsRecor" +
                "ded] IS NULL) OR ([NetsRecorded] = @Original_NetsRecorded)) AND ((@IsNull_NetsTe" +
                "rminalID = 1 AND [NetsTerminalID] IS NULL) OR ([NetsTerminalID] = @Original_Nets" +
                "TerminalID)) AND ([VisaCollected] = @Original_VisaCollected) AND ((@IsNull_VisaR" +
                "ecorded = 1 AND [VisaRecorded] IS NULL) OR ([VisaRecorded] = @Original_VisaRecor" +
                "ded)) AND ((@IsNull_VisaBatchNo = 1 AND [VisaBatchNo] IS NULL) OR ([VisaBatchNo]" +
                " = @Original_VisaBatchNo)) AND ([AmexCollected] = @Original_AmexCollected) AND (" +
                "(@IsNull_AmexRecorded = 1 AND [AmexRecorded] IS NULL) OR ([AmexRecorded] = @Orig" +
                "inal_AmexRecorded)) AND ((@IsNull_AmexBatchNo = 1 AND [AmexBatchNo] IS NULL) OR " +
                "([AmexBatchNo] = @Original_AmexBatchNo)) AND ([ChinaNetsCollected] = @Original_C" +
                "hinaNetsCollected) AND ((@IsNull_ChinaNetsRecorded = 1 AND [ChinaNetsRecorded] I" +
                "S NULL) OR ([ChinaNetsRecorded] = @Original_ChinaNetsRecorded)) AND ((@IsNull_Ch" +
                "inaNetsTerminalID = 1 AND [ChinaNetsTerminalID] IS NULL) OR ([ChinaNetsTerminalI" +
                "D] = @Original_ChinaNetsTerminalID)) AND ([VoucherCollected] = @Original_Voucher" +
                "Collected) AND ((@IsNull_VoucherRecorded = 1 AND [VoucherRecorded] IS NULL) OR (" +
                "[VoucherRecorded] = @Original_VoucherRecorded)) AND ((@IsNull_DepositBagNo = 1 A" +
                "ND [DepositBagNo] IS NULL) OR ([DepositBagNo] = @Original_DepositBagNo)) AND ([T" +
                "otalActualCollected] = @Original_TotalActualCollected) AND ([ClosingCashOut] = @" +
                "Original_ClosingCashOut) AND ([Variance] = @Original_Variance) AND ([PointOfSale" +
                "ID] = @Original_PointOfSaleID) AND ([CreatedOn] = @Original_CreatedOn) AND ([Cre" +
                "atedBy] = @Original_CreatedBy) AND ([ModifiedOn] = @Original_ModifiedOn) AND ([M" +
                "odifiedBy] = @Original_ModifiedBy) AND ([UniqueID] = @Original_UniqueID) AND ((@" +
                "IsNull_userfld1 = 1 AND [userfld1] IS NULL) OR ([userfld1] = @Original_userfld1)" +
                ") AND ((@IsNull_userfld2 = 1 AND [userfld2] IS NULL) OR ([userfld2] = @Original_" +
                "userfld2)) AND ((@IsNull_userfld3 = 1 AND [userfld3] IS NULL) OR ([userfld3] = @" +
                "Original_userfld3)) AND ((@IsNull_userfld4 = 1 AND [userfld4] IS NULL) OR ([user" +
                "fld4] = @Original_userfld4)) AND ((@IsNull_userfld5 = 1 AND [userfld5] IS NULL) " +
                "OR ([userfld5] = @Original_userfld5)) AND ((@IsNull_userfld6 = 1 AND [userfld6] " +
                "IS NULL) OR ([userfld6] = @Original_userfld6)) AND ((@IsNull_userfld7 = 1 AND [u" +
                "serfld7] IS NULL) OR ([userfld7] = @Original_userfld7)) AND ((@IsNull_userfld8 =" +
                " 1 AND [userfld8] IS NULL) OR ([userfld8] = @Original_userfld8)) AND ((@IsNull_u" +
                "serfld9 = 1 AND [userfld9] IS NULL) OR ([userfld9] = @Original_userfld9)) AND ((" +
                "@IsNull_userfld10 = 1 AND [userfld10] IS NULL) OR ([userfld10] = @Original_userf" +
                "ld10)) AND ((@IsNull_userflag1 = 1 AND [userflag1] IS NULL) OR ([userflag1] = @O" +
                "riginal_userflag1)) AND ((@IsNull_userflag2 = 1 AND [userflag2] IS NULL) OR ([us" +
                "erflag2] = @Original_userflag2)) AND ((@IsNull_userflag3 = 1 AND [userflag3] IS " +
                "NULL) OR ([userflag3] = @Original_userflag3)) AND ((@IsNull_userflag4 = 1 AND [u" +
                "serflag4] IS NULL) OR ([userflag4] = @Original_userflag4)) AND ((@IsNull_userfla" +
                "g5 = 1 AND [userflag5] IS NULL) OR ([userflag5] = @Original_userflag5)) AND ((@I" +
                "sNull_userfloat1 = 1 AND [userfloat1] IS NULL) OR ([userfloat1] = @Original_user" +
                "float1)) AND ((@IsNull_userfloat2 = 1 AND [userfloat2] IS NULL) OR ([userfloat2]" +
                " = @Original_userfloat2)) AND ((@IsNull_userfloat3 = 1 AND [userfloat3] IS NULL)" +
                " OR ([userfloat3] = @Original_userfloat3)) AND ((@IsNull_userfloat4 = 1 AND [use" +
                "rfloat4] IS NULL) OR ([userfloat4] = @Original_userfloat4)) AND ((@IsNull_userfl" +
                "oat5 = 1 AND [userfloat5] IS NULL) OR ([userfloat5] = @Original_userfloat5)) AND" +
                " ((@IsNull_userint1 = 1 AND [userint1] IS NULL) OR ([userint1] = @Original_useri" +
                "nt1)) AND ((@IsNull_userint2 = 1 AND [userint2] IS NULL) OR ([userint2] = @Origi" +
                "nal_userint2)) AND ((@IsNull_userint3 = 1 AND [userint3] IS NULL) OR ([userint3]" +
                " = @Original_userint3)) AND ((@IsNull_userint4 = 1 AND [userint4] IS NULL) OR ([" +
                "userint4] = @Original_userint4)) AND ((@IsNull_userint5 = 1 AND [userint5] IS NU" +
                "LL) OR ([userint5] = @Original_userint5)));\r\nSELECT CounterCloseLogID, CounterCl" +
                "oseID, FloatBalance, StartTime, EndTime, Cashier, Supervisor, CashIn, CashOut, O" +
                "peningBalance, TotalSystemRecorded, CashCollected, CashRecorded, NetsCollected, " +
                "NetsRecorded, NetsTerminalID, VisaCollected, VisaRecorded, VisaBatchNo, AmexColl" +
                "ected, AmexRecorded, AmexBatchNo, ChinaNetsCollected, ChinaNetsRecorded, ChinaNe" +
                "tsTerminalID, VoucherCollected, VoucherRecorded, DepositBagNo, TotalActualCollec" +
                "ted, ClosingCashOut, Variance, PointOfSaleID, CreatedOn, CreatedBy, ModifiedOn, " +
                "ModifiedBy, UniqueID, userfld1, userfld2, userfld3, userfld4, userfld5, userfld6" +
                ", userfld7, userfld8, userfld9, userfld10, userflag1, userflag2, userflag3, user" +
                "flag4, userflag5, userfloat1, userfloat2, userfloat3, userfloat4, userfloat5, us" +
                "erint1, userint2, userint3, userint4, userint5 FROM CounterCloseLog WHERE (Count" +
                "erCloseLogID = @CounterCloseLogID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CounterCloseID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CounterCloseID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FloatBalance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FloatBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cashier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cashier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supervisor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supervisor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CashIn", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashIn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CashOut", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OpeningBalance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OpeningBalance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalSystemRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalSystemRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CashCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CashRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetsCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetsRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetsTerminalID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsTerminalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisaCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisaRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VisaBatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaBatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmexCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmexRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmexBatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexBatchNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChinaNetsCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChinaNetsRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChinaNetsTerminalID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsTerminalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoucherCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoucherCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VoucherRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoucherRecorded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepositBagNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepositBagNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalActualCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalActualCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClosingCashOut", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClosingCashOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Variance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Variance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PointOfSaleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointOfSaleID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniqueID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfld10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userflag1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userflag2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userflag3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userflag4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userflag5", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfloat1", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfloat2", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfloat3", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfloat4", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userfloat5", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userint1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userint2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userint3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userint4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userint5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CounterCloseLogID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CounterCloseLogID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CounterCloseID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CounterCloseID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FloatBalance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FloatBalance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EndTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cashier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cashier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supervisor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supervisor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CashIn", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashIn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CashOut", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OpeningBalance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OpeningBalance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalSystemRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalSystemRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CashCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CashRecorded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashRecorded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CashRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CashRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NetsCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NetsRecorded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsRecorded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NetsRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NetsTerminalID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsTerminalID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NetsTerminalID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetsTerminalID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VisaCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VisaRecorded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaRecorded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VisaRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VisaBatchNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaBatchNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VisaBatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VisaBatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmexCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AmexRecorded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexRecorded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmexRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AmexBatchNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexBatchNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AmexBatchNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AmexBatchNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChinaNetsCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ChinaNetsRecorded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsRecorded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChinaNetsRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ChinaNetsTerminalID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsTerminalID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChinaNetsTerminalID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChinaNetsTerminalID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoucherCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoucherCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VoucherRecorded", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoucherRecorded", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VoucherRecorded", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VoucherRecorded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DepositBagNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepositBagNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepositBagNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepositBagNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalActualCollected", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalActualCollected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClosingCashOut", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClosingCashOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Variance", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Variance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PointOfSaleID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PointOfSaleID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UniqueID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld6", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld6", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld7", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld7", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld8", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld8", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld8", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld9", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld9", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfld10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld10", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfld10", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfld10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userflag1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userflag1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userflag2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userflag2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userflag3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userflag3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userflag4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userflag4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userflag5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userflag5", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userflag5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfloat1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfloat1", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfloat2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfloat2", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfloat3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfloat3", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfloat4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfloat4", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userfloat5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userfloat5", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userfloat5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userint1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userint1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userint2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userint2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userint3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userint3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userint4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userint4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_userint5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_userint5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "userint5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CounterCloseLogID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "CounterCloseLogID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WinPowerPOS.Properties.Settings.Default.POSDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM CounterCloseLog";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(datClosingReport.CounterCloseLogDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual datClosingReport.CounterCloseLogDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            datClosingReport.CounterCloseLogDataTable dataTable = new datClosingReport.CounterCloseLogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(datClosingReport.CounterCloseLogDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(datClosingReport dataSet) {
            return this.Adapter.Update(dataSet, "CounterCloseLog");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CounterCloseLogTableAdapter _counterCloseLogTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CounterCloseLogTableAdapter CounterCloseLogTableAdapter {
            get {
                return this._counterCloseLogTableAdapter;
            }
            set {
                this._counterCloseLogTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._counterCloseLogTableAdapter != null) 
                            && (this._counterCloseLogTableAdapter.Connection != null))) {
                    return this._counterCloseLogTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._counterCloseLogTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(datClosingReport dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._counterCloseLogTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CounterCloseLog.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._counterCloseLogTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(datClosingReport dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._counterCloseLogTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CounterCloseLog.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._counterCloseLogTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(datClosingReport dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._counterCloseLogTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CounterCloseLog.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._counterCloseLogTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(datClosingReport dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._counterCloseLogTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._counterCloseLogTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._counterCloseLogTableAdapter != null)) {
                    revertConnections.Add(this._counterCloseLogTableAdapter, this._counterCloseLogTableAdapter.Connection);
                    this._counterCloseLogTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._counterCloseLogTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._counterCloseLogTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._counterCloseLogTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._counterCloseLogTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._counterCloseLogTableAdapter != null)) {
                    this._counterCloseLogTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._counterCloseLogTableAdapter]));
                    this._counterCloseLogTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591