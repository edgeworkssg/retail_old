//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8941
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.8941.
// 
#pragma warning disable 1591

namespace PowerPOSLib.PowerPOSSync {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SynchronizationSoap", Namespace="http://www.edgeworks.com.sg/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Synchronization : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FetchAppointmentsCCMWRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAppointmentsIsUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryOrderLastTimeStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchDeliveryOrderCCMWRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchRecordNoByTimestampDeliveryOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchDataSetByTimestampDeliveryOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDeliveryOrderIsUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSavedFileAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSavedFileByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOrderForRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRatingLastTimeStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback SyncRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchDataSetByTimestampVoucherHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchDataSetByTimestampVouchersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchPreOrderReportFromWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDeliveryPreOrderSingleOrderDetForWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDeliveryAsDeliveredStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPreOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeliveryGetDeliveryTrackOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeliverySetDeliveredOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendNotifiyMailDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchDeliveryOrderToPrintByOrderDetIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoAssignDepositWhenpayInstallmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOrderDetForRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOrderDetForRefundStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetDepositAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignAutoDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback InventoryFetchItemWithFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangeTrackingCurrentVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangeTrackingVersionSyncStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangeTrackingChangesCompressedOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableChangeTrackingOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableChangeTrackingTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangeTrackingVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangeTrackingTableMinValidVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangeTrackingFullTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryHdrFullTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryDetFullTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangeTrackingChangesTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppSettingValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAppSettingValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAppSettingValueBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAppSettingKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteUpdateUsingDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadOrderTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadLogsTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInventoryDetFromVoidedOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInventoryTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderCompressedOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderCompressedWithCustomRefNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderCompressedWithCustomRefNoEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomPONoSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomGRNoSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SyncCategoryFromMagentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitSalesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAccessLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchUpdatedGroupUserPrivilegesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchGroupPrivilegesRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemRecordCountAfterTimestampOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemTableCompressedRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchDataSetByTimestampOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchDataSetByTimeStampPerMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchDataSetByTimeStampPerModuleNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchRecordNoByTimestampOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchRecordNoByTimestampByInvLocIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchRecordNoByTimestampByPOSIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchRecordNoByTimestampByOutletNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchRecordNoByTimestampByMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchRecordNoByTimestampByModuleNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchPromoRecordNoByTimestampByOutletNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPromoRecordCountAfterTimestampOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchRecordNoByTimestampAppointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSalesLastTimeStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessLogLastTimeStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCashRecordingLastTimeStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQuotationLastTimeStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCounterCloselogLastTimeStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttendanceLastTimeStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLastTimeStampByPOSIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryCountRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryRealTimeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPromoRealTimeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPromoRealTimeDataAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPurchaseOrderRealTimeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemGroupRealTimeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockTakeRealTimeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPointsRealTimeDataAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchOrdersCCMWRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchAccessLogRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchAAttendanceRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchCounterCloseLogRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchCounterCloseLogWithDetailRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchLoginActivityRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchQuotationRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchCashRecordingRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchPerformanceLogRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchPerformanceLogSummaryRealTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAppointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchDataSetByTimestampAppointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchDataSetByTimestampSpecialDiscountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveInventoryFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventorySavedFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadInventoryFromFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeSavedFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppointmentLastTimeStampOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberDataWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberTagNoWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchOrdersCCMWOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchNewMembershipSignUpsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchInventorysOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchLogTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchLogTableWithUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchDeliveryOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchMemberRemarksOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderHdrRemarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback FreezePOSByPointOfSaleIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataTableCompressedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderHdrListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderHdrListWithoutPOSIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryHdrListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchSalesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataTableCustomCompressedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPastTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPastTransactionWithOutletOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPackageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistory_PointOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllocatePendingPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllocatePendingPackageNEWOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeductPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllocatedPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentPointsAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageBreakdownOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageAmount_plusBreakdownOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageAmountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback RevertPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdMembershipPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstallmentListByCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstallmentDetailByOrderHdrIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSerialNoIsExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSerialNoIsNotExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockQuantityByItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOutAutoReceiveCompressedOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOutAutoReceiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback StockOutCompressedOperationCompleted;
        
        private System.Threading.SendOrPostCallback StockOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback StockOutItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback StockInCompressedOperationCompleted;
        
        private System.Threading.SendOrPostCallback StockInOperationCompleted;
        
        private System.Threading.SendOrPostCallback StockReturnCompressedOperationCompleted;
        
        private System.Threading.SendOrPostCallback StockReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStockTakeEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStockTakeEntriesCompressedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustStockTakeDiscrepancyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustStockTakeDiscrepancyNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback CorrectStockTakeDiscrepancyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalOfAdjustedItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsThereUnAdjustedStockTakeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnAdjustedStockTakeDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStockTakeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignStockOutToConfirmedOrderUsingTransactionScopeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchStockBalanceReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchStockBalanceReportWithZeroQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchStockBalanceReportWithZeroQtyByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchStockSummaryReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchStockSummaryReportWithRemoveZeroQtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchStockCardReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchInventoryActivityReportWithTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchInventoryActivityReportWithTransferAndRefNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchInventoryActivityHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchInventoryActivityHeaderWithRefNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchCostPriceByItemForStockInOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockBalanceQtyByItemSummaryByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchInventoryControllerByRefNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferDestinationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSourceDestinationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchItemTraceReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupplierByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupplierByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadConfirmedPurchaseOrderControllerForStockInOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGoodsReceiveListOperationCompleted;
        
        private System.Threading.SendOrPostCallback InventoryFetchItemWithFilterWithSupplierIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Synchronization() {
            this.Url = global::PowerPOSLib.Properties.Settings.Default.PowerPOSLib_PowerPOSSync_Synchronization;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FetchAppointmentsCCMWRealTimeCompletedEventHandler FetchAppointmentsCCMWRealTimeCompleted;
        
        /// <remarks/>
        public event UpdateAppointmentsIsUpdatedCompletedEventHandler UpdateAppointmentsIsUpdatedCompleted;
        
        /// <remarks/>
        public event GetDeliveryOrderLastTimeStampCompletedEventHandler GetDeliveryOrderLastTimeStampCompleted;
        
        /// <remarks/>
        public event FetchDeliveryOrderCCMWRealTimeCompletedEventHandler FetchDeliveryOrderCCMWRealTimeCompleted;
        
        /// <remarks/>
        public event FetchRecordNoByTimestampDeliveryOrderCompletedEventHandler FetchRecordNoByTimestampDeliveryOrderCompleted;
        
        /// <remarks/>
        public event FetchDataSetByTimestampDeliveryOrderCompletedEventHandler FetchDataSetByTimestampDeliveryOrderCompleted;
        
        /// <remarks/>
        public event UpdateDeliveryOrderIsUpdatedCompletedEventHandler UpdateDeliveryOrderIsUpdatedCompleted;
        
        /// <remarks/>
        public event DeleteSavedFileAllCompletedEventHandler DeleteSavedFileAllCompleted;
        
        /// <remarks/>
        public event DeleteSavedFileByNameCompletedEventHandler DeleteSavedFileByNameCompleted;
        
        /// <remarks/>
        public event getOrderForRefundCompletedEventHandler getOrderForRefundCompleted;
        
        /// <remarks/>
        public event getRatingLastTimeStampCompletedEventHandler getRatingLastTimeStampCompleted;
        
        /// <remarks/>
        public event SyncRatingCompletedEventHandler SyncRatingCompleted;
        
        /// <remarks/>
        public event FetchDataSetByTimestampVoucherHeaderCompletedEventHandler FetchDataSetByTimestampVoucherHeaderCompleted;
        
        /// <remarks/>
        public event FetchDataSetByTimestampVouchersCompletedEventHandler FetchDataSetByTimestampVouchersCompleted;
        
        /// <remarks/>
        public event getOrderCompletedEventHandler getOrderCompleted;
        
        /// <remarks/>
        public event FetchPreOrderReportFromWebCompletedEventHandler FetchPreOrderReportFromWebCompleted;
        
        /// <remarks/>
        public event CreateDeliveryPreOrderSingleOrderDetForWebCompletedEventHandler CreateDeliveryPreOrderSingleOrderDetForWebCompleted;
        
        /// <remarks/>
        public event SetDeliveryAsDeliveredStatusCompletedEventHandler SetDeliveryAsDeliveredStatusCompleted;
        
        /// <remarks/>
        public event CancelPreOrderCompletedEventHandler CancelPreOrderCompleted;
        
        /// <remarks/>
        public event DeliveryGetDeliveryTrackCompletedEventHandler DeliveryGetDeliveryTrackCompleted;
        
        /// <remarks/>
        public event DeliverySetDeliveredCompletedEventHandler DeliverySetDeliveredCompleted;
        
        /// <remarks/>
        public event SendNotifiyMailDeliveryCompletedEventHandler SendNotifiyMailDeliveryCompleted;
        
        /// <remarks/>
        public event FetchDeliveryOrderToPrintByOrderDetIDCompletedEventHandler FetchDeliveryOrderToPrintByOrderDetIDCompleted;
        
        /// <remarks/>
        public event AutoAssignDepositWhenpayInstallmentCompletedEventHandler AutoAssignDepositWhenpayInstallmentCompleted;
        
        /// <remarks/>
        public event GetDataOrderDetForRefundCompletedEventHandler GetDataOrderDetForRefundCompleted;
        
        /// <remarks/>
        public event GetDataOrderDetForRefundStrCompletedEventHandler GetDataOrderDetForRefundStrCompleted;
        
        /// <remarks/>
        public event ResetDepositAmountCompletedEventHandler ResetDepositAmountCompleted;
        
        /// <remarks/>
        public event AssignAutoDepositCompletedEventHandler AssignAutoDepositCompleted;
        
        /// <remarks/>
        public event InventoryFetchItemWithFilterCompletedEventHandler InventoryFetchItemWithFilterCompleted;
        
        /// <remarks/>
        public event GetChangeTrackingCurrentVersionCompletedEventHandler GetChangeTrackingCurrentVersionCompleted;
        
        /// <remarks/>
        public event GetChangeTrackingVersionSyncStatusCompletedEventHandler GetChangeTrackingVersionSyncStatusCompleted;
        
        /// <remarks/>
        public event GetChangeTrackingChangesCompressedCompletedEventHandler GetChangeTrackingChangesCompressedCompleted;
        
        /// <remarks/>
        public event EnableChangeTrackingCompletedEventHandler EnableChangeTrackingCompleted;
        
        /// <remarks/>
        public event EnableChangeTrackingTableCompletedEventHandler EnableChangeTrackingTableCompleted;
        
        /// <remarks/>
        public event GetChangeTrackingVersionCompletedEventHandler GetChangeTrackingVersionCompleted;
        
        /// <remarks/>
        public event GetChangeTrackingTableMinValidVersionCompletedEventHandler GetChangeTrackingTableMinValidVersionCompleted;
        
        /// <remarks/>
        public event GetChangeTrackingFullTableCompletedEventHandler GetChangeTrackingFullTableCompleted;
        
        /// <remarks/>
        public event GetInventoryHdrFullTableCompletedEventHandler GetInventoryHdrFullTableCompleted;
        
        /// <remarks/>
        public event GetInventoryDetFullTableCompletedEventHandler GetInventoryDetFullTableCompleted;
        
        /// <remarks/>
        public event GetChangeTrackingChangesTableCompletedEventHandler GetChangeTrackingChangesTableCompleted;
        
        /// <remarks/>
        public event GetAppSettingValueCompletedEventHandler GetAppSettingValueCompleted;
        
        /// <remarks/>
        public event SetAppSettingValueCompletedEventHandler SetAppSettingValueCompleted;
        
        /// <remarks/>
        public event SetAppSettingValueBatchCompletedEventHandler SetAppSettingValueBatchCompleted;
        
        /// <remarks/>
        public event DeleteAppSettingKeyCompletedEventHandler DeleteAppSettingKeyCompleted;
        
        /// <remarks/>
        public event ExecuteUpdateUsingDataTableCompletedEventHandler ExecuteUpdateUsingDataTableCompleted;
        
        /// <remarks/>
        public event UploadOrderTablesCompletedEventHandler UploadOrderTablesCompleted;
        
        /// <remarks/>
        public event UploadLogsTablesCompletedEventHandler UploadLogsTablesCompleted;
        
        /// <remarks/>
        public event UploadTablesCompletedEventHandler UploadTablesCompleted;
        
        /// <remarks/>
        public event DeleteInventoryDetFromVoidedOrderCompletedEventHandler DeleteInventoryDetFromVoidedOrderCompleted;
        
        /// <remarks/>
        public event UploadInventoryTablesCompletedEventHandler UploadInventoryTablesCompleted;
        
        /// <remarks/>
        public event UploadTableCompletedEventHandler UploadTableCompleted;
        
        /// <remarks/>
        public event PurchaseOrderCompressedCompletedEventHandler PurchaseOrderCompressedCompleted;
        
        /// <remarks/>
        public event PurchaseOrderCompressedWithCustomRefNoCompletedEventHandler PurchaseOrderCompressedWithCustomRefNoCompleted;
        
        /// <remarks/>
        public event PurchaseOrderCompressedWithCustomRefNoEditCompletedEventHandler PurchaseOrderCompressedWithCustomRefNoEditCompleted;
        
        /// <remarks/>
        public event SaveAttachmentCompletedEventHandler SaveAttachmentCompleted;
        
        /// <remarks/>
        public event UploadAttachmentCompletedEventHandler UploadAttachmentCompleted;
        
        /// <remarks/>
        public event DeleteAttachmentCompletedEventHandler DeleteAttachmentCompleted;
        
        /// <remarks/>
        public event GetCustomPONoSettingCompletedEventHandler GetCustomPONoSettingCompleted;
        
        /// <remarks/>
        public event GetCustomGRNoSettingCompletedEventHandler GetCustomGRNoSettingCompleted;
        
        /// <remarks/>
        public event SyncCategoryFromMagentoCompletedEventHandler SyncCategoryFromMagentoCompleted;
        
        /// <remarks/>
        public event SubmitSalesCompletedEventHandler SubmitSalesCompleted;
        
        /// <remarks/>
        public event AddAccessLogCompletedEventHandler AddAccessLogCompleted;
        
        /// <remarks/>
        public event FetchUpdatedGroupUserPrivilegesCompletedEventHandler FetchUpdatedGroupUserPrivilegesCompleted;
        
        /// <remarks/>
        public event FetchGroupPrivilegesRealTimeCompletedEventHandler FetchGroupPrivilegesRealTimeCompleted;
        
        /// <remarks/>
        public event GetItemRecordCountAfterTimestampCompletedEventHandler GetItemRecordCountAfterTimestampCompleted;
        
        /// <remarks/>
        public event GetItemTableCompressedRealTimeCompletedEventHandler GetItemTableCompressedRealTimeCompleted;
        
        /// <remarks/>
        public event FetchDataSetByTimestampCompletedEventHandler FetchDataSetByTimestampCompleted;
        
        /// <remarks/>
        public event FetchDataSetByTimeStampPerMemberCompletedEventHandler FetchDataSetByTimeStampPerMemberCompleted;
        
        /// <remarks/>
        public event FetchDataSetByTimeStampPerModuleNameCompletedEventHandler FetchDataSetByTimeStampPerModuleNameCompleted;
        
        /// <remarks/>
        public event FetchRecordNoByTimestampCompletedEventHandler FetchRecordNoByTimestampCompleted;
        
        /// <remarks/>
        public event FetchRecordNoByTimestampByInvLocIDCompletedEventHandler FetchRecordNoByTimestampByInvLocIDCompleted;
        
        /// <remarks/>
        public event FetchRecordNoByTimestampByPOSIDCompletedEventHandler FetchRecordNoByTimestampByPOSIDCompleted;
        
        /// <remarks/>
        public event FetchRecordNoByTimestampByOutletNameCompletedEventHandler FetchRecordNoByTimestampByOutletNameCompleted;
        
        /// <remarks/>
        public event FetchRecordNoByTimestampByMemberCompletedEventHandler FetchRecordNoByTimestampByMemberCompleted;
        
        /// <remarks/>
        public event FetchRecordNoByTimestampByModuleNameCompletedEventHandler FetchRecordNoByTimestampByModuleNameCompleted;
        
        /// <remarks/>
        public event FetchPromoRecordNoByTimestampByOutletNameCompletedEventHandler FetchPromoRecordNoByTimestampByOutletNameCompleted;
        
        /// <remarks/>
        public event GetPromoRecordCountAfterTimestampCompletedEventHandler GetPromoRecordCountAfterTimestampCompleted;
        
        /// <remarks/>
        public event FetchRecordNoByTimestampAppointmentCompletedEventHandler FetchRecordNoByTimestampAppointmentCompleted;
        
        /// <remarks/>
        public event getSalesLastTimeStampCompletedEventHandler getSalesLastTimeStampCompleted;
        
        /// <remarks/>
        public event GetAccessLogLastTimeStampCompletedEventHandler GetAccessLogLastTimeStampCompleted;
        
        /// <remarks/>
        public event getCashRecordingLastTimeStampCompletedEventHandler getCashRecordingLastTimeStampCompleted;
        
        /// <remarks/>
        public event getQuotationLastTimeStampCompletedEventHandler getQuotationLastTimeStampCompleted;
        
        /// <remarks/>
        public event getCounterCloselogLastTimeStampCompletedEventHandler getCounterCloselogLastTimeStampCompleted;
        
        /// <remarks/>
        public event GetAttendanceLastTimeStampCompletedEventHandler GetAttendanceLastTimeStampCompleted;
        
        /// <remarks/>
        public event getLastTimeStampByPOSIDCompletedEventHandler getLastTimeStampByPOSIDCompleted;
        
        /// <remarks/>
        public event GetInventoryCountRealTimeCompletedEventHandler GetInventoryCountRealTimeCompleted;
        
        /// <remarks/>
        public event GetInventoryRealTimeDataCompletedEventHandler GetInventoryRealTimeDataCompleted;
        
        /// <remarks/>
        public event GetPromoRealTimeDataCompletedEventHandler GetPromoRealTimeDataCompleted;
        
        /// <remarks/>
        public event GetPromoRealTimeDataAllCompletedEventHandler GetPromoRealTimeDataAllCompleted;
        
        /// <remarks/>
        public event GetPurchaseOrderRealTimeDataCompletedEventHandler GetPurchaseOrderRealTimeDataCompleted;
        
        /// <remarks/>
        public event GetItemGroupRealTimeDataCompletedEventHandler GetItemGroupRealTimeDataCompleted;
        
        /// <remarks/>
        public event GetStockTakeRealTimeDataCompletedEventHandler GetStockTakeRealTimeDataCompleted;
        
        /// <remarks/>
        public event GetPointsRealTimeDataAllCompletedEventHandler GetPointsRealTimeDataAllCompleted;
        
        /// <remarks/>
        public event FetchOrdersCCMWRealTimeCompletedEventHandler FetchOrdersCCMWRealTimeCompleted;
        
        /// <remarks/>
        public event FetchAccessLogRealTimeCompletedEventHandler FetchAccessLogRealTimeCompleted;
        
        /// <remarks/>
        public event FetchAAttendanceRealTimeCompletedEventHandler FetchAAttendanceRealTimeCompleted;
        
        /// <remarks/>
        public event FetchCounterCloseLogRealTimeCompletedEventHandler FetchCounterCloseLogRealTimeCompleted;
        
        /// <remarks/>
        public event FetchCounterCloseLogWithDetailRealTimeCompletedEventHandler FetchCounterCloseLogWithDetailRealTimeCompleted;
        
        /// <remarks/>
        public event FetchLoginActivityRealTimeCompletedEventHandler FetchLoginActivityRealTimeCompleted;
        
        /// <remarks/>
        public event FetchQuotationRealTimeCompletedEventHandler FetchQuotationRealTimeCompleted;
        
        /// <remarks/>
        public event FetchCashRecordingRealTimeCompletedEventHandler FetchCashRecordingRealTimeCompleted;
        
        /// <remarks/>
        public event FetchPerformanceLogRealTimeCompletedEventHandler FetchPerformanceLogRealTimeCompleted;
        
        /// <remarks/>
        public event FetchPerformanceLogSummaryRealTimeCompletedEventHandler FetchPerformanceLogSummaryRealTimeCompleted;
        
        /// <remarks/>
        public event SaveAppointmentCompletedEventHandler SaveAppointmentCompleted;
        
        /// <remarks/>
        public event FetchDataSetByTimestampAppointmentCompletedEventHandler FetchDataSetByTimestampAppointmentCompleted;
        
        /// <remarks/>
        public event FetchDataSetByTimestampSpecialDiscountCompletedEventHandler FetchDataSetByTimestampSpecialDiscountCompleted;
        
        /// <remarks/>
        public event SaveInventoryFileCompletedEventHandler SaveInventoryFileCompleted;
        
        /// <remarks/>
        public event GetInventorySavedFileCompletedEventHandler GetInventorySavedFileCompleted;
        
        /// <remarks/>
        public event LoadInventoryFromFileCompletedEventHandler LoadInventoryFromFileCompleted;
        
        /// <remarks/>
        public event removeSavedFileCompletedEventHandler removeSavedFileCompleted;
        
        /// <remarks/>
        public event GetAppointmentLastTimeStampCompletedEventHandler GetAppointmentLastTimeStampCompleted;
        
        /// <remarks/>
        public event UpdateMemberDataWebCompletedEventHandler UpdateMemberDataWebCompleted;
        
        /// <remarks/>
        public event UpdateMemberTagNoWebCompletedEventHandler UpdateMemberTagNoWebCompleted;
        
        /// <remarks/>
        public event FetchOrdersCCMWCompletedEventHandler FetchOrdersCCMWCompleted;
        
        /// <remarks/>
        public event FetchOrdersCompletedEventHandler FetchOrdersCompleted;
        
        /// <remarks/>
        public event FetchNewMembershipSignUpsCompletedEventHandler FetchNewMembershipSignUpsCompleted;
        
        /// <remarks/>
        public event FetchInventorysCompletedEventHandler FetchInventorysCompleted;
        
        /// <remarks/>
        public event FetchLogTableCompletedEventHandler FetchLogTableCompleted;
        
        /// <remarks/>
        public event FetchLogTableWithUpdateCompletedEventHandler FetchLogTableWithUpdateCompleted;
        
        /// <remarks/>
        public event FetchDeliveryOrderCompletedEventHandler FetchDeliveryOrderCompleted;
        
        /// <remarks/>
        public event FetchMemberRemarksCompletedEventHandler FetchMemberRemarksCompleted;
        
        /// <remarks/>
        public event UpdateOrderHdrRemarkCompletedEventHandler UpdateOrderHdrRemarkCompleted;
        
        /// <remarks/>
        public event FreezePOSByPointOfSaleIDCompletedEventHandler FreezePOSByPointOfSaleIDCompleted;
        
        /// <remarks/>
        public event GetDataTableCompletedEventHandler GetDataTableCompleted;
        
        /// <remarks/>
        public event GetDataTableCompressedCompletedEventHandler GetDataTableCompressedCompleted;
        
        /// <remarks/>
        public event GetOrderHdrListCompletedEventHandler GetOrderHdrListCompleted;
        
        /// <remarks/>
        public event GetOrderHdrListWithoutPOSIDCompletedEventHandler GetOrderHdrListWithoutPOSIDCompleted;
        
        /// <remarks/>
        public event GetInventoryHdrListCompletedEventHandler GetInventoryHdrListCompleted;
        
        /// <remarks/>
        public event FetchSalesCompletedEventHandler FetchSalesCompleted;
        
        /// <remarks/>
        public event GetDataTableCustomCompressedCompletedEventHandler GetDataTableCustomCompressedCompleted;
        
        /// <remarks/>
        public event GetDeliveryOrderCompletedEventHandler GetDeliveryOrderCompleted;
        
        /// <remarks/>
        public event GetPastTransactionCompletedEventHandler GetPastTransactionCompleted;
        
        /// <remarks/>
        public event GetPastTransactionWithOutletCompletedEventHandler GetPastTransactionWithOutletCompleted;
        
        /// <remarks/>
        public event getPackageListCompletedEventHandler getPackageListCompleted;
        
        /// <remarks/>
        public event GetHistory_PointCompletedEventHandler GetHistory_PointCompleted;
        
        /// <remarks/>
        public event AllocatePendingPackageCompletedEventHandler AllocatePendingPackageCompleted;
        
        /// <remarks/>
        public event AllocatePendingPackageNEWCompletedEventHandler AllocatePendingPackageNEWCompleted;
        
        /// <remarks/>
        public event AddPointCompletedEventHandler AddPointCompleted;
        
        /// <remarks/>
        public event DeductPointsCompletedEventHandler DeductPointsCompleted;
        
        /// <remarks/>
        public event GetCurrentPointCompletedEventHandler GetCurrentPointCompleted;
        
        /// <remarks/>
        public event GetAllocatedPointCompletedEventHandler GetAllocatedPointCompleted;
        
        /// <remarks/>
        public event GetCurrentPointsAmountCompletedEventHandler GetCurrentPointsAmountCompleted;
        
        /// <remarks/>
        public event GetPackageBreakdownCompletedEventHandler GetPackageBreakdownCompleted;
        
        /// <remarks/>
        public event GetPackageAmount_plusBreakdownCompletedEventHandler GetPackageAmount_plusBreakdownCompleted;
        
        /// <remarks/>
        public event GetPackageAmountCompletedEventHandler GetPackageAmountCompleted;
        
        /// <remarks/>
        public event GetPackageAmountsCompletedEventHandler GetPackageAmountsCompleted;
        
        /// <remarks/>
        public event UpdateAllCompletedEventHandler UpdateAllCompleted;
        
        /// <remarks/>
        public event RevertPointsCompletedEventHandler RevertPointsCompleted;
        
        /// <remarks/>
        public event UpdMembershipPackageCompletedEventHandler UpdMembershipPackageCompleted;
        
        /// <remarks/>
        public event GetInstallmentListByCustomerCompletedEventHandler GetInstallmentListByCustomerCompleted;
        
        /// <remarks/>
        public event GetInstallmentDetailByOrderHdrIDCompletedEventHandler GetInstallmentDetailByOrderHdrIDCompleted;
        
        /// <remarks/>
        public event CheckSerialNoIsExistCompletedEventHandler CheckSerialNoIsExistCompleted;
        
        /// <remarks/>
        public event CheckSerialNoIsNotExistCompletedEventHandler CheckSerialNoIsNotExistCompleted;
        
        /// <remarks/>
        public event GetStockQuantityCompletedEventHandler GetStockQuantityCompleted;
        
        /// <remarks/>
        public event GetStockQuantityByItemCompletedEventHandler GetStockQuantityByItemCompleted;
        
        /// <remarks/>
        public event TransferOutAutoReceiveCompressedCompletedEventHandler TransferOutAutoReceiveCompressedCompleted;
        
        /// <remarks/>
        public event TransferOutAutoReceiveCompletedEventHandler TransferOutAutoReceiveCompleted;
        
        /// <remarks/>
        public event StockOutCompressedCompletedEventHandler StockOutCompressedCompleted;
        
        /// <remarks/>
        public event StockOutCompletedEventHandler StockOutCompleted;
        
        /// <remarks/>
        public event StockOutItemCompletedEventHandler StockOutItemCompleted;
        
        /// <remarks/>
        public event StockInCompressedCompletedEventHandler StockInCompressedCompleted;
        
        /// <remarks/>
        public event StockInCompletedEventHandler StockInCompleted;
        
        /// <remarks/>
        public event StockReturnCompressedCompletedEventHandler StockReturnCompressedCompleted;
        
        /// <remarks/>
        public event StockReturnCompletedEventHandler StockReturnCompleted;
        
        /// <remarks/>
        public event CreateStockTakeEntriesCompletedEventHandler CreateStockTakeEntriesCompleted;
        
        /// <remarks/>
        public event CreateStockTakeEntriesCompressedCompletedEventHandler CreateStockTakeEntriesCompressedCompleted;
        
        /// <remarks/>
        public event AdjustStockTakeDiscrepancyCompletedEventHandler AdjustStockTakeDiscrepancyCompleted;
        
        /// <remarks/>
        public event AdjustStockTakeDiscrepancyNewCompletedEventHandler AdjustStockTakeDiscrepancyNewCompleted;
        
        /// <remarks/>
        public event CorrectStockTakeDiscrepancyCompletedEventHandler CorrectStockTakeDiscrepancyCompleted;
        
        /// <remarks/>
        public event GetTotalOfAdjustedItemCompletedEventHandler GetTotalOfAdjustedItemCompleted;
        
        /// <remarks/>
        public event IsThereUnAdjustedStockTakeCompletedEventHandler IsThereUnAdjustedStockTakeCompleted;
        
        /// <remarks/>
        public event GetUnAdjustedStockTakeDateCompletedEventHandler GetUnAdjustedStockTakeDateCompleted;
        
        /// <remarks/>
        public event DeleteStockTakeCompletedEventHandler DeleteStockTakeCompleted;
        
        /// <remarks/>
        public event AssignStockOutToConfirmedOrderUsingTransactionScopeCompletedEventHandler AssignStockOutToConfirmedOrderUsingTransactionScopeCompleted;
        
        /// <remarks/>
        public event FetchStockBalanceReportCompletedEventHandler FetchStockBalanceReportCompleted;
        
        /// <remarks/>
        public event FetchStockBalanceReportWithZeroQtyCompletedEventHandler FetchStockBalanceReportWithZeroQtyCompleted;
        
        /// <remarks/>
        public event FetchStockBalanceReportWithZeroQtyByCategoryCompletedEventHandler FetchStockBalanceReportWithZeroQtyByCategoryCompleted;
        
        /// <remarks/>
        public event FetchStockSummaryReportCompletedEventHandler FetchStockSummaryReportCompleted;
        
        /// <remarks/>
        public event FetchStockSummaryReportWithRemoveZeroQtyCompletedEventHandler FetchStockSummaryReportWithRemoveZeroQtyCompleted;
        
        /// <remarks/>
        public event FetchStockCardReportCompletedEventHandler FetchStockCardReportCompleted;
        
        /// <remarks/>
        public event FetchInventoryActivityReportWithTransferCompletedEventHandler FetchInventoryActivityReportWithTransferCompleted;
        
        /// <remarks/>
        public event FetchInventoryActivityReportWithTransferAndRefNoCompletedEventHandler FetchInventoryActivityReportWithTransferAndRefNoCompleted;
        
        /// <remarks/>
        public event FetchInventoryActivityHeaderCompletedEventHandler FetchInventoryActivityHeaderCompleted;
        
        /// <remarks/>
        public event FetchInventoryActivityHeaderWithRefNoCompletedEventHandler FetchInventoryActivityHeaderWithRefNoCompleted;
        
        /// <remarks/>
        public event FetchCostPriceByItemForStockInCompletedEventHandler FetchCostPriceByItemForStockInCompleted;
        
        /// <remarks/>
        public event GetStockBalanceQtyByItemSummaryByDateCompletedEventHandler GetStockBalanceQtyByItemSummaryByDateCompleted;
        
        /// <remarks/>
        public event FetchInventoryControllerByRefNoCompletedEventHandler FetchInventoryControllerByRefNoCompleted;
        
        /// <remarks/>
        public event GetTransferDestinationCompletedEventHandler GetTransferDestinationCompleted;
        
        /// <remarks/>
        public event GetSourceDestinationCompletedEventHandler GetSourceDestinationCompleted;
        
        /// <remarks/>
        public event FetchItemTraceReportCompletedEventHandler FetchItemTraceReportCompleted;
        
        /// <remarks/>
        public event getSupplierByIDCompletedEventHandler getSupplierByIDCompleted;
        
        /// <remarks/>
        public event getSupplierByNameCompletedEventHandler getSupplierByNameCompleted;
        
        /// <remarks/>
        public event LoadConfirmedPurchaseOrderControllerForStockInCompletedEventHandler LoadConfirmedPurchaseOrderControllerForStockInCompleted;
        
        /// <remarks/>
        public event GetGoodsReceiveListCompletedEventHandler GetGoodsReceiveListCompleted;
        
        /// <remarks/>
        public event InventoryFetchItemWithFilterWithSupplierIDCompletedEventHandler InventoryFetchItemWithFilterWithSupplierIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchAppointmentsCCMWRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchAppointmentsCCMWRealTime([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsHeaders, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsDetails, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsMembers) {
            object[] results = this.Invoke("FetchAppointmentsCCMWRealTime", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsMembers});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchAppointmentsCCMWRealTimeAsync(string[][] dsHeaders, string[][] dsDetails, string[][] dsMembers) {
            this.FetchAppointmentsCCMWRealTimeAsync(dsHeaders, dsDetails, dsMembers, null);
        }
        
        /// <remarks/>
        public void FetchAppointmentsCCMWRealTimeAsync(string[][] dsHeaders, string[][] dsDetails, string[][] dsMembers, object userState) {
            if ((this.FetchAppointmentsCCMWRealTimeOperationCompleted == null)) {
                this.FetchAppointmentsCCMWRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchAppointmentsCCMWRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchAppointmentsCCMWRealTime", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsMembers}, this.FetchAppointmentsCCMWRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchAppointmentsCCMWRealTimeOperationCompleted(object arg) {
            if ((this.FetchAppointmentsCCMWRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchAppointmentsCCMWRealTimeCompleted(this, new FetchAppointmentsCCMWRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UpdateAppointmentsIsUpdated", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateAppointmentsIsUpdated(string ListId) {
            object[] results = this.Invoke("UpdateAppointmentsIsUpdated", new object[] {
                        ListId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAppointmentsIsUpdatedAsync(string ListId) {
            this.UpdateAppointmentsIsUpdatedAsync(ListId, null);
        }
        
        /// <remarks/>
        public void UpdateAppointmentsIsUpdatedAsync(string ListId, object userState) {
            if ((this.UpdateAppointmentsIsUpdatedOperationCompleted == null)) {
                this.UpdateAppointmentsIsUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAppointmentsIsUpdatedOperationCompleted);
            }
            this.InvokeAsync("UpdateAppointmentsIsUpdated", new object[] {
                        ListId}, this.UpdateAppointmentsIsUpdatedOperationCompleted, userState);
        }
        
        private void OnUpdateAppointmentsIsUpdatedOperationCompleted(object arg) {
            if ((this.UpdateAppointmentsIsUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAppointmentsIsUpdatedCompleted(this, new UpdateAppointmentsIsUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetDeliveryOrderLastTimeStamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDeliveryOrderLastTimeStamp(int PointofSaleID, bool IsUpdateServer, out System.DateTime res) {
            object[] results = this.Invoke("GetDeliveryOrderLastTimeStamp", new object[] {
                        PointofSaleID,
                        IsUpdateServer});
            res = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryOrderLastTimeStampAsync(int PointofSaleID, bool IsUpdateServer) {
            this.GetDeliveryOrderLastTimeStampAsync(PointofSaleID, IsUpdateServer, null);
        }
        
        /// <remarks/>
        public void GetDeliveryOrderLastTimeStampAsync(int PointofSaleID, bool IsUpdateServer, object userState) {
            if ((this.GetDeliveryOrderLastTimeStampOperationCompleted == null)) {
                this.GetDeliveryOrderLastTimeStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryOrderLastTimeStampOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryOrderLastTimeStamp", new object[] {
                        PointofSaleID,
                        IsUpdateServer}, this.GetDeliveryOrderLastTimeStampOperationCompleted, userState);
        }
        
        private void OnGetDeliveryOrderLastTimeStampOperationCompleted(object arg) {
            if ((this.GetDeliveryOrderLastTimeStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryOrderLastTimeStampCompleted(this, new GetDeliveryOrderLastTimeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchDeliveryOrderCCMWRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchDeliveryOrderCCMWRealTime([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsHeaders, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsDetails, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsMembers, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsDeposit) {
            object[] results = this.Invoke("FetchDeliveryOrderCCMWRealTime", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsMembers,
                        dsDeposit});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchDeliveryOrderCCMWRealTimeAsync(string[][] dsHeaders, string[][] dsDetails, string[][] dsMembers, string[][] dsDeposit) {
            this.FetchDeliveryOrderCCMWRealTimeAsync(dsHeaders, dsDetails, dsMembers, dsDeposit, null);
        }
        
        /// <remarks/>
        public void FetchDeliveryOrderCCMWRealTimeAsync(string[][] dsHeaders, string[][] dsDetails, string[][] dsMembers, string[][] dsDeposit, object userState) {
            if ((this.FetchDeliveryOrderCCMWRealTimeOperationCompleted == null)) {
                this.FetchDeliveryOrderCCMWRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchDeliveryOrderCCMWRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchDeliveryOrderCCMWRealTime", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsMembers,
                        dsDeposit}, this.FetchDeliveryOrderCCMWRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchDeliveryOrderCCMWRealTimeOperationCompleted(object arg) {
            if ((this.FetchDeliveryOrderCCMWRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchDeliveryOrderCCMWRealTimeCompleted(this, new FetchDeliveryOrderCCMWRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchRecordNoByTimestampDeliveryOrder", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FetchRecordNoByTimestampDeliveryOrder(System.DateTime modifiedOn, int PointOfSaleID) {
            object[] results = this.Invoke("FetchRecordNoByTimestampDeliveryOrder", new object[] {
                        modifiedOn,
                        PointOfSaleID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampDeliveryOrderAsync(System.DateTime modifiedOn, int PointOfSaleID) {
            this.FetchRecordNoByTimestampDeliveryOrderAsync(modifiedOn, PointOfSaleID, null);
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampDeliveryOrderAsync(System.DateTime modifiedOn, int PointOfSaleID, object userState) {
            if ((this.FetchRecordNoByTimestampDeliveryOrderOperationCompleted == null)) {
                this.FetchRecordNoByTimestampDeliveryOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchRecordNoByTimestampDeliveryOrderOperationCompleted);
            }
            this.InvokeAsync("FetchRecordNoByTimestampDeliveryOrder", new object[] {
                        modifiedOn,
                        PointOfSaleID}, this.FetchRecordNoByTimestampDeliveryOrderOperationCompleted, userState);
        }
        
        private void OnFetchRecordNoByTimestampDeliveryOrderOperationCompleted(object arg) {
            if ((this.FetchRecordNoByTimestampDeliveryOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchRecordNoByTimestampDeliveryOrderCompleted(this, new FetchRecordNoByTimestampDeliveryOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchDataSetByTimestampDeliveryOrder", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchDataSetByTimestampDeliveryOrder(System.DateTime modifiedDate, int noOfRecords, int posID) {
            object[] results = this.Invoke("FetchDataSetByTimestampDeliveryOrder", new object[] {
                        modifiedDate,
                        noOfRecords,
                        posID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchDataSetByTimestampDeliveryOrderAsync(System.DateTime modifiedDate, int noOfRecords, int posID) {
            this.FetchDataSetByTimestampDeliveryOrderAsync(modifiedDate, noOfRecords, posID, null);
        }
        
        /// <remarks/>
        public void FetchDataSetByTimestampDeliveryOrderAsync(System.DateTime modifiedDate, int noOfRecords, int posID, object userState) {
            if ((this.FetchDataSetByTimestampDeliveryOrderOperationCompleted == null)) {
                this.FetchDataSetByTimestampDeliveryOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchDataSetByTimestampDeliveryOrderOperationCompleted);
            }
            this.InvokeAsync("FetchDataSetByTimestampDeliveryOrder", new object[] {
                        modifiedDate,
                        noOfRecords,
                        posID}, this.FetchDataSetByTimestampDeliveryOrderOperationCompleted, userState);
        }
        
        private void OnFetchDataSetByTimestampDeliveryOrderOperationCompleted(object arg) {
            if ((this.FetchDataSetByTimestampDeliveryOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchDataSetByTimestampDeliveryOrderCompleted(this, new FetchDataSetByTimestampDeliveryOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UpdateDeliveryOrderIsUpdated", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDeliveryOrderIsUpdated(string ListId) {
            object[] results = this.Invoke("UpdateDeliveryOrderIsUpdated", new object[] {
                        ListId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDeliveryOrderIsUpdatedAsync(string ListId) {
            this.UpdateDeliveryOrderIsUpdatedAsync(ListId, null);
        }
        
        /// <remarks/>
        public void UpdateDeliveryOrderIsUpdatedAsync(string ListId, object userState) {
            if ((this.UpdateDeliveryOrderIsUpdatedOperationCompleted == null)) {
                this.UpdateDeliveryOrderIsUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDeliveryOrderIsUpdatedOperationCompleted);
            }
            this.InvokeAsync("UpdateDeliveryOrderIsUpdated", new object[] {
                        ListId}, this.UpdateDeliveryOrderIsUpdatedOperationCompleted, userState);
        }
        
        private void OnUpdateDeliveryOrderIsUpdatedOperationCompleted(object arg) {
            if ((this.UpdateDeliveryOrderIsUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDeliveryOrderIsUpdatedCompleted(this, new UpdateDeliveryOrderIsUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DeleteSavedFileAll", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteSavedFileAll(out string status) {
            object[] results = this.Invoke("DeleteSavedFileAll", new object[0]);
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSavedFileAllAsync() {
            this.DeleteSavedFileAllAsync(null);
        }
        
        /// <remarks/>
        public void DeleteSavedFileAllAsync(object userState) {
            if ((this.DeleteSavedFileAllOperationCompleted == null)) {
                this.DeleteSavedFileAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSavedFileAllOperationCompleted);
            }
            this.InvokeAsync("DeleteSavedFileAll", new object[0], this.DeleteSavedFileAllOperationCompleted, userState);
        }
        
        private void OnDeleteSavedFileAllOperationCompleted(object arg) {
            if ((this.DeleteSavedFileAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSavedFileAllCompleted(this, new DeleteSavedFileAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DeleteSavedFileByName", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteSavedFileByName(string saveName, out string status) {
            object[] results = this.Invoke("DeleteSavedFileByName", new object[] {
                        saveName});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSavedFileByNameAsync(string saveName) {
            this.DeleteSavedFileByNameAsync(saveName, null);
        }
        
        /// <remarks/>
        public void DeleteSavedFileByNameAsync(string saveName, object userState) {
            if ((this.DeleteSavedFileByNameOperationCompleted == null)) {
                this.DeleteSavedFileByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSavedFileByNameOperationCompleted);
            }
            this.InvokeAsync("DeleteSavedFileByName", new object[] {
                        saveName}, this.DeleteSavedFileByNameOperationCompleted, userState);
        }
        
        private void OnDeleteSavedFileByNameOperationCompleted(object arg) {
            if ((this.DeleteSavedFileByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSavedFileByNameCompleted(this, new DeleteSavedFileByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/getOrderForRefund", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getOrderForRefund(string OrderRefNo, int currentPosID, bool AllowRefundForSameOutlet, out string status) {
            object[] results = this.Invoke("getOrderForRefund", new object[] {
                        OrderRefNo,
                        currentPosID,
                        AllowRefundForSameOutlet});
            status = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getOrderForRefundAsync(string OrderRefNo, int currentPosID, bool AllowRefundForSameOutlet) {
            this.getOrderForRefundAsync(OrderRefNo, currentPosID, AllowRefundForSameOutlet, null);
        }
        
        /// <remarks/>
        public void getOrderForRefundAsync(string OrderRefNo, int currentPosID, bool AllowRefundForSameOutlet, object userState) {
            if ((this.getOrderForRefundOperationCompleted == null)) {
                this.getOrderForRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrderForRefundOperationCompleted);
            }
            this.InvokeAsync("getOrderForRefund", new object[] {
                        OrderRefNo,
                        currentPosID,
                        AllowRefundForSameOutlet}, this.getOrderForRefundOperationCompleted, userState);
        }
        
        private void OngetOrderForRefundOperationCompleted(object arg) {
            if ((this.getOrderForRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrderForRefundCompleted(this, new getOrderForRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/getRatingLastTimeStamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getRatingLastTimeStamp(int PointofSaleID, out System.DateTime res) {
            object[] results = this.Invoke("getRatingLastTimeStamp", new object[] {
                        PointofSaleID});
            res = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getRatingLastTimeStampAsync(int PointofSaleID) {
            this.getRatingLastTimeStampAsync(PointofSaleID, null);
        }
        
        /// <remarks/>
        public void getRatingLastTimeStampAsync(int PointofSaleID, object userState) {
            if ((this.getRatingLastTimeStampOperationCompleted == null)) {
                this.getRatingLastTimeStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRatingLastTimeStampOperationCompleted);
            }
            this.InvokeAsync("getRatingLastTimeStamp", new object[] {
                        PointofSaleID}, this.getRatingLastTimeStampOperationCompleted, userState);
        }
        
        private void OngetRatingLastTimeStampOperationCompleted(object arg) {
            if ((this.getRatingLastTimeStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRatingLastTimeStampCompleted(this, new getRatingLastTimeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SyncRating", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SyncRating(string data) {
            object[] results = this.Invoke("SyncRating", new object[] {
                        data});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SyncRatingAsync(string data) {
            this.SyncRatingAsync(data, null);
        }
        
        /// <remarks/>
        public void SyncRatingAsync(string data, object userState) {
            if ((this.SyncRatingOperationCompleted == null)) {
                this.SyncRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncRatingOperationCompleted);
            }
            this.InvokeAsync("SyncRating", new object[] {
                        data}, this.SyncRatingOperationCompleted, userState);
        }
        
        private void OnSyncRatingOperationCompleted(object arg) {
            if ((this.SyncRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncRatingCompleted(this, new SyncRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchDataSetByTimestampVoucherHeader", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchDataSetByTimestampVoucherHeader(System.DateTime modifiedDate, int noOfRecords, string outletName) {
            object[] results = this.Invoke("FetchDataSetByTimestampVoucherHeader", new object[] {
                        modifiedDate,
                        noOfRecords,
                        outletName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchDataSetByTimestampVoucherHeaderAsync(System.DateTime modifiedDate, int noOfRecords, string outletName) {
            this.FetchDataSetByTimestampVoucherHeaderAsync(modifiedDate, noOfRecords, outletName, null);
        }
        
        /// <remarks/>
        public void FetchDataSetByTimestampVoucherHeaderAsync(System.DateTime modifiedDate, int noOfRecords, string outletName, object userState) {
            if ((this.FetchDataSetByTimestampVoucherHeaderOperationCompleted == null)) {
                this.FetchDataSetByTimestampVoucherHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchDataSetByTimestampVoucherHeaderOperationCompleted);
            }
            this.InvokeAsync("FetchDataSetByTimestampVoucherHeader", new object[] {
                        modifiedDate,
                        noOfRecords,
                        outletName}, this.FetchDataSetByTimestampVoucherHeaderOperationCompleted, userState);
        }
        
        private void OnFetchDataSetByTimestampVoucherHeaderOperationCompleted(object arg) {
            if ((this.FetchDataSetByTimestampVoucherHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchDataSetByTimestampVoucherHeaderCompleted(this, new FetchDataSetByTimestampVoucherHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchDataSetByTimestampVouchers", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchDataSetByTimestampVouchers(System.DateTime modifiedDate, int noOfRecords, string outletName) {
            object[] results = this.Invoke("FetchDataSetByTimestampVouchers", new object[] {
                        modifiedDate,
                        noOfRecords,
                        outletName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchDataSetByTimestampVouchersAsync(System.DateTime modifiedDate, int noOfRecords, string outletName) {
            this.FetchDataSetByTimestampVouchersAsync(modifiedDate, noOfRecords, outletName, null);
        }
        
        /// <remarks/>
        public void FetchDataSetByTimestampVouchersAsync(System.DateTime modifiedDate, int noOfRecords, string outletName, object userState) {
            if ((this.FetchDataSetByTimestampVouchersOperationCompleted == null)) {
                this.FetchDataSetByTimestampVouchersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchDataSetByTimestampVouchersOperationCompleted);
            }
            this.InvokeAsync("FetchDataSetByTimestampVouchers", new object[] {
                        modifiedDate,
                        noOfRecords,
                        outletName}, this.FetchDataSetByTimestampVouchersOperationCompleted, userState);
        }
        
        private void OnFetchDataSetByTimestampVouchersOperationCompleted(object arg) {
            if ((this.FetchDataSetByTimestampVouchersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchDataSetByTimestampVouchersCompleted(this, new FetchDataSetByTimestampVouchersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/getOrder", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getOrder(string OrderRefNo, out string status) {
            object[] results = this.Invoke("getOrder", new object[] {
                        OrderRefNo});
            status = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getOrderAsync(string OrderRefNo) {
            this.getOrderAsync(OrderRefNo, null);
        }
        
        /// <remarks/>
        public void getOrderAsync(string OrderRefNo, object userState) {
            if ((this.getOrderOperationCompleted == null)) {
                this.getOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrderOperationCompleted);
            }
            this.InvokeAsync("getOrder", new object[] {
                        OrderRefNo}, this.getOrderOperationCompleted, userState);
        }
        
        private void OngetOrderOperationCompleted(object arg) {
            if ((this.getOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOrderCompleted(this, new getOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchPreOrderReportFromWeb", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FetchPreOrderReportFromWeb(System.DateTime StartDate, System.DateTime EndDate, string ItemName, string MembershipNo, string CustName, string IsOutstanding, string Notified, bool OnlyReadyToDeliver, int InventoryLocationID, string SortBy, string SortDir, string Status) {
            object[] results = this.Invoke("FetchPreOrderReportFromWeb", new object[] {
                        StartDate,
                        EndDate,
                        ItemName,
                        MembershipNo,
                        CustName,
                        IsOutstanding,
                        Notified,
                        OnlyReadyToDeliver,
                        InventoryLocationID,
                        SortBy,
                        SortDir,
                        Status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FetchPreOrderReportFromWebAsync(System.DateTime StartDate, System.DateTime EndDate, string ItemName, string MembershipNo, string CustName, string IsOutstanding, string Notified, bool OnlyReadyToDeliver, int InventoryLocationID, string SortBy, string SortDir, string Status) {
            this.FetchPreOrderReportFromWebAsync(StartDate, EndDate, ItemName, MembershipNo, CustName, IsOutstanding, Notified, OnlyReadyToDeliver, InventoryLocationID, SortBy, SortDir, Status, null);
        }
        
        /// <remarks/>
        public void FetchPreOrderReportFromWebAsync(System.DateTime StartDate, System.DateTime EndDate, string ItemName, string MembershipNo, string CustName, string IsOutstanding, string Notified, bool OnlyReadyToDeliver, int InventoryLocationID, string SortBy, string SortDir, string Status, object userState) {
            if ((this.FetchPreOrderReportFromWebOperationCompleted == null)) {
                this.FetchPreOrderReportFromWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchPreOrderReportFromWebOperationCompleted);
            }
            this.InvokeAsync("FetchPreOrderReportFromWeb", new object[] {
                        StartDate,
                        EndDate,
                        ItemName,
                        MembershipNo,
                        CustName,
                        IsOutstanding,
                        Notified,
                        OnlyReadyToDeliver,
                        InventoryLocationID,
                        SortBy,
                        SortDir,
                        Status}, this.FetchPreOrderReportFromWebOperationCompleted, userState);
        }
        
        private void OnFetchPreOrderReportFromWebOperationCompleted(object arg) {
            if ((this.FetchPreOrderReportFromWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchPreOrderReportFromWebCompleted(this, new FetchPreOrderReportFromWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/CreateDeliveryPreOrderSingleOrderDetForWeb", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateDeliveryPreOrderSingleOrderDetForWeb(string orderdetid, int qty, int personnelID, int pointOfSaleID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] signature, out string status) {
            object[] results = this.Invoke("CreateDeliveryPreOrderSingleOrderDetForWeb", new object[] {
                        orderdetid,
                        qty,
                        personnelID,
                        pointOfSaleID,
                        signature});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDeliveryPreOrderSingleOrderDetForWebAsync(string orderdetid, int qty, int personnelID, int pointOfSaleID, byte[] signature) {
            this.CreateDeliveryPreOrderSingleOrderDetForWebAsync(orderdetid, qty, personnelID, pointOfSaleID, signature, null);
        }
        
        /// <remarks/>
        public void CreateDeliveryPreOrderSingleOrderDetForWebAsync(string orderdetid, int qty, int personnelID, int pointOfSaleID, byte[] signature, object userState) {
            if ((this.CreateDeliveryPreOrderSingleOrderDetForWebOperationCompleted == null)) {
                this.CreateDeliveryPreOrderSingleOrderDetForWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDeliveryPreOrderSingleOrderDetForWebOperationCompleted);
            }
            this.InvokeAsync("CreateDeliveryPreOrderSingleOrderDetForWeb", new object[] {
                        orderdetid,
                        qty,
                        personnelID,
                        pointOfSaleID,
                        signature}, this.CreateDeliveryPreOrderSingleOrderDetForWebOperationCompleted, userState);
        }
        
        private void OnCreateDeliveryPreOrderSingleOrderDetForWebOperationCompleted(object arg) {
            if ((this.CreateDeliveryPreOrderSingleOrderDetForWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDeliveryPreOrderSingleOrderDetForWebCompleted(this, new CreateDeliveryPreOrderSingleOrderDetForWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SetDeliveryAsDeliveredStatus", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetDeliveryAsDeliveredStatus(string orderdetid, string username, out string status) {
            object[] results = this.Invoke("SetDeliveryAsDeliveredStatus", new object[] {
                        orderdetid,
                        username});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetDeliveryAsDeliveredStatusAsync(string orderdetid, string username) {
            this.SetDeliveryAsDeliveredStatusAsync(orderdetid, username, null);
        }
        
        /// <remarks/>
        public void SetDeliveryAsDeliveredStatusAsync(string orderdetid, string username, object userState) {
            if ((this.SetDeliveryAsDeliveredStatusOperationCompleted == null)) {
                this.SetDeliveryAsDeliveredStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDeliveryAsDeliveredStatusOperationCompleted);
            }
            this.InvokeAsync("SetDeliveryAsDeliveredStatus", new object[] {
                        orderdetid,
                        username}, this.SetDeliveryAsDeliveredStatusOperationCompleted, userState);
        }
        
        private void OnSetDeliveryAsDeliveredStatusOperationCompleted(object arg) {
            if ((this.SetDeliveryAsDeliveredStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDeliveryAsDeliveredStatusCompleted(this, new SetDeliveryAsDeliveredStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/CancelPreOrder", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelPreOrder(string orderHdrID, string orderDetID, string username, out string status) {
            object[] results = this.Invoke("CancelPreOrder", new object[] {
                        orderHdrID,
                        orderDetID,
                        username});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelPreOrderAsync(string orderHdrID, string orderDetID, string username) {
            this.CancelPreOrderAsync(orderHdrID, orderDetID, username, null);
        }
        
        /// <remarks/>
        public void CancelPreOrderAsync(string orderHdrID, string orderDetID, string username, object userState) {
            if ((this.CancelPreOrderOperationCompleted == null)) {
                this.CancelPreOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPreOrderOperationCompleted);
            }
            this.InvokeAsync("CancelPreOrder", new object[] {
                        orderHdrID,
                        orderDetID,
                        username}, this.CancelPreOrderOperationCompleted, userState);
        }
        
        private void OnCancelPreOrderOperationCompleted(object arg) {
            if ((this.CancelPreOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPreOrderCompleted(this, new CancelPreOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DeliveryGetDeliveryTrack", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeliveryGetDeliveryTrack(string orderdetid) {
            object[] results = this.Invoke("DeliveryGetDeliveryTrack", new object[] {
                        orderdetid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeliveryGetDeliveryTrackAsync(string orderdetid) {
            this.DeliveryGetDeliveryTrackAsync(orderdetid, null);
        }
        
        /// <remarks/>
        public void DeliveryGetDeliveryTrackAsync(string orderdetid, object userState) {
            if ((this.DeliveryGetDeliveryTrackOperationCompleted == null)) {
                this.DeliveryGetDeliveryTrackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeliveryGetDeliveryTrackOperationCompleted);
            }
            this.InvokeAsync("DeliveryGetDeliveryTrack", new object[] {
                        orderdetid}, this.DeliveryGetDeliveryTrackOperationCompleted, userState);
        }
        
        private void OnDeliveryGetDeliveryTrackOperationCompleted(object arg) {
            if ((this.DeliveryGetDeliveryTrackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeliveryGetDeliveryTrackCompleted(this, new DeliveryGetDeliveryTrackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DeliverySetDelivered", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeliverySetDelivered(string doHdrID, string username, out string status) {
            object[] results = this.Invoke("DeliverySetDelivered", new object[] {
                        doHdrID,
                        username});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeliverySetDeliveredAsync(string doHdrID, string username) {
            this.DeliverySetDeliveredAsync(doHdrID, username, null);
        }
        
        /// <remarks/>
        public void DeliverySetDeliveredAsync(string doHdrID, string username, object userState) {
            if ((this.DeliverySetDeliveredOperationCompleted == null)) {
                this.DeliverySetDeliveredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeliverySetDeliveredOperationCompleted);
            }
            this.InvokeAsync("DeliverySetDelivered", new object[] {
                        doHdrID,
                        username}, this.DeliverySetDeliveredOperationCompleted, userState);
        }
        
        private void OnDeliverySetDeliveredOperationCompleted(object arg) {
            if ((this.DeliverySetDeliveredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeliverySetDeliveredCompleted(this, new DeliverySetDeliveredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SendNotifiyMailDelivery", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendNotifiyMailDelivery(string orderHdrID, string orderDetID, out string status) {
            object[] results = this.Invoke("SendNotifiyMailDelivery", new object[] {
                        orderHdrID,
                        orderDetID});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendNotifiyMailDeliveryAsync(string orderHdrID, string orderDetID) {
            this.SendNotifiyMailDeliveryAsync(orderHdrID, orderDetID, null);
        }
        
        /// <remarks/>
        public void SendNotifiyMailDeliveryAsync(string orderHdrID, string orderDetID, object userState) {
            if ((this.SendNotifiyMailDeliveryOperationCompleted == null)) {
                this.SendNotifiyMailDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendNotifiyMailDeliveryOperationCompleted);
            }
            this.InvokeAsync("SendNotifiyMailDelivery", new object[] {
                        orderHdrID,
                        orderDetID}, this.SendNotifiyMailDeliveryOperationCompleted, userState);
        }
        
        private void OnSendNotifiyMailDeliveryOperationCompleted(object arg) {
            if ((this.SendNotifiyMailDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendNotifiyMailDeliveryCompleted(this, new SendNotifiyMailDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchDeliveryOrderToPrintByOrderDetID", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FetchDeliveryOrderToPrintByOrderDetID(string orderDetID) {
            object[] results = this.Invoke("FetchDeliveryOrderToPrintByOrderDetID", new object[] {
                        orderDetID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FetchDeliveryOrderToPrintByOrderDetIDAsync(string orderDetID) {
            this.FetchDeliveryOrderToPrintByOrderDetIDAsync(orderDetID, null);
        }
        
        /// <remarks/>
        public void FetchDeliveryOrderToPrintByOrderDetIDAsync(string orderDetID, object userState) {
            if ((this.FetchDeliveryOrderToPrintByOrderDetIDOperationCompleted == null)) {
                this.FetchDeliveryOrderToPrintByOrderDetIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchDeliveryOrderToPrintByOrderDetIDOperationCompleted);
            }
            this.InvokeAsync("FetchDeliveryOrderToPrintByOrderDetID", new object[] {
                        orderDetID}, this.FetchDeliveryOrderToPrintByOrderDetIDOperationCompleted, userState);
        }
        
        private void OnFetchDeliveryOrderToPrintByOrderDetIDOperationCompleted(object arg) {
            if ((this.FetchDeliveryOrderToPrintByOrderDetIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchDeliveryOrderToPrintByOrderDetIDCompleted(this, new FetchDeliveryOrderToPrintByOrderDetIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/AutoAssignDepositWhenpayInstallment", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AutoAssignDepositWhenpayInstallment(string orderHdrID, decimal amount, out string status) {
            object[] results = this.Invoke("AutoAssignDepositWhenpayInstallment", new object[] {
                        orderHdrID,
                        amount});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AutoAssignDepositWhenpayInstallmentAsync(string orderHdrID, decimal amount) {
            this.AutoAssignDepositWhenpayInstallmentAsync(orderHdrID, amount, null);
        }
        
        /// <remarks/>
        public void AutoAssignDepositWhenpayInstallmentAsync(string orderHdrID, decimal amount, object userState) {
            if ((this.AutoAssignDepositWhenpayInstallmentOperationCompleted == null)) {
                this.AutoAssignDepositWhenpayInstallmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoAssignDepositWhenpayInstallmentOperationCompleted);
            }
            this.InvokeAsync("AutoAssignDepositWhenpayInstallment", new object[] {
                        orderHdrID,
                        amount}, this.AutoAssignDepositWhenpayInstallmentOperationCompleted, userState);
        }
        
        private void OnAutoAssignDepositWhenpayInstallmentOperationCompleted(object arg) {
            if ((this.AutoAssignDepositWhenpayInstallmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoAssignDepositWhenpayInstallmentCompleted(this, new AutoAssignDepositWhenpayInstallmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetDataOrderDetForRefund", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDataOrderDetForRefund(string orderhdrid, string orderdetid, int pointOfSaleID, bool AllowRefundForSameOutlet, out string status) {
            object[] results = this.Invoke("GetDataOrderDetForRefund", new object[] {
                        orderhdrid,
                        orderdetid,
                        pointOfSaleID,
                        AllowRefundForSameOutlet});
            status = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataOrderDetForRefundAsync(string orderhdrid, string orderdetid, int pointOfSaleID, bool AllowRefundForSameOutlet) {
            this.GetDataOrderDetForRefundAsync(orderhdrid, orderdetid, pointOfSaleID, AllowRefundForSameOutlet, null);
        }
        
        /// <remarks/>
        public void GetDataOrderDetForRefundAsync(string orderhdrid, string orderdetid, int pointOfSaleID, bool AllowRefundForSameOutlet, object userState) {
            if ((this.GetDataOrderDetForRefundOperationCompleted == null)) {
                this.GetDataOrderDetForRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOrderDetForRefundOperationCompleted);
            }
            this.InvokeAsync("GetDataOrderDetForRefund", new object[] {
                        orderhdrid,
                        orderdetid,
                        pointOfSaleID,
                        AllowRefundForSameOutlet}, this.GetDataOrderDetForRefundOperationCompleted, userState);
        }
        
        private void OnGetDataOrderDetForRefundOperationCompleted(object arg) {
            if ((this.GetDataOrderDetForRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataOrderDetForRefundCompleted(this, new GetDataOrderDetForRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetDataOrderDetForRefundStr", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDataOrderDetForRefundStr(string orderhdrid, string orderdetid, int pointOfSaleID, bool AllowRefundForSameOutlet, out string status) {
            object[] results = this.Invoke("GetDataOrderDetForRefundStr", new object[] {
                        orderhdrid,
                        orderdetid,
                        pointOfSaleID,
                        AllowRefundForSameOutlet});
            status = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataOrderDetForRefundStrAsync(string orderhdrid, string orderdetid, int pointOfSaleID, bool AllowRefundForSameOutlet) {
            this.GetDataOrderDetForRefundStrAsync(orderhdrid, orderdetid, pointOfSaleID, AllowRefundForSameOutlet, null);
        }
        
        /// <remarks/>
        public void GetDataOrderDetForRefundStrAsync(string orderhdrid, string orderdetid, int pointOfSaleID, bool AllowRefundForSameOutlet, object userState) {
            if ((this.GetDataOrderDetForRefundStrOperationCompleted == null)) {
                this.GetDataOrderDetForRefundStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOrderDetForRefundStrOperationCompleted);
            }
            this.InvokeAsync("GetDataOrderDetForRefundStr", new object[] {
                        orderhdrid,
                        orderdetid,
                        pointOfSaleID,
                        AllowRefundForSameOutlet}, this.GetDataOrderDetForRefundStrOperationCompleted, userState);
        }
        
        private void OnGetDataOrderDetForRefundStrOperationCompleted(object arg) {
            if ((this.GetDataOrderDetForRefundStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataOrderDetForRefundStrCompleted(this, new GetDataOrderDetForRefundStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/ResetDepositAmount", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ResetDepositAmount(string orderHdrID, out string status) {
            object[] results = this.Invoke("ResetDepositAmount", new object[] {
                        orderHdrID});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ResetDepositAmountAsync(string orderHdrID) {
            this.ResetDepositAmountAsync(orderHdrID, null);
        }
        
        /// <remarks/>
        public void ResetDepositAmountAsync(string orderHdrID, object userState) {
            if ((this.ResetDepositAmountOperationCompleted == null)) {
                this.ResetDepositAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetDepositAmountOperationCompleted);
            }
            this.InvokeAsync("ResetDepositAmount", new object[] {
                        orderHdrID}, this.ResetDepositAmountOperationCompleted, userState);
        }
        
        private void OnResetDepositAmountOperationCompleted(object arg) {
            if ((this.ResetDepositAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetDepositAmountCompleted(this, new ResetDepositAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/AssignAutoDeposit", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AssignAutoDeposit(string orderHdrID, out string status) {
            object[] results = this.Invoke("AssignAutoDeposit", new object[] {
                        orderHdrID});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignAutoDepositAsync(string orderHdrID) {
            this.AssignAutoDepositAsync(orderHdrID, null);
        }
        
        /// <remarks/>
        public void AssignAutoDepositAsync(string orderHdrID, object userState) {
            if ((this.AssignAutoDepositOperationCompleted == null)) {
                this.AssignAutoDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignAutoDepositOperationCompleted);
            }
            this.InvokeAsync("AssignAutoDeposit", new object[] {
                        orderHdrID}, this.AssignAutoDepositOperationCompleted, userState);
        }
        
        private void OnAssignAutoDepositOperationCompleted(object arg) {
            if ((this.AssignAutoDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignAutoDepositCompleted(this, new AssignAutoDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/InventoryFetchItemWithFilter", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] InventoryFetchItemWithFilter(string searchText, string supplierName, string numOfDays, string outletName, int invLocation, out string message) {
            object[] results = this.Invoke("InventoryFetchItemWithFilter", new object[] {
                        searchText,
                        supplierName,
                        numOfDays,
                        outletName,
                        invLocation});
            message = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void InventoryFetchItemWithFilterAsync(string searchText, string supplierName, string numOfDays, string outletName, int invLocation) {
            this.InventoryFetchItemWithFilterAsync(searchText, supplierName, numOfDays, outletName, invLocation, null);
        }
        
        /// <remarks/>
        public void InventoryFetchItemWithFilterAsync(string searchText, string supplierName, string numOfDays, string outletName, int invLocation, object userState) {
            if ((this.InventoryFetchItemWithFilterOperationCompleted == null)) {
                this.InventoryFetchItemWithFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInventoryFetchItemWithFilterOperationCompleted);
            }
            this.InvokeAsync("InventoryFetchItemWithFilter", new object[] {
                        searchText,
                        supplierName,
                        numOfDays,
                        outletName,
                        invLocation}, this.InventoryFetchItemWithFilterOperationCompleted, userState);
        }
        
        private void OnInventoryFetchItemWithFilterOperationCompleted(object arg) {
            if ((this.InventoryFetchItemWithFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InventoryFetchItemWithFilterCompleted(this, new InventoryFetchItemWithFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetChangeTrackingCurrentVersion", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetChangeTrackingCurrentVersion() {
            object[] results = this.Invoke("GetChangeTrackingCurrentVersion", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangeTrackingCurrentVersionAsync() {
            this.GetChangeTrackingCurrentVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetChangeTrackingCurrentVersionAsync(object userState) {
            if ((this.GetChangeTrackingCurrentVersionOperationCompleted == null)) {
                this.GetChangeTrackingCurrentVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangeTrackingCurrentVersionOperationCompleted);
            }
            this.InvokeAsync("GetChangeTrackingCurrentVersion", new object[0], this.GetChangeTrackingCurrentVersionOperationCompleted, userState);
        }
        
        private void OnGetChangeTrackingCurrentVersionOperationCompleted(object arg) {
            if ((this.GetChangeTrackingCurrentVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangeTrackingCurrentVersionCompleted(this, new GetChangeTrackingCurrentVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetChangeTrackingVersionSyncStatus", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetChangeTrackingVersionSyncStatus(long appSettingChangeTrackingVersion) {
            object[] results = this.Invoke("GetChangeTrackingVersionSyncStatus", new object[] {
                        appSettingChangeTrackingVersion});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangeTrackingVersionSyncStatusAsync(long appSettingChangeTrackingVersion) {
            this.GetChangeTrackingVersionSyncStatusAsync(appSettingChangeTrackingVersion, null);
        }
        
        /// <remarks/>
        public void GetChangeTrackingVersionSyncStatusAsync(long appSettingChangeTrackingVersion, object userState) {
            if ((this.GetChangeTrackingVersionSyncStatusOperationCompleted == null)) {
                this.GetChangeTrackingVersionSyncStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangeTrackingVersionSyncStatusOperationCompleted);
            }
            this.InvokeAsync("GetChangeTrackingVersionSyncStatus", new object[] {
                        appSettingChangeTrackingVersion}, this.GetChangeTrackingVersionSyncStatusOperationCompleted, userState);
        }
        
        private void OnGetChangeTrackingVersionSyncStatusOperationCompleted(object arg) {
            if ((this.GetChangeTrackingVersionSyncStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangeTrackingVersionSyncStatusCompleted(this, new GetChangeTrackingVersionSyncStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetChangeTrackingChangesCompressed", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetChangeTrackingChangesCompressed(string tableName, long lastSyncVersion, string primaryKeyName) {
            object[] results = this.Invoke("GetChangeTrackingChangesCompressed", new object[] {
                        tableName,
                        lastSyncVersion,
                        primaryKeyName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChangeTrackingChangesCompressedAsync(string tableName, long lastSyncVersion, string primaryKeyName) {
            this.GetChangeTrackingChangesCompressedAsync(tableName, lastSyncVersion, primaryKeyName, null);
        }
        
        /// <remarks/>
        public void GetChangeTrackingChangesCompressedAsync(string tableName, long lastSyncVersion, string primaryKeyName, object userState) {
            if ((this.GetChangeTrackingChangesCompressedOperationCompleted == null)) {
                this.GetChangeTrackingChangesCompressedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangeTrackingChangesCompressedOperationCompleted);
            }
            this.InvokeAsync("GetChangeTrackingChangesCompressed", new object[] {
                        tableName,
                        lastSyncVersion,
                        primaryKeyName}, this.GetChangeTrackingChangesCompressedOperationCompleted, userState);
        }
        
        private void OnGetChangeTrackingChangesCompressedOperationCompleted(object arg) {
            if ((this.GetChangeTrackingChangesCompressedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangeTrackingChangesCompressedCompleted(this, new GetChangeTrackingChangesCompressedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/EnableChangeTracking", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EnableChangeTracking() {
            object[] results = this.Invoke("EnableChangeTracking", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EnableChangeTrackingAsync() {
            this.EnableChangeTrackingAsync(null);
        }
        
        /// <remarks/>
        public void EnableChangeTrackingAsync(object userState) {
            if ((this.EnableChangeTrackingOperationCompleted == null)) {
                this.EnableChangeTrackingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableChangeTrackingOperationCompleted);
            }
            this.InvokeAsync("EnableChangeTracking", new object[0], this.EnableChangeTrackingOperationCompleted, userState);
        }
        
        private void OnEnableChangeTrackingOperationCompleted(object arg) {
            if ((this.EnableChangeTrackingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableChangeTrackingCompleted(this, new EnableChangeTrackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/EnableChangeTrackingTable", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EnableChangeTrackingTable(string tableName) {
            object[] results = this.Invoke("EnableChangeTrackingTable", new object[] {
                        tableName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EnableChangeTrackingTableAsync(string tableName) {
            this.EnableChangeTrackingTableAsync(tableName, null);
        }
        
        /// <remarks/>
        public void EnableChangeTrackingTableAsync(string tableName, object userState) {
            if ((this.EnableChangeTrackingTableOperationCompleted == null)) {
                this.EnableChangeTrackingTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableChangeTrackingTableOperationCompleted);
            }
            this.InvokeAsync("EnableChangeTrackingTable", new object[] {
                        tableName}, this.EnableChangeTrackingTableOperationCompleted, userState);
        }
        
        private void OnEnableChangeTrackingTableOperationCompleted(object arg) {
            if ((this.EnableChangeTrackingTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableChangeTrackingTableCompleted(this, new EnableChangeTrackingTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetChangeTrackingVersion", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> GetChangeTrackingVersion() {
            object[] results = this.Invoke("GetChangeTrackingVersion", new object[0]);
            return ((System.Nullable<long>)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangeTrackingVersionAsync() {
            this.GetChangeTrackingVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetChangeTrackingVersionAsync(object userState) {
            if ((this.GetChangeTrackingVersionOperationCompleted == null)) {
                this.GetChangeTrackingVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangeTrackingVersionOperationCompleted);
            }
            this.InvokeAsync("GetChangeTrackingVersion", new object[0], this.GetChangeTrackingVersionOperationCompleted, userState);
        }
        
        private void OnGetChangeTrackingVersionOperationCompleted(object arg) {
            if ((this.GetChangeTrackingVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangeTrackingVersionCompleted(this, new GetChangeTrackingVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetChangeTrackingTableMinValidVersion", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> GetChangeTrackingTableMinValidVersion(string tableName) {
            object[] results = this.Invoke("GetChangeTrackingTableMinValidVersion", new object[] {
                        tableName});
            return ((System.Nullable<long>)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangeTrackingTableMinValidVersionAsync(string tableName) {
            this.GetChangeTrackingTableMinValidVersionAsync(tableName, null);
        }
        
        /// <remarks/>
        public void GetChangeTrackingTableMinValidVersionAsync(string tableName, object userState) {
            if ((this.GetChangeTrackingTableMinValidVersionOperationCompleted == null)) {
                this.GetChangeTrackingTableMinValidVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangeTrackingTableMinValidVersionOperationCompleted);
            }
            this.InvokeAsync("GetChangeTrackingTableMinValidVersion", new object[] {
                        tableName}, this.GetChangeTrackingTableMinValidVersionOperationCompleted, userState);
        }
        
        private void OnGetChangeTrackingTableMinValidVersionOperationCompleted(object arg) {
            if ((this.GetChangeTrackingTableMinValidVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangeTrackingTableMinValidVersionCompleted(this, new GetChangeTrackingTableMinValidVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetChangeTrackingFullTable", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetChangeTrackingFullTable(string tableName, string primaryKeyName) {
            object[] results = this.Invoke("GetChangeTrackingFullTable", new object[] {
                        tableName,
                        primaryKeyName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChangeTrackingFullTableAsync(string tableName, string primaryKeyName) {
            this.GetChangeTrackingFullTableAsync(tableName, primaryKeyName, null);
        }
        
        /// <remarks/>
        public void GetChangeTrackingFullTableAsync(string tableName, string primaryKeyName, object userState) {
            if ((this.GetChangeTrackingFullTableOperationCompleted == null)) {
                this.GetChangeTrackingFullTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangeTrackingFullTableOperationCompleted);
            }
            this.InvokeAsync("GetChangeTrackingFullTable", new object[] {
                        tableName,
                        primaryKeyName}, this.GetChangeTrackingFullTableOperationCompleted, userState);
        }
        
        private void OnGetChangeTrackingFullTableOperationCompleted(object arg) {
            if ((this.GetChangeTrackingFullTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangeTrackingFullTableCompleted(this, new GetChangeTrackingFullTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetInventoryHdrFullTable", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetInventoryHdrFullTable(System.DateTime StartDate) {
            object[] results = this.Invoke("GetInventoryHdrFullTable", new object[] {
                        StartDate});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryHdrFullTableAsync(System.DateTime StartDate) {
            this.GetInventoryHdrFullTableAsync(StartDate, null);
        }
        
        /// <remarks/>
        public void GetInventoryHdrFullTableAsync(System.DateTime StartDate, object userState) {
            if ((this.GetInventoryHdrFullTableOperationCompleted == null)) {
                this.GetInventoryHdrFullTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryHdrFullTableOperationCompleted);
            }
            this.InvokeAsync("GetInventoryHdrFullTable", new object[] {
                        StartDate}, this.GetInventoryHdrFullTableOperationCompleted, userState);
        }
        
        private void OnGetInventoryHdrFullTableOperationCompleted(object arg) {
            if ((this.GetInventoryHdrFullTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryHdrFullTableCompleted(this, new GetInventoryHdrFullTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetInventoryDetFullTable", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetInventoryDetFullTable(System.DateTime StartDate) {
            object[] results = this.Invoke("GetInventoryDetFullTable", new object[] {
                        StartDate});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryDetFullTableAsync(System.DateTime StartDate) {
            this.GetInventoryDetFullTableAsync(StartDate, null);
        }
        
        /// <remarks/>
        public void GetInventoryDetFullTableAsync(System.DateTime StartDate, object userState) {
            if ((this.GetInventoryDetFullTableOperationCompleted == null)) {
                this.GetInventoryDetFullTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryDetFullTableOperationCompleted);
            }
            this.InvokeAsync("GetInventoryDetFullTable", new object[] {
                        StartDate}, this.GetInventoryDetFullTableOperationCompleted, userState);
        }
        
        private void OnGetInventoryDetFullTableOperationCompleted(object arg) {
            if ((this.GetInventoryDetFullTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryDetFullTableCompleted(this, new GetInventoryDetFullTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetChangeTrackingChangesTable", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetChangeTrackingChangesTable(string tableName, long lastSyncVersion, string primaryKeyname) {
            object[] results = this.Invoke("GetChangeTrackingChangesTable", new object[] {
                        tableName,
                        lastSyncVersion,
                        primaryKeyname});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChangeTrackingChangesTableAsync(string tableName, long lastSyncVersion, string primaryKeyname) {
            this.GetChangeTrackingChangesTableAsync(tableName, lastSyncVersion, primaryKeyname, null);
        }
        
        /// <remarks/>
        public void GetChangeTrackingChangesTableAsync(string tableName, long lastSyncVersion, string primaryKeyname, object userState) {
            if ((this.GetChangeTrackingChangesTableOperationCompleted == null)) {
                this.GetChangeTrackingChangesTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangeTrackingChangesTableOperationCompleted);
            }
            this.InvokeAsync("GetChangeTrackingChangesTable", new object[] {
                        tableName,
                        lastSyncVersion,
                        primaryKeyname}, this.GetChangeTrackingChangesTableOperationCompleted, userState);
        }
        
        private void OnGetChangeTrackingChangesTableOperationCompleted(object arg) {
            if ((this.GetChangeTrackingChangesTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangeTrackingChangesTableCompleted(this, new GetChangeTrackingChangesTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetAppSettingValue", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAppSettingValue(string appSettingKey) {
            object[] results = this.Invoke("GetAppSettingValue", new object[] {
                        appSettingKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppSettingValueAsync(string appSettingKey) {
            this.GetAppSettingValueAsync(appSettingKey, null);
        }
        
        /// <remarks/>
        public void GetAppSettingValueAsync(string appSettingKey, object userState) {
            if ((this.GetAppSettingValueOperationCompleted == null)) {
                this.GetAppSettingValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppSettingValueOperationCompleted);
            }
            this.InvokeAsync("GetAppSettingValue", new object[] {
                        appSettingKey}, this.GetAppSettingValueOperationCompleted, userState);
        }
        
        private void OnGetAppSettingValueOperationCompleted(object arg) {
            if ((this.GetAppSettingValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppSettingValueCompleted(this, new GetAppSettingValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SetAppSettingValue", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetAppSettingValue(string appSettingKey, string appSettingValue) {
            this.Invoke("SetAppSettingValue", new object[] {
                        appSettingKey,
                        appSettingValue});
        }
        
        /// <remarks/>
        public void SetAppSettingValueAsync(string appSettingKey, string appSettingValue) {
            this.SetAppSettingValueAsync(appSettingKey, appSettingValue, null);
        }
        
        /// <remarks/>
        public void SetAppSettingValueAsync(string appSettingKey, string appSettingValue, object userState) {
            if ((this.SetAppSettingValueOperationCompleted == null)) {
                this.SetAppSettingValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAppSettingValueOperationCompleted);
            }
            this.InvokeAsync("SetAppSettingValue", new object[] {
                        appSettingKey,
                        appSettingValue}, this.SetAppSettingValueOperationCompleted, userState);
        }
        
        private void OnSetAppSettingValueOperationCompleted(object arg) {
            if ((this.SetAppSettingValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAppSettingValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SetAppSettingValueBatch", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetAppSettingValueBatch(System.Data.DataTable Settings) {
            this.Invoke("SetAppSettingValueBatch", new object[] {
                        Settings});
        }
        
        /// <remarks/>
        public void SetAppSettingValueBatchAsync(System.Data.DataTable Settings) {
            this.SetAppSettingValueBatchAsync(Settings, null);
        }
        
        /// <remarks/>
        public void SetAppSettingValueBatchAsync(System.Data.DataTable Settings, object userState) {
            if ((this.SetAppSettingValueBatchOperationCompleted == null)) {
                this.SetAppSettingValueBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAppSettingValueBatchOperationCompleted);
            }
            this.InvokeAsync("SetAppSettingValueBatch", new object[] {
                        Settings}, this.SetAppSettingValueBatchOperationCompleted, userState);
        }
        
        private void OnSetAppSettingValueBatchOperationCompleted(object arg) {
            if ((this.SetAppSettingValueBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAppSettingValueBatchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DeleteAppSettingKey", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAppSettingKey(string appSettingKey) {
            this.Invoke("DeleteAppSettingKey", new object[] {
                        appSettingKey});
        }
        
        /// <remarks/>
        public void DeleteAppSettingKeyAsync(string appSettingKey) {
            this.DeleteAppSettingKeyAsync(appSettingKey, null);
        }
        
        /// <remarks/>
        public void DeleteAppSettingKeyAsync(string appSettingKey, object userState) {
            if ((this.DeleteAppSettingKeyOperationCompleted == null)) {
                this.DeleteAppSettingKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAppSettingKeyOperationCompleted);
            }
            this.InvokeAsync("DeleteAppSettingKey", new object[] {
                        appSettingKey}, this.DeleteAppSettingKeyOperationCompleted, userState);
        }
        
        private void OnDeleteAppSettingKeyOperationCompleted(object arg) {
            if ((this.DeleteAppSettingKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAppSettingKeyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/ExecuteUpdateUsingDataTable", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExecuteUpdateUsingDataTable(System.Data.DataTable dt) {
            object[] results = this.Invoke("ExecuteUpdateUsingDataTable", new object[] {
                        dt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteUpdateUsingDataTableAsync(System.Data.DataTable dt) {
            this.ExecuteUpdateUsingDataTableAsync(dt, null);
        }
        
        /// <remarks/>
        public void ExecuteUpdateUsingDataTableAsync(System.Data.DataTable dt, object userState) {
            if ((this.ExecuteUpdateUsingDataTableOperationCompleted == null)) {
                this.ExecuteUpdateUsingDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteUpdateUsingDataTableOperationCompleted);
            }
            this.InvokeAsync("ExecuteUpdateUsingDataTable", new object[] {
                        dt}, this.ExecuteUpdateUsingDataTableOperationCompleted, userState);
        }
        
        private void OnExecuteUpdateUsingDataTableOperationCompleted(object arg) {
            if ((this.ExecuteUpdateUsingDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteUpdateUsingDataTableCompleted(this, new ExecuteUpdateUsingDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UploadOrderTables", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadOrderTables([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string username, out string status) {
            object[] results = this.Invoke("UploadOrderTables", new object[] {
                        data,
                        username});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadOrderTablesAsync(byte[] data, string username) {
            this.UploadOrderTablesAsync(data, username, null);
        }
        
        /// <remarks/>
        public void UploadOrderTablesAsync(byte[] data, string username, object userState) {
            if ((this.UploadOrderTablesOperationCompleted == null)) {
                this.UploadOrderTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadOrderTablesOperationCompleted);
            }
            this.InvokeAsync("UploadOrderTables", new object[] {
                        data,
                        username}, this.UploadOrderTablesOperationCompleted, userState);
        }
        
        private void OnUploadOrderTablesOperationCompleted(object arg) {
            if ((this.UploadOrderTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadOrderTablesCompleted(this, new UploadOrderTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UploadLogsTables", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadLogsTables([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string username, out string status) {
            object[] results = this.Invoke("UploadLogsTables", new object[] {
                        data,
                        username});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadLogsTablesAsync(byte[] data, string username) {
            this.UploadLogsTablesAsync(data, username, null);
        }
        
        /// <remarks/>
        public void UploadLogsTablesAsync(byte[] data, string username, object userState) {
            if ((this.UploadLogsTablesOperationCompleted == null)) {
                this.UploadLogsTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadLogsTablesOperationCompleted);
            }
            this.InvokeAsync("UploadLogsTables", new object[] {
                        data,
                        username}, this.UploadLogsTablesOperationCompleted, userState);
        }
        
        private void OnUploadLogsTablesOperationCompleted(object arg) {
            if ((this.UploadLogsTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadLogsTablesCompleted(this, new UploadLogsTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UploadTables", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadTables(System.Data.DataTable table, string primaryKey, string updateKey, bool isPKAutoGenerate, out string status) {
            object[] results = this.Invoke("UploadTables", new object[] {
                        table,
                        primaryKey,
                        updateKey,
                        isPKAutoGenerate});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadTablesAsync(System.Data.DataTable table, string primaryKey, string updateKey, bool isPKAutoGenerate) {
            this.UploadTablesAsync(table, primaryKey, updateKey, isPKAutoGenerate, null);
        }
        
        /// <remarks/>
        public void UploadTablesAsync(System.Data.DataTable table, string primaryKey, string updateKey, bool isPKAutoGenerate, object userState) {
            if ((this.UploadTablesOperationCompleted == null)) {
                this.UploadTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadTablesOperationCompleted);
            }
            this.InvokeAsync("UploadTables", new object[] {
                        table,
                        primaryKey,
                        updateKey,
                        isPKAutoGenerate}, this.UploadTablesOperationCompleted, userState);
        }
        
        private void OnUploadTablesOperationCompleted(object arg) {
            if ((this.UploadTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadTablesCompleted(this, new UploadTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DeleteInventoryDetFromVoidedOrder", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteInventoryDetFromVoidedOrder() {
            object[] results = this.Invoke("DeleteInventoryDetFromVoidedOrder", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInventoryDetFromVoidedOrderAsync() {
            this.DeleteInventoryDetFromVoidedOrderAsync(null);
        }
        
        /// <remarks/>
        public void DeleteInventoryDetFromVoidedOrderAsync(object userState) {
            if ((this.DeleteInventoryDetFromVoidedOrderOperationCompleted == null)) {
                this.DeleteInventoryDetFromVoidedOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInventoryDetFromVoidedOrderOperationCompleted);
            }
            this.InvokeAsync("DeleteInventoryDetFromVoidedOrder", new object[0], this.DeleteInventoryDetFromVoidedOrderOperationCompleted, userState);
        }
        
        private void OnDeleteInventoryDetFromVoidedOrderOperationCompleted(object arg) {
            if ((this.DeleteInventoryDetFromVoidedOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInventoryDetFromVoidedOrderCompleted(this, new DeleteInventoryDetFromVoidedOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UploadInventoryTables", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadInventoryTables([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string username, out string status) {
            object[] results = this.Invoke("UploadInventoryTables", new object[] {
                        data,
                        username});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInventoryTablesAsync(byte[] data, string username) {
            this.UploadInventoryTablesAsync(data, username, null);
        }
        
        /// <remarks/>
        public void UploadInventoryTablesAsync(byte[] data, string username, object userState) {
            if ((this.UploadInventoryTablesOperationCompleted == null)) {
                this.UploadInventoryTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInventoryTablesOperationCompleted);
            }
            this.InvokeAsync("UploadInventoryTables", new object[] {
                        data,
                        username}, this.UploadInventoryTablesOperationCompleted, userState);
        }
        
        private void OnUploadInventoryTablesOperationCompleted(object arg) {
            if ((this.UploadInventoryTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInventoryTablesCompleted(this, new UploadInventoryTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UploadTable", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadTable([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, bool isPKAutoGenerated, string username, out string status) {
            object[] results = this.Invoke("UploadTable", new object[] {
                        data,
                        isPKAutoGenerated,
                        username});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadTableAsync(byte[] data, bool isPKAutoGenerated, string username) {
            this.UploadTableAsync(data, isPKAutoGenerated, username, null);
        }
        
        /// <remarks/>
        public void UploadTableAsync(byte[] data, bool isPKAutoGenerated, string username, object userState) {
            if ((this.UploadTableOperationCompleted == null)) {
                this.UploadTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadTableOperationCompleted);
            }
            this.InvokeAsync("UploadTable", new object[] {
                        data,
                        isPKAutoGenerated,
                        username}, this.UploadTableOperationCompleted, userState);
        }
        
        private void OnUploadTableOperationCompleted(object arg) {
            if ((this.UploadTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadTableCompleted(this, new UploadTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/PurchaseOrderCompressed", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PurchaseOrderCompressed([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string username, int InventoryLocationID, bool CalculateCOGS, out string newRefNo, out string status) {
            object[] results = this.Invoke("PurchaseOrderCompressed", new object[] {
                        data,
                        username,
                        InventoryLocationID,
                        CalculateCOGS});
            newRefNo = ((string)(results[1]));
            status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderCompressedAsync(byte[] data, string username, int InventoryLocationID, bool CalculateCOGS) {
            this.PurchaseOrderCompressedAsync(data, username, InventoryLocationID, CalculateCOGS, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderCompressedAsync(byte[] data, string username, int InventoryLocationID, bool CalculateCOGS, object userState) {
            if ((this.PurchaseOrderCompressedOperationCompleted == null)) {
                this.PurchaseOrderCompressedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderCompressedOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderCompressed", new object[] {
                        data,
                        username,
                        InventoryLocationID,
                        CalculateCOGS}, this.PurchaseOrderCompressedOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderCompressedOperationCompleted(object arg) {
            if ((this.PurchaseOrderCompressedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderCompressedCompleted(this, new PurchaseOrderCompressedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/PurchaseOrderCompressedWithCustomRefNo", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PurchaseOrderCompressedWithCustomRefNo([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string username, int InventoryLocationID, bool CalculateCOGS, out string newRefNo, out string newCustomRefNo, out string status) {
            object[] results = this.Invoke("PurchaseOrderCompressedWithCustomRefNo", new object[] {
                        data,
                        username,
                        InventoryLocationID,
                        CalculateCOGS});
            newRefNo = ((string)(results[1]));
            newCustomRefNo = ((string)(results[2]));
            status = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderCompressedWithCustomRefNoAsync(byte[] data, string username, int InventoryLocationID, bool CalculateCOGS) {
            this.PurchaseOrderCompressedWithCustomRefNoAsync(data, username, InventoryLocationID, CalculateCOGS, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderCompressedWithCustomRefNoAsync(byte[] data, string username, int InventoryLocationID, bool CalculateCOGS, object userState) {
            if ((this.PurchaseOrderCompressedWithCustomRefNoOperationCompleted == null)) {
                this.PurchaseOrderCompressedWithCustomRefNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderCompressedWithCustomRefNoOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderCompressedWithCustomRefNo", new object[] {
                        data,
                        username,
                        InventoryLocationID,
                        CalculateCOGS}, this.PurchaseOrderCompressedWithCustomRefNoOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderCompressedWithCustomRefNoOperationCompleted(object arg) {
            if ((this.PurchaseOrderCompressedWithCustomRefNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderCompressedWithCustomRefNoCompleted(this, new PurchaseOrderCompressedWithCustomRefNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/PurchaseOrderCompressedWithCustomRefNoEdit", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PurchaseOrderCompressedWithCustomRefNoEdit([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string username, int InventoryLocationID, bool CalculateCOGS, bool IsEdit, out string newRefNo, out string newCustomRefNo, out string status) {
            object[] results = this.Invoke("PurchaseOrderCompressedWithCustomRefNoEdit", new object[] {
                        data,
                        username,
                        InventoryLocationID,
                        CalculateCOGS,
                        IsEdit});
            newRefNo = ((string)(results[1]));
            newCustomRefNo = ((string)(results[2]));
            status = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderCompressedWithCustomRefNoEditAsync(byte[] data, string username, int InventoryLocationID, bool CalculateCOGS, bool IsEdit) {
            this.PurchaseOrderCompressedWithCustomRefNoEditAsync(data, username, InventoryLocationID, CalculateCOGS, IsEdit, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderCompressedWithCustomRefNoEditAsync(byte[] data, string username, int InventoryLocationID, bool CalculateCOGS, bool IsEdit, object userState) {
            if ((this.PurchaseOrderCompressedWithCustomRefNoEditOperationCompleted == null)) {
                this.PurchaseOrderCompressedWithCustomRefNoEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderCompressedWithCustomRefNoEditOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderCompressedWithCustomRefNoEdit", new object[] {
                        data,
                        username,
                        InventoryLocationID,
                        CalculateCOGS,
                        IsEdit}, this.PurchaseOrderCompressedWithCustomRefNoEditOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderCompressedWithCustomRefNoEditOperationCompleted(object arg) {
            if ((this.PurchaseOrderCompressedWithCustomRefNoEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderCompressedWithCustomRefNoEditCompleted(this, new PurchaseOrderCompressedWithCustomRefNoEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SaveAttachment", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveAttachment(System.Data.DataTable data, string moduleName, string refNo, string username, out string status) {
            object[] results = this.Invoke("SaveAttachment", new object[] {
                        data,
                        moduleName,
                        refNo,
                        username});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAttachmentAsync(System.Data.DataTable data, string moduleName, string refNo, string username) {
            this.SaveAttachmentAsync(data, moduleName, refNo, username, null);
        }
        
        /// <remarks/>
        public void SaveAttachmentAsync(System.Data.DataTable data, string moduleName, string refNo, string username, object userState) {
            if ((this.SaveAttachmentOperationCompleted == null)) {
                this.SaveAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAttachmentOperationCompleted);
            }
            this.InvokeAsync("SaveAttachment", new object[] {
                        data,
                        moduleName,
                        refNo,
                        username}, this.SaveAttachmentOperationCompleted, userState);
        }
        
        private void OnSaveAttachmentOperationCompleted(object arg) {
            if ((this.SaveAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAttachmentCompleted(this, new SaveAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UploadAttachment", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UploadAttachment([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string tempFolder, string fileName, bool isLocalhost, string moduleName, out string serverPath, out string status) {
            object[] results = this.Invoke("UploadAttachment", new object[] {
                        data,
                        tempFolder,
                        fileName,
                        isLocalhost,
                        moduleName});
            serverPath = ((string)(results[1]));
            status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAttachmentAsync(byte[] data, string tempFolder, string fileName, bool isLocalhost, string moduleName) {
            this.UploadAttachmentAsync(data, tempFolder, fileName, isLocalhost, moduleName, null);
        }
        
        /// <remarks/>
        public void UploadAttachmentAsync(byte[] data, string tempFolder, string fileName, bool isLocalhost, string moduleName, object userState) {
            if ((this.UploadAttachmentOperationCompleted == null)) {
                this.UploadAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAttachmentOperationCompleted);
            }
            this.InvokeAsync("UploadAttachment", new object[] {
                        data,
                        tempFolder,
                        fileName,
                        isLocalhost,
                        moduleName}, this.UploadAttachmentOperationCompleted, userState);
        }
        
        private void OnUploadAttachmentOperationCompleted(object arg) {
            if ((this.UploadAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAttachmentCompleted(this, new UploadAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DeleteAttachment", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteAttachment(System.Data.DataTable data, string username, out string status) {
            object[] results = this.Invoke("DeleteAttachment", new object[] {
                        data,
                        username});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAttachmentAsync(System.Data.DataTable data, string username) {
            this.DeleteAttachmentAsync(data, username, null);
        }
        
        /// <remarks/>
        public void DeleteAttachmentAsync(System.Data.DataTable data, string username, object userState) {
            if ((this.DeleteAttachmentOperationCompleted == null)) {
                this.DeleteAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteAttachment", new object[] {
                        data,
                        username}, this.DeleteAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteAttachmentOperationCompleted(object arg) {
            if ((this.DeleteAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAttachmentCompleted(this, new DeleteAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetCustomPONoSetting", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCustomPONoSetting() {
            object[] results = this.Invoke("GetCustomPONoSetting", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomPONoSettingAsync() {
            this.GetCustomPONoSettingAsync(null);
        }
        
        /// <remarks/>
        public void GetCustomPONoSettingAsync(object userState) {
            if ((this.GetCustomPONoSettingOperationCompleted == null)) {
                this.GetCustomPONoSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomPONoSettingOperationCompleted);
            }
            this.InvokeAsync("GetCustomPONoSetting", new object[0], this.GetCustomPONoSettingOperationCompleted, userState);
        }
        
        private void OnGetCustomPONoSettingOperationCompleted(object arg) {
            if ((this.GetCustomPONoSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomPONoSettingCompleted(this, new GetCustomPONoSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetCustomGRNoSetting", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCustomGRNoSetting() {
            object[] results = this.Invoke("GetCustomGRNoSetting", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomGRNoSettingAsync() {
            this.GetCustomGRNoSettingAsync(null);
        }
        
        /// <remarks/>
        public void GetCustomGRNoSettingAsync(object userState) {
            if ((this.GetCustomGRNoSettingOperationCompleted == null)) {
                this.GetCustomGRNoSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomGRNoSettingOperationCompleted);
            }
            this.InvokeAsync("GetCustomGRNoSetting", new object[0], this.GetCustomGRNoSettingOperationCompleted, userState);
        }
        
        private void OnGetCustomGRNoSettingOperationCompleted(object arg) {
            if ((this.GetCustomGRNoSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomGRNoSettingCompleted(this, new GetCustomGRNoSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SyncCategoryFromMagento", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SyncCategoryFromMagento(out string status) {
            object[] results = this.Invoke("SyncCategoryFromMagento", new object[0]);
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SyncCategoryFromMagentoAsync() {
            this.SyncCategoryFromMagentoAsync(null);
        }
        
        /// <remarks/>
        public void SyncCategoryFromMagentoAsync(object userState) {
            if ((this.SyncCategoryFromMagentoOperationCompleted == null)) {
                this.SyncCategoryFromMagentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncCategoryFromMagentoOperationCompleted);
            }
            this.InvokeAsync("SyncCategoryFromMagento", new object[0], this.SyncCategoryFromMagentoOperationCompleted, userState);
        }
        
        private void OnSyncCategoryFromMagentoOperationCompleted(object arg) {
            if ((this.SyncCategoryFromMagentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncCategoryFromMagentoCompleted(this, new SyncCategoryFromMagentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SubmitSales", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitSales([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string username, bool createPurchaseOrder, out string status, out string orderHdrID) {
            object[] results = this.Invoke("SubmitSales", new object[] {
                        data,
                        username,
                        createPurchaseOrder});
            status = ((string)(results[1]));
            orderHdrID = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitSalesAsync(byte[] data, string username, bool createPurchaseOrder) {
            this.SubmitSalesAsync(data, username, createPurchaseOrder, null);
        }
        
        /// <remarks/>
        public void SubmitSalesAsync(byte[] data, string username, bool createPurchaseOrder, object userState) {
            if ((this.SubmitSalesOperationCompleted == null)) {
                this.SubmitSalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitSalesOperationCompleted);
            }
            this.InvokeAsync("SubmitSales", new object[] {
                        data,
                        username,
                        createPurchaseOrder}, this.SubmitSalesOperationCompleted, userState);
        }
        
        private void OnSubmitSalesOperationCompleted(object arg) {
            if ((this.SubmitSalesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitSalesCompleted(this, new SubmitSalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/AddAccessLog", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddAccessLog(int pointOfSaleID, AccessSource src, string userName, string secondUserName, string accessTpe, string remarks) {
            object[] results = this.Invoke("AddAccessLog", new object[] {
                        pointOfSaleID,
                        src,
                        userName,
                        secondUserName,
                        accessTpe,
                        remarks});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddAccessLogAsync(int pointOfSaleID, AccessSource src, string userName, string secondUserName, string accessTpe, string remarks) {
            this.AddAccessLogAsync(pointOfSaleID, src, userName, secondUserName, accessTpe, remarks, null);
        }
        
        /// <remarks/>
        public void AddAccessLogAsync(int pointOfSaleID, AccessSource src, string userName, string secondUserName, string accessTpe, string remarks, object userState) {
            if ((this.AddAccessLogOperationCompleted == null)) {
                this.AddAccessLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAccessLogOperationCompleted);
            }
            this.InvokeAsync("AddAccessLog", new object[] {
                        pointOfSaleID,
                        src,
                        userName,
                        secondUserName,
                        accessTpe,
                        remarks}, this.AddAccessLogOperationCompleted, userState);
        }
        
        private void OnAddAccessLogOperationCompleted(object arg) {
            if ((this.AddAccessLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAccessLogCompleted(this, new AddAccessLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchUpdatedGroupUserPrivileges", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] FetchUpdatedGroupUserPrivileges(System.DateTime modifiedOn) {
            object[] results = this.Invoke("FetchUpdatedGroupUserPrivileges", new object[] {
                        modifiedOn});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchUpdatedGroupUserPrivilegesAsync(System.DateTime modifiedOn) {
            this.FetchUpdatedGroupUserPrivilegesAsync(modifiedOn, null);
        }
        
        /// <remarks/>
        public void FetchUpdatedGroupUserPrivilegesAsync(System.DateTime modifiedOn, object userState) {
            if ((this.FetchUpdatedGroupUserPrivilegesOperationCompleted == null)) {
                this.FetchUpdatedGroupUserPrivilegesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchUpdatedGroupUserPrivilegesOperationCompleted);
            }
            this.InvokeAsync("FetchUpdatedGroupUserPrivileges", new object[] {
                        modifiedOn}, this.FetchUpdatedGroupUserPrivilegesOperationCompleted, userState);
        }
        
        private void OnFetchUpdatedGroupUserPrivilegesOperationCompleted(object arg) {
            if ((this.FetchUpdatedGroupUserPrivilegesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchUpdatedGroupUserPrivilegesCompleted(this, new FetchUpdatedGroupUserPrivilegesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchGroupPrivilegesRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchGroupPrivilegesRealTime(int groupID) {
            object[] results = this.Invoke("FetchGroupPrivilegesRealTime", new object[] {
                        groupID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchGroupPrivilegesRealTimeAsync(int groupID) {
            this.FetchGroupPrivilegesRealTimeAsync(groupID, null);
        }
        
        /// <remarks/>
        public void FetchGroupPrivilegesRealTimeAsync(int groupID, object userState) {
            if ((this.FetchGroupPrivilegesRealTimeOperationCompleted == null)) {
                this.FetchGroupPrivilegesRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchGroupPrivilegesRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchGroupPrivilegesRealTime", new object[] {
                        groupID}, this.FetchGroupPrivilegesRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchGroupPrivilegesRealTimeOperationCompleted(object arg) {
            if ((this.FetchGroupPrivilegesRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchGroupPrivilegesRealTimeCompleted(this, new FetchGroupPrivilegesRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetItemRecordCountAfterTimestamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetItemRecordCountAfterTimestamp(System.DateTime lastModifiedOn, string OutletName) {
            object[] results = this.Invoke("GetItemRecordCountAfterTimestamp", new object[] {
                        lastModifiedOn,
                        OutletName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemRecordCountAfterTimestampAsync(System.DateTime lastModifiedOn, string OutletName) {
            this.GetItemRecordCountAfterTimestampAsync(lastModifiedOn, OutletName, null);
        }
        
        /// <remarks/>
        public void GetItemRecordCountAfterTimestampAsync(System.DateTime lastModifiedOn, string OutletName, object userState) {
            if ((this.GetItemRecordCountAfterTimestampOperationCompleted == null)) {
                this.GetItemRecordCountAfterTimestampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemRecordCountAfterTimestampOperationCompleted);
            }
            this.InvokeAsync("GetItemRecordCountAfterTimestamp", new object[] {
                        lastModifiedOn,
                        OutletName}, this.GetItemRecordCountAfterTimestampOperationCompleted, userState);
        }
        
        private void OnGetItemRecordCountAfterTimestampOperationCompleted(object arg) {
            if ((this.GetItemRecordCountAfterTimestampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemRecordCountAfterTimestampCompleted(this, new GetItemRecordCountAfterTimestampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetItemTableCompressedRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetItemTableCompressedRealTime(System.DateTime lastModifiedOn, string OutletName, int count) {
            object[] results = this.Invoke("GetItemTableCompressedRealTime", new object[] {
                        lastModifiedOn,
                        OutletName,
                        count});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetItemTableCompressedRealTimeAsync(System.DateTime lastModifiedOn, string OutletName, int count) {
            this.GetItemTableCompressedRealTimeAsync(lastModifiedOn, OutletName, count, null);
        }
        
        /// <remarks/>
        public void GetItemTableCompressedRealTimeAsync(System.DateTime lastModifiedOn, string OutletName, int count, object userState) {
            if ((this.GetItemTableCompressedRealTimeOperationCompleted == null)) {
                this.GetItemTableCompressedRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemTableCompressedRealTimeOperationCompleted);
            }
            this.InvokeAsync("GetItemTableCompressedRealTime", new object[] {
                        lastModifiedOn,
                        OutletName,
                        count}, this.GetItemTableCompressedRealTimeOperationCompleted, userState);
        }
        
        private void OnGetItemTableCompressedRealTimeOperationCompleted(object arg) {
            if ((this.GetItemTableCompressedRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemTableCompressedRealTimeCompleted(this, new GetItemTableCompressedRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchDataSetByTimestamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchDataSetByTimestamp(string tableName, string pkColumn, System.DateTime modifiedDate, int noOfRecords, bool useInventoryLoc, int invLocID, bool usePOSID, int posID) {
            object[] results = this.Invoke("FetchDataSetByTimestamp", new object[] {
                        tableName,
                        pkColumn,
                        modifiedDate,
                        noOfRecords,
                        useInventoryLoc,
                        invLocID,
                        usePOSID,
                        posID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchDataSetByTimestampAsync(string tableName, string pkColumn, System.DateTime modifiedDate, int noOfRecords, bool useInventoryLoc, int invLocID, bool usePOSID, int posID) {
            this.FetchDataSetByTimestampAsync(tableName, pkColumn, modifiedDate, noOfRecords, useInventoryLoc, invLocID, usePOSID, posID, null);
        }
        
        /// <remarks/>
        public void FetchDataSetByTimestampAsync(string tableName, string pkColumn, System.DateTime modifiedDate, int noOfRecords, bool useInventoryLoc, int invLocID, bool usePOSID, int posID, object userState) {
            if ((this.FetchDataSetByTimestampOperationCompleted == null)) {
                this.FetchDataSetByTimestampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchDataSetByTimestampOperationCompleted);
            }
            this.InvokeAsync("FetchDataSetByTimestamp", new object[] {
                        tableName,
                        pkColumn,
                        modifiedDate,
                        noOfRecords,
                        useInventoryLoc,
                        invLocID,
                        usePOSID,
                        posID}, this.FetchDataSetByTimestampOperationCompleted, userState);
        }
        
        private void OnFetchDataSetByTimestampOperationCompleted(object arg) {
            if ((this.FetchDataSetByTimestampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchDataSetByTimestampCompleted(this, new FetchDataSetByTimestampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchDataSetByTimeStampPerMember", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchDataSetByTimeStampPerMember(string tableName, string pkColumn, System.DateTime modifiedDate, int noOfRecords, string membershipNo) {
            object[] results = this.Invoke("FetchDataSetByTimeStampPerMember", new object[] {
                        tableName,
                        pkColumn,
                        modifiedDate,
                        noOfRecords,
                        membershipNo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchDataSetByTimeStampPerMemberAsync(string tableName, string pkColumn, System.DateTime modifiedDate, int noOfRecords, string membershipNo) {
            this.FetchDataSetByTimeStampPerMemberAsync(tableName, pkColumn, modifiedDate, noOfRecords, membershipNo, null);
        }
        
        /// <remarks/>
        public void FetchDataSetByTimeStampPerMemberAsync(string tableName, string pkColumn, System.DateTime modifiedDate, int noOfRecords, string membershipNo, object userState) {
            if ((this.FetchDataSetByTimeStampPerMemberOperationCompleted == null)) {
                this.FetchDataSetByTimeStampPerMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchDataSetByTimeStampPerMemberOperationCompleted);
            }
            this.InvokeAsync("FetchDataSetByTimeStampPerMember", new object[] {
                        tableName,
                        pkColumn,
                        modifiedDate,
                        noOfRecords,
                        membershipNo}, this.FetchDataSetByTimeStampPerMemberOperationCompleted, userState);
        }
        
        private void OnFetchDataSetByTimeStampPerMemberOperationCompleted(object arg) {
            if ((this.FetchDataSetByTimeStampPerMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchDataSetByTimeStampPerMemberCompleted(this, new FetchDataSetByTimeStampPerMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchDataSetByTimeStampPerModuleName", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchDataSetByTimeStampPerModuleName(string tableName, string pkColumn, System.DateTime modifiedDate, int noOfRecords, string moduleName) {
            object[] results = this.Invoke("FetchDataSetByTimeStampPerModuleName", new object[] {
                        tableName,
                        pkColumn,
                        modifiedDate,
                        noOfRecords,
                        moduleName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchDataSetByTimeStampPerModuleNameAsync(string tableName, string pkColumn, System.DateTime modifiedDate, int noOfRecords, string moduleName) {
            this.FetchDataSetByTimeStampPerModuleNameAsync(tableName, pkColumn, modifiedDate, noOfRecords, moduleName, null);
        }
        
        /// <remarks/>
        public void FetchDataSetByTimeStampPerModuleNameAsync(string tableName, string pkColumn, System.DateTime modifiedDate, int noOfRecords, string moduleName, object userState) {
            if ((this.FetchDataSetByTimeStampPerModuleNameOperationCompleted == null)) {
                this.FetchDataSetByTimeStampPerModuleNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchDataSetByTimeStampPerModuleNameOperationCompleted);
            }
            this.InvokeAsync("FetchDataSetByTimeStampPerModuleName", new object[] {
                        tableName,
                        pkColumn,
                        modifiedDate,
                        noOfRecords,
                        moduleName}, this.FetchDataSetByTimeStampPerModuleNameOperationCompleted, userState);
        }
        
        private void OnFetchDataSetByTimeStampPerModuleNameOperationCompleted(object arg) {
            if ((this.FetchDataSetByTimeStampPerModuleNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchDataSetByTimeStampPerModuleNameCompleted(this, new FetchDataSetByTimeStampPerModuleNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchRecordNoByTimestamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FetchRecordNoByTimestamp(string tableName, System.DateTime modifiedOn) {
            object[] results = this.Invoke("FetchRecordNoByTimestamp", new object[] {
                        tableName,
                        modifiedOn});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampAsync(string tableName, System.DateTime modifiedOn) {
            this.FetchRecordNoByTimestampAsync(tableName, modifiedOn, null);
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampAsync(string tableName, System.DateTime modifiedOn, object userState) {
            if ((this.FetchRecordNoByTimestampOperationCompleted == null)) {
                this.FetchRecordNoByTimestampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchRecordNoByTimestampOperationCompleted);
            }
            this.InvokeAsync("FetchRecordNoByTimestamp", new object[] {
                        tableName,
                        modifiedOn}, this.FetchRecordNoByTimestampOperationCompleted, userState);
        }
        
        private void OnFetchRecordNoByTimestampOperationCompleted(object arg) {
            if ((this.FetchRecordNoByTimestampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchRecordNoByTimestampCompleted(this, new FetchRecordNoByTimestampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchRecordNoByTimestampByInvLocID", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FetchRecordNoByTimestampByInvLocID(string tableName, System.DateTime modifiedOn, int invLocID) {
            object[] results = this.Invoke("FetchRecordNoByTimestampByInvLocID", new object[] {
                        tableName,
                        modifiedOn,
                        invLocID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampByInvLocIDAsync(string tableName, System.DateTime modifiedOn, int invLocID) {
            this.FetchRecordNoByTimestampByInvLocIDAsync(tableName, modifiedOn, invLocID, null);
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampByInvLocIDAsync(string tableName, System.DateTime modifiedOn, int invLocID, object userState) {
            if ((this.FetchRecordNoByTimestampByInvLocIDOperationCompleted == null)) {
                this.FetchRecordNoByTimestampByInvLocIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchRecordNoByTimestampByInvLocIDOperationCompleted);
            }
            this.InvokeAsync("FetchRecordNoByTimestampByInvLocID", new object[] {
                        tableName,
                        modifiedOn,
                        invLocID}, this.FetchRecordNoByTimestampByInvLocIDOperationCompleted, userState);
        }
        
        private void OnFetchRecordNoByTimestampByInvLocIDOperationCompleted(object arg) {
            if ((this.FetchRecordNoByTimestampByInvLocIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchRecordNoByTimestampByInvLocIDCompleted(this, new FetchRecordNoByTimestampByInvLocIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchRecordNoByTimestampByPOSID", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FetchRecordNoByTimestampByPOSID(string tableName, System.DateTime modifiedOn, int posID) {
            object[] results = this.Invoke("FetchRecordNoByTimestampByPOSID", new object[] {
                        tableName,
                        modifiedOn,
                        posID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampByPOSIDAsync(string tableName, System.DateTime modifiedOn, int posID) {
            this.FetchRecordNoByTimestampByPOSIDAsync(tableName, modifiedOn, posID, null);
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampByPOSIDAsync(string tableName, System.DateTime modifiedOn, int posID, object userState) {
            if ((this.FetchRecordNoByTimestampByPOSIDOperationCompleted == null)) {
                this.FetchRecordNoByTimestampByPOSIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchRecordNoByTimestampByPOSIDOperationCompleted);
            }
            this.InvokeAsync("FetchRecordNoByTimestampByPOSID", new object[] {
                        tableName,
                        modifiedOn,
                        posID}, this.FetchRecordNoByTimestampByPOSIDOperationCompleted, userState);
        }
        
        private void OnFetchRecordNoByTimestampByPOSIDOperationCompleted(object arg) {
            if ((this.FetchRecordNoByTimestampByPOSIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchRecordNoByTimestampByPOSIDCompleted(this, new FetchRecordNoByTimestampByPOSIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchRecordNoByTimestampByOutletName", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FetchRecordNoByTimestampByOutletName(string tableName, System.DateTime modifiedOn, string outletName) {
            object[] results = this.Invoke("FetchRecordNoByTimestampByOutletName", new object[] {
                        tableName,
                        modifiedOn,
                        outletName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampByOutletNameAsync(string tableName, System.DateTime modifiedOn, string outletName) {
            this.FetchRecordNoByTimestampByOutletNameAsync(tableName, modifiedOn, outletName, null);
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampByOutletNameAsync(string tableName, System.DateTime modifiedOn, string outletName, object userState) {
            if ((this.FetchRecordNoByTimestampByOutletNameOperationCompleted == null)) {
                this.FetchRecordNoByTimestampByOutletNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchRecordNoByTimestampByOutletNameOperationCompleted);
            }
            this.InvokeAsync("FetchRecordNoByTimestampByOutletName", new object[] {
                        tableName,
                        modifiedOn,
                        outletName}, this.FetchRecordNoByTimestampByOutletNameOperationCompleted, userState);
        }
        
        private void OnFetchRecordNoByTimestampByOutletNameOperationCompleted(object arg) {
            if ((this.FetchRecordNoByTimestampByOutletNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchRecordNoByTimestampByOutletNameCompleted(this, new FetchRecordNoByTimestampByOutletNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchRecordNoByTimestampByMember", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FetchRecordNoByTimestampByMember(string tableName, System.DateTime modifiedOn, string membershipNo) {
            object[] results = this.Invoke("FetchRecordNoByTimestampByMember", new object[] {
                        tableName,
                        modifiedOn,
                        membershipNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampByMemberAsync(string tableName, System.DateTime modifiedOn, string membershipNo) {
            this.FetchRecordNoByTimestampByMemberAsync(tableName, modifiedOn, membershipNo, null);
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampByMemberAsync(string tableName, System.DateTime modifiedOn, string membershipNo, object userState) {
            if ((this.FetchRecordNoByTimestampByMemberOperationCompleted == null)) {
                this.FetchRecordNoByTimestampByMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchRecordNoByTimestampByMemberOperationCompleted);
            }
            this.InvokeAsync("FetchRecordNoByTimestampByMember", new object[] {
                        tableName,
                        modifiedOn,
                        membershipNo}, this.FetchRecordNoByTimestampByMemberOperationCompleted, userState);
        }
        
        private void OnFetchRecordNoByTimestampByMemberOperationCompleted(object arg) {
            if ((this.FetchRecordNoByTimestampByMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchRecordNoByTimestampByMemberCompleted(this, new FetchRecordNoByTimestampByMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchRecordNoByTimestampByModuleName", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FetchRecordNoByTimestampByModuleName(string tableName, System.DateTime modifiedOn, string moduleName) {
            object[] results = this.Invoke("FetchRecordNoByTimestampByModuleName", new object[] {
                        tableName,
                        modifiedOn,
                        moduleName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampByModuleNameAsync(string tableName, System.DateTime modifiedOn, string moduleName) {
            this.FetchRecordNoByTimestampByModuleNameAsync(tableName, modifiedOn, moduleName, null);
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampByModuleNameAsync(string tableName, System.DateTime modifiedOn, string moduleName, object userState) {
            if ((this.FetchRecordNoByTimestampByModuleNameOperationCompleted == null)) {
                this.FetchRecordNoByTimestampByModuleNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchRecordNoByTimestampByModuleNameOperationCompleted);
            }
            this.InvokeAsync("FetchRecordNoByTimestampByModuleName", new object[] {
                        tableName,
                        modifiedOn,
                        moduleName}, this.FetchRecordNoByTimestampByModuleNameOperationCompleted, userState);
        }
        
        private void OnFetchRecordNoByTimestampByModuleNameOperationCompleted(object arg) {
            if ((this.FetchRecordNoByTimestampByModuleNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchRecordNoByTimestampByModuleNameCompleted(this, new FetchRecordNoByTimestampByModuleNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchPromoRecordNoByTimestampByOutletName", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FetchPromoRecordNoByTimestampByOutletName(System.DateTime modifiedOn, string outletName) {
            object[] results = this.Invoke("FetchPromoRecordNoByTimestampByOutletName", new object[] {
                        modifiedOn,
                        outletName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FetchPromoRecordNoByTimestampByOutletNameAsync(System.DateTime modifiedOn, string outletName) {
            this.FetchPromoRecordNoByTimestampByOutletNameAsync(modifiedOn, outletName, null);
        }
        
        /// <remarks/>
        public void FetchPromoRecordNoByTimestampByOutletNameAsync(System.DateTime modifiedOn, string outletName, object userState) {
            if ((this.FetchPromoRecordNoByTimestampByOutletNameOperationCompleted == null)) {
                this.FetchPromoRecordNoByTimestampByOutletNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchPromoRecordNoByTimestampByOutletNameOperationCompleted);
            }
            this.InvokeAsync("FetchPromoRecordNoByTimestampByOutletName", new object[] {
                        modifiedOn,
                        outletName}, this.FetchPromoRecordNoByTimestampByOutletNameOperationCompleted, userState);
        }
        
        private void OnFetchPromoRecordNoByTimestampByOutletNameOperationCompleted(object arg) {
            if ((this.FetchPromoRecordNoByTimestampByOutletNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchPromoRecordNoByTimestampByOutletNameCompleted(this, new FetchPromoRecordNoByTimestampByOutletNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetPromoRecordCountAfterTimestamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPromoRecordCountAfterTimestamp(System.DateTime lastModifiedOn) {
            object[] results = this.Invoke("GetPromoRecordCountAfterTimestamp", new object[] {
                        lastModifiedOn});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPromoRecordCountAfterTimestampAsync(System.DateTime lastModifiedOn) {
            this.GetPromoRecordCountAfterTimestampAsync(lastModifiedOn, null);
        }
        
        /// <remarks/>
        public void GetPromoRecordCountAfterTimestampAsync(System.DateTime lastModifiedOn, object userState) {
            if ((this.GetPromoRecordCountAfterTimestampOperationCompleted == null)) {
                this.GetPromoRecordCountAfterTimestampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPromoRecordCountAfterTimestampOperationCompleted);
            }
            this.InvokeAsync("GetPromoRecordCountAfterTimestamp", new object[] {
                        lastModifiedOn}, this.GetPromoRecordCountAfterTimestampOperationCompleted, userState);
        }
        
        private void OnGetPromoRecordCountAfterTimestampOperationCompleted(object arg) {
            if ((this.GetPromoRecordCountAfterTimestampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPromoRecordCountAfterTimestampCompleted(this, new GetPromoRecordCountAfterTimestampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchRecordNoByTimestampAppointment", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FetchRecordNoByTimestampAppointment(System.DateTime modifiedOn, int pointOfSaleID) {
            object[] results = this.Invoke("FetchRecordNoByTimestampAppointment", new object[] {
                        modifiedOn,
                        pointOfSaleID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampAppointmentAsync(System.DateTime modifiedOn, int pointOfSaleID) {
            this.FetchRecordNoByTimestampAppointmentAsync(modifiedOn, pointOfSaleID, null);
        }
        
        /// <remarks/>
        public void FetchRecordNoByTimestampAppointmentAsync(System.DateTime modifiedOn, int pointOfSaleID, object userState) {
            if ((this.FetchRecordNoByTimestampAppointmentOperationCompleted == null)) {
                this.FetchRecordNoByTimestampAppointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchRecordNoByTimestampAppointmentOperationCompleted);
            }
            this.InvokeAsync("FetchRecordNoByTimestampAppointment", new object[] {
                        modifiedOn,
                        pointOfSaleID}, this.FetchRecordNoByTimestampAppointmentOperationCompleted, userState);
        }
        
        private void OnFetchRecordNoByTimestampAppointmentOperationCompleted(object arg) {
            if ((this.FetchRecordNoByTimestampAppointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchRecordNoByTimestampAppointmentCompleted(this, new FetchRecordNoByTimestampAppointmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/getSalesLastTimeStamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getSalesLastTimeStamp(int PointofSaleID, out System.DateTime res) {
            object[] results = this.Invoke("getSalesLastTimeStamp", new object[] {
                        PointofSaleID});
            res = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getSalesLastTimeStampAsync(int PointofSaleID) {
            this.getSalesLastTimeStampAsync(PointofSaleID, null);
        }
        
        /// <remarks/>
        public void getSalesLastTimeStampAsync(int PointofSaleID, object userState) {
            if ((this.getSalesLastTimeStampOperationCompleted == null)) {
                this.getSalesLastTimeStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSalesLastTimeStampOperationCompleted);
            }
            this.InvokeAsync("getSalesLastTimeStamp", new object[] {
                        PointofSaleID}, this.getSalesLastTimeStampOperationCompleted, userState);
        }
        
        private void OngetSalesLastTimeStampOperationCompleted(object arg) {
            if ((this.getSalesLastTimeStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSalesLastTimeStampCompleted(this, new getSalesLastTimeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetAccessLogLastTimeStamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetAccessLogLastTimeStamp(int pointOfSaleID) {
            object[] results = this.Invoke("GetAccessLogLastTimeStamp", new object[] {
                        pointOfSaleID});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessLogLastTimeStampAsync(int pointOfSaleID) {
            this.GetAccessLogLastTimeStampAsync(pointOfSaleID, null);
        }
        
        /// <remarks/>
        public void GetAccessLogLastTimeStampAsync(int pointOfSaleID, object userState) {
            if ((this.GetAccessLogLastTimeStampOperationCompleted == null)) {
                this.GetAccessLogLastTimeStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessLogLastTimeStampOperationCompleted);
            }
            this.InvokeAsync("GetAccessLogLastTimeStamp", new object[] {
                        pointOfSaleID}, this.GetAccessLogLastTimeStampOperationCompleted, userState);
        }
        
        private void OnGetAccessLogLastTimeStampOperationCompleted(object arg) {
            if ((this.GetAccessLogLastTimeStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessLogLastTimeStampCompleted(this, new GetAccessLogLastTimeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/getCashRecordingLastTimeStamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getCashRecordingLastTimeStamp(int PointofSaleID, out System.DateTime res) {
            object[] results = this.Invoke("getCashRecordingLastTimeStamp", new object[] {
                        PointofSaleID});
            res = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getCashRecordingLastTimeStampAsync(int PointofSaleID) {
            this.getCashRecordingLastTimeStampAsync(PointofSaleID, null);
        }
        
        /// <remarks/>
        public void getCashRecordingLastTimeStampAsync(int PointofSaleID, object userState) {
            if ((this.getCashRecordingLastTimeStampOperationCompleted == null)) {
                this.getCashRecordingLastTimeStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCashRecordingLastTimeStampOperationCompleted);
            }
            this.InvokeAsync("getCashRecordingLastTimeStamp", new object[] {
                        PointofSaleID}, this.getCashRecordingLastTimeStampOperationCompleted, userState);
        }
        
        private void OngetCashRecordingLastTimeStampOperationCompleted(object arg) {
            if ((this.getCashRecordingLastTimeStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCashRecordingLastTimeStampCompleted(this, new getCashRecordingLastTimeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/getQuotationLastTimeStamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getQuotationLastTimeStamp(int PointofSaleID, out System.DateTime res) {
            object[] results = this.Invoke("getQuotationLastTimeStamp", new object[] {
                        PointofSaleID});
            res = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getQuotationLastTimeStampAsync(int PointofSaleID) {
            this.getQuotationLastTimeStampAsync(PointofSaleID, null);
        }
        
        /// <remarks/>
        public void getQuotationLastTimeStampAsync(int PointofSaleID, object userState) {
            if ((this.getQuotationLastTimeStampOperationCompleted == null)) {
                this.getQuotationLastTimeStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQuotationLastTimeStampOperationCompleted);
            }
            this.InvokeAsync("getQuotationLastTimeStamp", new object[] {
                        PointofSaleID}, this.getQuotationLastTimeStampOperationCompleted, userState);
        }
        
        private void OngetQuotationLastTimeStampOperationCompleted(object arg) {
            if ((this.getQuotationLastTimeStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQuotationLastTimeStampCompleted(this, new getQuotationLastTimeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/getCounterCloselogLastTimeStamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getCounterCloselogLastTimeStamp(int PointofSaleID, out System.DateTime res) {
            object[] results = this.Invoke("getCounterCloselogLastTimeStamp", new object[] {
                        PointofSaleID});
            res = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getCounterCloselogLastTimeStampAsync(int PointofSaleID) {
            this.getCounterCloselogLastTimeStampAsync(PointofSaleID, null);
        }
        
        /// <remarks/>
        public void getCounterCloselogLastTimeStampAsync(int PointofSaleID, object userState) {
            if ((this.getCounterCloselogLastTimeStampOperationCompleted == null)) {
                this.getCounterCloselogLastTimeStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCounterCloselogLastTimeStampOperationCompleted);
            }
            this.InvokeAsync("getCounterCloselogLastTimeStamp", new object[] {
                        PointofSaleID}, this.getCounterCloselogLastTimeStampOperationCompleted, userState);
        }
        
        private void OngetCounterCloselogLastTimeStampOperationCompleted(object arg) {
            if ((this.getCounterCloselogLastTimeStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCounterCloselogLastTimeStampCompleted(this, new getCounterCloselogLastTimeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetAttendanceLastTimeStamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetAttendanceLastTimeStamp(int pointOfSaleID) {
            object[] results = this.Invoke("GetAttendanceLastTimeStamp", new object[] {
                        pointOfSaleID});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendanceLastTimeStampAsync(int pointOfSaleID) {
            this.GetAttendanceLastTimeStampAsync(pointOfSaleID, null);
        }
        
        /// <remarks/>
        public void GetAttendanceLastTimeStampAsync(int pointOfSaleID, object userState) {
            if ((this.GetAttendanceLastTimeStampOperationCompleted == null)) {
                this.GetAttendanceLastTimeStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendanceLastTimeStampOperationCompleted);
            }
            this.InvokeAsync("GetAttendanceLastTimeStamp", new object[] {
                        pointOfSaleID}, this.GetAttendanceLastTimeStampOperationCompleted, userState);
        }
        
        private void OnGetAttendanceLastTimeStampOperationCompleted(object arg) {
            if ((this.GetAttendanceLastTimeStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendanceLastTimeStampCompleted(this, new GetAttendanceLastTimeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/getLastTimeStampByPOSID", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getLastTimeStampByPOSID(string tablename, int PointofSaleID, out System.DateTime res) {
            object[] results = this.Invoke("getLastTimeStampByPOSID", new object[] {
                        tablename,
                        PointofSaleID});
            res = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getLastTimeStampByPOSIDAsync(string tablename, int PointofSaleID) {
            this.getLastTimeStampByPOSIDAsync(tablename, PointofSaleID, null);
        }
        
        /// <remarks/>
        public void getLastTimeStampByPOSIDAsync(string tablename, int PointofSaleID, object userState) {
            if ((this.getLastTimeStampByPOSIDOperationCompleted == null)) {
                this.getLastTimeStampByPOSIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLastTimeStampByPOSIDOperationCompleted);
            }
            this.InvokeAsync("getLastTimeStampByPOSID", new object[] {
                        tablename,
                        PointofSaleID}, this.getLastTimeStampByPOSIDOperationCompleted, userState);
        }
        
        private void OngetLastTimeStampByPOSIDOperationCompleted(object arg) {
            if ((this.getLastTimeStampByPOSIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLastTimeStampByPOSIDCompleted(this, new getLastTimeStampByPOSIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetInventoryCountRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetInventoryCountRealTime(System.DateTime lastModifiedOn) {
            object[] results = this.Invoke("GetInventoryCountRealTime", new object[] {
                        lastModifiedOn});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryCountRealTimeAsync(System.DateTime lastModifiedOn) {
            this.GetInventoryCountRealTimeAsync(lastModifiedOn, null);
        }
        
        /// <remarks/>
        public void GetInventoryCountRealTimeAsync(System.DateTime lastModifiedOn, object userState) {
            if ((this.GetInventoryCountRealTimeOperationCompleted == null)) {
                this.GetInventoryCountRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryCountRealTimeOperationCompleted);
            }
            this.InvokeAsync("GetInventoryCountRealTime", new object[] {
                        lastModifiedOn}, this.GetInventoryCountRealTimeOperationCompleted, userState);
        }
        
        private void OnGetInventoryCountRealTimeOperationCompleted(object arg) {
            if ((this.GetInventoryCountRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryCountRealTimeCompleted(this, new GetInventoryCountRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetInventoryRealTimeData", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetInventoryRealTimeData(System.DateTime lastModifiedOn, int recordsPerTime) {
            object[] results = this.Invoke("GetInventoryRealTimeData", new object[] {
                        lastModifiedOn,
                        recordsPerTime});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryRealTimeDataAsync(System.DateTime lastModifiedOn, int recordsPerTime) {
            this.GetInventoryRealTimeDataAsync(lastModifiedOn, recordsPerTime, null);
        }
        
        /// <remarks/>
        public void GetInventoryRealTimeDataAsync(System.DateTime lastModifiedOn, int recordsPerTime, object userState) {
            if ((this.GetInventoryRealTimeDataOperationCompleted == null)) {
                this.GetInventoryRealTimeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryRealTimeDataOperationCompleted);
            }
            this.InvokeAsync("GetInventoryRealTimeData", new object[] {
                        lastModifiedOn,
                        recordsPerTime}, this.GetInventoryRealTimeDataOperationCompleted, userState);
        }
        
        private void OnGetInventoryRealTimeDataOperationCompleted(object arg) {
            if ((this.GetInventoryRealTimeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryRealTimeDataCompleted(this, new GetInventoryRealTimeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetPromoRealTimeData", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPromoRealTimeData(System.DateTime lastModifiedOn, int recordsPerTime, int PointOfSaleID) {
            object[] results = this.Invoke("GetPromoRealTimeData", new object[] {
                        lastModifiedOn,
                        recordsPerTime,
                        PointOfSaleID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPromoRealTimeDataAsync(System.DateTime lastModifiedOn, int recordsPerTime, int PointOfSaleID) {
            this.GetPromoRealTimeDataAsync(lastModifiedOn, recordsPerTime, PointOfSaleID, null);
        }
        
        /// <remarks/>
        public void GetPromoRealTimeDataAsync(System.DateTime lastModifiedOn, int recordsPerTime, int PointOfSaleID, object userState) {
            if ((this.GetPromoRealTimeDataOperationCompleted == null)) {
                this.GetPromoRealTimeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPromoRealTimeDataOperationCompleted);
            }
            this.InvokeAsync("GetPromoRealTimeData", new object[] {
                        lastModifiedOn,
                        recordsPerTime,
                        PointOfSaleID}, this.GetPromoRealTimeDataOperationCompleted, userState);
        }
        
        private void OnGetPromoRealTimeDataOperationCompleted(object arg) {
            if ((this.GetPromoRealTimeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPromoRealTimeDataCompleted(this, new GetPromoRealTimeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetPromoRealTimeDataAll", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPromoRealTimeDataAll(System.DateTime lastModifiedOn, int recordsPerTime) {
            object[] results = this.Invoke("GetPromoRealTimeDataAll", new object[] {
                        lastModifiedOn,
                        recordsPerTime});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPromoRealTimeDataAllAsync(System.DateTime lastModifiedOn, int recordsPerTime) {
            this.GetPromoRealTimeDataAllAsync(lastModifiedOn, recordsPerTime, null);
        }
        
        /// <remarks/>
        public void GetPromoRealTimeDataAllAsync(System.DateTime lastModifiedOn, int recordsPerTime, object userState) {
            if ((this.GetPromoRealTimeDataAllOperationCompleted == null)) {
                this.GetPromoRealTimeDataAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPromoRealTimeDataAllOperationCompleted);
            }
            this.InvokeAsync("GetPromoRealTimeDataAll", new object[] {
                        lastModifiedOn,
                        recordsPerTime}, this.GetPromoRealTimeDataAllOperationCompleted, userState);
        }
        
        private void OnGetPromoRealTimeDataAllOperationCompleted(object arg) {
            if ((this.GetPromoRealTimeDataAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPromoRealTimeDataAllCompleted(this, new GetPromoRealTimeDataAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetPurchaseOrderRealTimeData", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPurchaseOrderRealTimeData(System.DateTime lastModifiedOn, int recordsPerTime, int inventoryLocationID) {
            object[] results = this.Invoke("GetPurchaseOrderRealTimeData", new object[] {
                        lastModifiedOn,
                        recordsPerTime,
                        inventoryLocationID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPurchaseOrderRealTimeDataAsync(System.DateTime lastModifiedOn, int recordsPerTime, int inventoryLocationID) {
            this.GetPurchaseOrderRealTimeDataAsync(lastModifiedOn, recordsPerTime, inventoryLocationID, null);
        }
        
        /// <remarks/>
        public void GetPurchaseOrderRealTimeDataAsync(System.DateTime lastModifiedOn, int recordsPerTime, int inventoryLocationID, object userState) {
            if ((this.GetPurchaseOrderRealTimeDataOperationCompleted == null)) {
                this.GetPurchaseOrderRealTimeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPurchaseOrderRealTimeDataOperationCompleted);
            }
            this.InvokeAsync("GetPurchaseOrderRealTimeData", new object[] {
                        lastModifiedOn,
                        recordsPerTime,
                        inventoryLocationID}, this.GetPurchaseOrderRealTimeDataOperationCompleted, userState);
        }
        
        private void OnGetPurchaseOrderRealTimeDataOperationCompleted(object arg) {
            if ((this.GetPurchaseOrderRealTimeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPurchaseOrderRealTimeDataCompleted(this, new GetPurchaseOrderRealTimeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetItemGroupRealTimeData", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetItemGroupRealTimeData(System.DateTime lastModifiedOn, int recordsPerTime) {
            object[] results = this.Invoke("GetItemGroupRealTimeData", new object[] {
                        lastModifiedOn,
                        recordsPerTime});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetItemGroupRealTimeDataAsync(System.DateTime lastModifiedOn, int recordsPerTime) {
            this.GetItemGroupRealTimeDataAsync(lastModifiedOn, recordsPerTime, null);
        }
        
        /// <remarks/>
        public void GetItemGroupRealTimeDataAsync(System.DateTime lastModifiedOn, int recordsPerTime, object userState) {
            if ((this.GetItemGroupRealTimeDataOperationCompleted == null)) {
                this.GetItemGroupRealTimeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemGroupRealTimeDataOperationCompleted);
            }
            this.InvokeAsync("GetItemGroupRealTimeData", new object[] {
                        lastModifiedOn,
                        recordsPerTime}, this.GetItemGroupRealTimeDataOperationCompleted, userState);
        }
        
        private void OnGetItemGroupRealTimeDataOperationCompleted(object arg) {
            if ((this.GetItemGroupRealTimeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemGroupRealTimeDataCompleted(this, new GetItemGroupRealTimeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetStockTakeRealTimeData", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetStockTakeRealTimeData(System.DateTime lastModifiedOn, int recordsPerTime) {
            object[] results = this.Invoke("GetStockTakeRealTimeData", new object[] {
                        lastModifiedOn,
                        recordsPerTime});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStockTakeRealTimeDataAsync(System.DateTime lastModifiedOn, int recordsPerTime) {
            this.GetStockTakeRealTimeDataAsync(lastModifiedOn, recordsPerTime, null);
        }
        
        /// <remarks/>
        public void GetStockTakeRealTimeDataAsync(System.DateTime lastModifiedOn, int recordsPerTime, object userState) {
            if ((this.GetStockTakeRealTimeDataOperationCompleted == null)) {
                this.GetStockTakeRealTimeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockTakeRealTimeDataOperationCompleted);
            }
            this.InvokeAsync("GetStockTakeRealTimeData", new object[] {
                        lastModifiedOn,
                        recordsPerTime}, this.GetStockTakeRealTimeDataOperationCompleted, userState);
        }
        
        private void OnGetStockTakeRealTimeDataOperationCompleted(object arg) {
            if ((this.GetStockTakeRealTimeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockTakeRealTimeDataCompleted(this, new GetStockTakeRealTimeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetPointsRealTimeDataAll", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPointsRealTimeDataAll(System.DateTime lastModifiedOn, int recordsPerTime, string membershipNo) {
            object[] results = this.Invoke("GetPointsRealTimeDataAll", new object[] {
                        lastModifiedOn,
                        recordsPerTime,
                        membershipNo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPointsRealTimeDataAllAsync(System.DateTime lastModifiedOn, int recordsPerTime, string membershipNo) {
            this.GetPointsRealTimeDataAllAsync(lastModifiedOn, recordsPerTime, membershipNo, null);
        }
        
        /// <remarks/>
        public void GetPointsRealTimeDataAllAsync(System.DateTime lastModifiedOn, int recordsPerTime, string membershipNo, object userState) {
            if ((this.GetPointsRealTimeDataAllOperationCompleted == null)) {
                this.GetPointsRealTimeDataAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPointsRealTimeDataAllOperationCompleted);
            }
            this.InvokeAsync("GetPointsRealTimeDataAll", new object[] {
                        lastModifiedOn,
                        recordsPerTime,
                        membershipNo}, this.GetPointsRealTimeDataAllOperationCompleted, userState);
        }
        
        private void OnGetPointsRealTimeDataAllOperationCompleted(object arg) {
            if ((this.GetPointsRealTimeDataAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPointsRealTimeDataAllCompleted(this, new GetPointsRealTimeDataAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchOrdersCCMWRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchOrdersCCMWRealTime([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsHeaders, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsDetails, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsReceiptHdr, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsReceiptDet, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsSalesComm, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsMember, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsVoidLog, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsUOMConv) {
            object[] results = this.Invoke("FetchOrdersCCMWRealTime", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsReceiptHdr,
                        dsReceiptDet,
                        dsSalesComm,
                        dsMember,
                        dsVoidLog,
                        dsUOMConv});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchOrdersCCMWRealTimeAsync(string[][] dsHeaders, string[][] dsDetails, string[][] dsReceiptHdr, string[][] dsReceiptDet, string[][] dsSalesComm, string[][] dsMember, string[][] dsVoidLog, string[][] dsUOMConv) {
            this.FetchOrdersCCMWRealTimeAsync(dsHeaders, dsDetails, dsReceiptHdr, dsReceiptDet, dsSalesComm, dsMember, dsVoidLog, dsUOMConv, null);
        }
        
        /// <remarks/>
        public void FetchOrdersCCMWRealTimeAsync(string[][] dsHeaders, string[][] dsDetails, string[][] dsReceiptHdr, string[][] dsReceiptDet, string[][] dsSalesComm, string[][] dsMember, string[][] dsVoidLog, string[][] dsUOMConv, object userState) {
            if ((this.FetchOrdersCCMWRealTimeOperationCompleted == null)) {
                this.FetchOrdersCCMWRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchOrdersCCMWRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchOrdersCCMWRealTime", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsReceiptHdr,
                        dsReceiptDet,
                        dsSalesComm,
                        dsMember,
                        dsVoidLog,
                        dsUOMConv}, this.FetchOrdersCCMWRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchOrdersCCMWRealTimeOperationCompleted(object arg) {
            if ((this.FetchOrdersCCMWRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchOrdersCCMWRealTimeCompleted(this, new FetchOrdersCCMWRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchAccessLogRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchAccessLogRealTime([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] accessLog) {
            object[] results = this.Invoke("FetchAccessLogRealTime", new object[] {
                        accessLog});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchAccessLogRealTimeAsync(string[][] accessLog) {
            this.FetchAccessLogRealTimeAsync(accessLog, null);
        }
        
        /// <remarks/>
        public void FetchAccessLogRealTimeAsync(string[][] accessLog, object userState) {
            if ((this.FetchAccessLogRealTimeOperationCompleted == null)) {
                this.FetchAccessLogRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchAccessLogRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchAccessLogRealTime", new object[] {
                        accessLog}, this.FetchAccessLogRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchAccessLogRealTimeOperationCompleted(object arg) {
            if ((this.FetchAccessLogRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchAccessLogRealTimeCompleted(this, new FetchAccessLogRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchAAttendanceRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchAAttendanceRealTime([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] attendance) {
            object[] results = this.Invoke("FetchAAttendanceRealTime", new object[] {
                        attendance});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchAAttendanceRealTimeAsync(string[][] attendance) {
            this.FetchAAttendanceRealTimeAsync(attendance, null);
        }
        
        /// <remarks/>
        public void FetchAAttendanceRealTimeAsync(string[][] attendance, object userState) {
            if ((this.FetchAAttendanceRealTimeOperationCompleted == null)) {
                this.FetchAAttendanceRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchAAttendanceRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchAAttendanceRealTime", new object[] {
                        attendance}, this.FetchAAttendanceRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchAAttendanceRealTimeOperationCompleted(object arg) {
            if ((this.FetchAAttendanceRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchAAttendanceRealTimeCompleted(this, new FetchAAttendanceRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchCounterCloseLogRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchCounterCloseLogRealTime([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsCounterCloseLogs) {
            object[] results = this.Invoke("FetchCounterCloseLogRealTime", new object[] {
                        dsCounterCloseLogs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchCounterCloseLogRealTimeAsync(string[][] dsCounterCloseLogs) {
            this.FetchCounterCloseLogRealTimeAsync(dsCounterCloseLogs, null);
        }
        
        /// <remarks/>
        public void FetchCounterCloseLogRealTimeAsync(string[][] dsCounterCloseLogs, object userState) {
            if ((this.FetchCounterCloseLogRealTimeOperationCompleted == null)) {
                this.FetchCounterCloseLogRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchCounterCloseLogRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchCounterCloseLogRealTime", new object[] {
                        dsCounterCloseLogs}, this.FetchCounterCloseLogRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchCounterCloseLogRealTimeOperationCompleted(object arg) {
            if ((this.FetchCounterCloseLogRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchCounterCloseLogRealTimeCompleted(this, new FetchCounterCloseLogRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchCounterCloseLogWithDetailRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchCounterCloseLogWithDetailRealTime([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsCounterCloseLogs, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsCounterCloseDets) {
            object[] results = this.Invoke("FetchCounterCloseLogWithDetailRealTime", new object[] {
                        dsCounterCloseLogs,
                        dsCounterCloseDets});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchCounterCloseLogWithDetailRealTimeAsync(string[][] dsCounterCloseLogs, string[][] dsCounterCloseDets) {
            this.FetchCounterCloseLogWithDetailRealTimeAsync(dsCounterCloseLogs, dsCounterCloseDets, null);
        }
        
        /// <remarks/>
        public void FetchCounterCloseLogWithDetailRealTimeAsync(string[][] dsCounterCloseLogs, string[][] dsCounterCloseDets, object userState) {
            if ((this.FetchCounterCloseLogWithDetailRealTimeOperationCompleted == null)) {
                this.FetchCounterCloseLogWithDetailRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchCounterCloseLogWithDetailRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchCounterCloseLogWithDetailRealTime", new object[] {
                        dsCounterCloseLogs,
                        dsCounterCloseDets}, this.FetchCounterCloseLogWithDetailRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchCounterCloseLogWithDetailRealTimeOperationCompleted(object arg) {
            if ((this.FetchCounterCloseLogWithDetailRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchCounterCloseLogWithDetailRealTimeCompleted(this, new FetchCounterCloseLogWithDetailRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchLoginActivityRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchLoginActivityRealTime([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsLoginActivity) {
            object[] results = this.Invoke("FetchLoginActivityRealTime", new object[] {
                        dsLoginActivity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchLoginActivityRealTimeAsync(string[][] dsLoginActivity) {
            this.FetchLoginActivityRealTimeAsync(dsLoginActivity, null);
        }
        
        /// <remarks/>
        public void FetchLoginActivityRealTimeAsync(string[][] dsLoginActivity, object userState) {
            if ((this.FetchLoginActivityRealTimeOperationCompleted == null)) {
                this.FetchLoginActivityRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchLoginActivityRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchLoginActivityRealTime", new object[] {
                        dsLoginActivity}, this.FetchLoginActivityRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchLoginActivityRealTimeOperationCompleted(object arg) {
            if ((this.FetchLoginActivityRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchLoginActivityRealTimeCompleted(this, new FetchLoginActivityRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchQuotationRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchQuotationRealTime([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsQuoteHdr, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsQuoteDet) {
            object[] results = this.Invoke("FetchQuotationRealTime", new object[] {
                        dsQuoteHdr,
                        dsQuoteDet});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchQuotationRealTimeAsync(string[][] dsQuoteHdr, string[][] dsQuoteDet) {
            this.FetchQuotationRealTimeAsync(dsQuoteHdr, dsQuoteDet, null);
        }
        
        /// <remarks/>
        public void FetchQuotationRealTimeAsync(string[][] dsQuoteHdr, string[][] dsQuoteDet, object userState) {
            if ((this.FetchQuotationRealTimeOperationCompleted == null)) {
                this.FetchQuotationRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchQuotationRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchQuotationRealTime", new object[] {
                        dsQuoteHdr,
                        dsQuoteDet}, this.FetchQuotationRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchQuotationRealTimeOperationCompleted(object arg) {
            if ((this.FetchQuotationRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchQuotationRealTimeCompleted(this, new FetchQuotationRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchCashRecordingRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchCashRecordingRealTime([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsCashRecording) {
            object[] results = this.Invoke("FetchCashRecordingRealTime", new object[] {
                        dsCashRecording});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchCashRecordingRealTimeAsync(string[][] dsCashRecording) {
            this.FetchCashRecordingRealTimeAsync(dsCashRecording, null);
        }
        
        /// <remarks/>
        public void FetchCashRecordingRealTimeAsync(string[][] dsCashRecording, object userState) {
            if ((this.FetchCashRecordingRealTimeOperationCompleted == null)) {
                this.FetchCashRecordingRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchCashRecordingRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchCashRecordingRealTime", new object[] {
                        dsCashRecording}, this.FetchCashRecordingRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchCashRecordingRealTimeOperationCompleted(object arg) {
            if ((this.FetchCashRecordingRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchCashRecordingRealTimeCompleted(this, new FetchCashRecordingRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchPerformanceLogRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchPerformanceLogRealTime([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsPerformanceLog) {
            object[] results = this.Invoke("FetchPerformanceLogRealTime", new object[] {
                        dsPerformanceLog});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchPerformanceLogRealTimeAsync(string[][] dsPerformanceLog) {
            this.FetchPerformanceLogRealTimeAsync(dsPerformanceLog, null);
        }
        
        /// <remarks/>
        public void FetchPerformanceLogRealTimeAsync(string[][] dsPerformanceLog, object userState) {
            if ((this.FetchPerformanceLogRealTimeOperationCompleted == null)) {
                this.FetchPerformanceLogRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchPerformanceLogRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchPerformanceLogRealTime", new object[] {
                        dsPerformanceLog}, this.FetchPerformanceLogRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchPerformanceLogRealTimeOperationCompleted(object arg) {
            if ((this.FetchPerformanceLogRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchPerformanceLogRealTimeCompleted(this, new FetchPerformanceLogRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchPerformanceLogSummaryRealTime", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchPerformanceLogSummaryRealTime([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsPerformanceLogSummary) {
            object[] results = this.Invoke("FetchPerformanceLogSummaryRealTime", new object[] {
                        dsPerformanceLogSummary});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchPerformanceLogSummaryRealTimeAsync(string[][] dsPerformanceLogSummary) {
            this.FetchPerformanceLogSummaryRealTimeAsync(dsPerformanceLogSummary, null);
        }
        
        /// <remarks/>
        public void FetchPerformanceLogSummaryRealTimeAsync(string[][] dsPerformanceLogSummary, object userState) {
            if ((this.FetchPerformanceLogSummaryRealTimeOperationCompleted == null)) {
                this.FetchPerformanceLogSummaryRealTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchPerformanceLogSummaryRealTimeOperationCompleted);
            }
            this.InvokeAsync("FetchPerformanceLogSummaryRealTime", new object[] {
                        dsPerformanceLogSummary}, this.FetchPerformanceLogSummaryRealTimeOperationCompleted, userState);
        }
        
        private void OnFetchPerformanceLogSummaryRealTimeOperationCompleted(object arg) {
            if ((this.FetchPerformanceLogSummaryRealTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchPerformanceLogSummaryRealTimeCompleted(this, new FetchPerformanceLogSummaryRealTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SaveAppointment", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveAppointment(System.Data.DataSet Objs) {
            object[] results = this.Invoke("SaveAppointment", new object[] {
                        Objs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAppointmentAsync(System.Data.DataSet Objs) {
            this.SaveAppointmentAsync(Objs, null);
        }
        
        /// <remarks/>
        public void SaveAppointmentAsync(System.Data.DataSet Objs, object userState) {
            if ((this.SaveAppointmentOperationCompleted == null)) {
                this.SaveAppointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAppointmentOperationCompleted);
            }
            this.InvokeAsync("SaveAppointment", new object[] {
                        Objs}, this.SaveAppointmentOperationCompleted, userState);
        }
        
        private void OnSaveAppointmentOperationCompleted(object arg) {
            if ((this.SaveAppointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAppointmentCompleted(this, new SaveAppointmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchDataSetByTimestampAppointment", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchDataSetByTimestampAppointment(System.DateTime modifiedDate, int noOfRecords, bool usePOSID, int posID) {
            object[] results = this.Invoke("FetchDataSetByTimestampAppointment", new object[] {
                        modifiedDate,
                        noOfRecords,
                        usePOSID,
                        posID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchDataSetByTimestampAppointmentAsync(System.DateTime modifiedDate, int noOfRecords, bool usePOSID, int posID) {
            this.FetchDataSetByTimestampAppointmentAsync(modifiedDate, noOfRecords, usePOSID, posID, null);
        }
        
        /// <remarks/>
        public void FetchDataSetByTimestampAppointmentAsync(System.DateTime modifiedDate, int noOfRecords, bool usePOSID, int posID, object userState) {
            if ((this.FetchDataSetByTimestampAppointmentOperationCompleted == null)) {
                this.FetchDataSetByTimestampAppointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchDataSetByTimestampAppointmentOperationCompleted);
            }
            this.InvokeAsync("FetchDataSetByTimestampAppointment", new object[] {
                        modifiedDate,
                        noOfRecords,
                        usePOSID,
                        posID}, this.FetchDataSetByTimestampAppointmentOperationCompleted, userState);
        }
        
        private void OnFetchDataSetByTimestampAppointmentOperationCompleted(object arg) {
            if ((this.FetchDataSetByTimestampAppointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchDataSetByTimestampAppointmentCompleted(this, new FetchDataSetByTimestampAppointmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchDataSetByTimestampSpecialDiscount", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchDataSetByTimestampSpecialDiscount(System.DateTime modifiedDate, int noOfRecords, string outletName) {
            object[] results = this.Invoke("FetchDataSetByTimestampSpecialDiscount", new object[] {
                        modifiedDate,
                        noOfRecords,
                        outletName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchDataSetByTimestampSpecialDiscountAsync(System.DateTime modifiedDate, int noOfRecords, string outletName) {
            this.FetchDataSetByTimestampSpecialDiscountAsync(modifiedDate, noOfRecords, outletName, null);
        }
        
        /// <remarks/>
        public void FetchDataSetByTimestampSpecialDiscountAsync(System.DateTime modifiedDate, int noOfRecords, string outletName, object userState) {
            if ((this.FetchDataSetByTimestampSpecialDiscountOperationCompleted == null)) {
                this.FetchDataSetByTimestampSpecialDiscountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchDataSetByTimestampSpecialDiscountOperationCompleted);
            }
            this.InvokeAsync("FetchDataSetByTimestampSpecialDiscount", new object[] {
                        modifiedDate,
                        noOfRecords,
                        outletName}, this.FetchDataSetByTimestampSpecialDiscountOperationCompleted, userState);
        }
        
        private void OnFetchDataSetByTimestampSpecialDiscountOperationCompleted(object arg) {
            if ((this.FetchDataSetByTimestampSpecialDiscountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchDataSetByTimestampSpecialDiscountCompleted(this, new FetchDataSetByTimestampSpecialDiscountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/SaveInventoryFile", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveInventoryFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] InventoryDS, string movementType, string remark, bool autosave) {
            object[] results = this.Invoke("SaveInventoryFile", new object[] {
                        InventoryDS,
                        movementType,
                        remark,
                        autosave});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveInventoryFileAsync(byte[] InventoryDS, string movementType, string remark, bool autosave) {
            this.SaveInventoryFileAsync(InventoryDS, movementType, remark, autosave, null);
        }
        
        /// <remarks/>
        public void SaveInventoryFileAsync(byte[] InventoryDS, string movementType, string remark, bool autosave, object userState) {
            if ((this.SaveInventoryFileOperationCompleted == null)) {
                this.SaveInventoryFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveInventoryFileOperationCompleted);
            }
            this.InvokeAsync("SaveInventoryFile", new object[] {
                        InventoryDS,
                        movementType,
                        remark,
                        autosave}, this.SaveInventoryFileOperationCompleted, userState);
        }
        
        private void OnSaveInventoryFileOperationCompleted(object arg) {
            if ((this.SaveInventoryFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveInventoryFileCompleted(this, new SaveInventoryFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetInventorySavedFile", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetInventorySavedFile(string ar) {
            object[] results = this.Invoke("GetInventorySavedFile", new object[] {
                        ar});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInventorySavedFileAsync(string ar) {
            this.GetInventorySavedFileAsync(ar, null);
        }
        
        /// <remarks/>
        public void GetInventorySavedFileAsync(string ar, object userState) {
            if ((this.GetInventorySavedFileOperationCompleted == null)) {
                this.GetInventorySavedFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventorySavedFileOperationCompleted);
            }
            this.InvokeAsync("GetInventorySavedFile", new object[] {
                        ar}, this.GetInventorySavedFileOperationCompleted, userState);
        }
        
        private void OnGetInventorySavedFileOperationCompleted(object arg) {
            if ((this.GetInventorySavedFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventorySavedFileCompleted(this, new GetInventorySavedFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/LoadInventoryFromFile", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] LoadInventoryFromFile(string saveName) {
            object[] results = this.Invoke("LoadInventoryFromFile", new object[] {
                        saveName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadInventoryFromFileAsync(string saveName) {
            this.LoadInventoryFromFileAsync(saveName, null);
        }
        
        /// <remarks/>
        public void LoadInventoryFromFileAsync(string saveName, object userState) {
            if ((this.LoadInventoryFromFileOperationCompleted == null)) {
                this.LoadInventoryFromFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadInventoryFromFileOperationCompleted);
            }
            this.InvokeAsync("LoadInventoryFromFile", new object[] {
                        saveName}, this.LoadInventoryFromFileOperationCompleted, userState);
        }
        
        private void OnLoadInventoryFromFileOperationCompleted(object arg) {
            if ((this.LoadInventoryFromFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadInventoryFromFileCompleted(this, new LoadInventoryFromFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/removeSavedFile", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool removeSavedFile(string saveName) {
            object[] results = this.Invoke("removeSavedFile", new object[] {
                        saveName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void removeSavedFileAsync(string saveName) {
            this.removeSavedFileAsync(saveName, null);
        }
        
        /// <remarks/>
        public void removeSavedFileAsync(string saveName, object userState) {
            if ((this.removeSavedFileOperationCompleted == null)) {
                this.removeSavedFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveSavedFileOperationCompleted);
            }
            this.InvokeAsync("removeSavedFile", new object[] {
                        saveName}, this.removeSavedFileOperationCompleted, userState);
        }
        
        private void OnremoveSavedFileOperationCompleted(object arg) {
            if ((this.removeSavedFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeSavedFileCompleted(this, new removeSavedFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetAppointmentLastTimeStamp", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetAppointmentLastTimeStamp(int PointofSaleID, bool IsUpdateServer, out System.DateTime res) {
            object[] results = this.Invoke("GetAppointmentLastTimeStamp", new object[] {
                        PointofSaleID,
                        IsUpdateServer});
            res = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppointmentLastTimeStampAsync(int PointofSaleID, bool IsUpdateServer) {
            this.GetAppointmentLastTimeStampAsync(PointofSaleID, IsUpdateServer, null);
        }
        
        /// <remarks/>
        public void GetAppointmentLastTimeStampAsync(int PointofSaleID, bool IsUpdateServer, object userState) {
            if ((this.GetAppointmentLastTimeStampOperationCompleted == null)) {
                this.GetAppointmentLastTimeStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppointmentLastTimeStampOperationCompleted);
            }
            this.InvokeAsync("GetAppointmentLastTimeStamp", new object[] {
                        PointofSaleID,
                        IsUpdateServer}, this.GetAppointmentLastTimeStampOperationCompleted, userState);
        }
        
        private void OnGetAppointmentLastTimeStampOperationCompleted(object arg) {
            if ((this.GetAppointmentLastTimeStampCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppointmentLastTimeStampCompleted(this, new GetAppointmentLastTimeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UpdateMemberDataWeb", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateMemberDataWeb(System.Data.DataTable data, out string status) {
            object[] results = this.Invoke("UpdateMemberDataWeb", new object[] {
                        data});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberDataWebAsync(System.Data.DataTable data) {
            this.UpdateMemberDataWebAsync(data, null);
        }
        
        /// <remarks/>
        public void UpdateMemberDataWebAsync(System.Data.DataTable data, object userState) {
            if ((this.UpdateMemberDataWebOperationCompleted == null)) {
                this.UpdateMemberDataWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberDataWebOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberDataWeb", new object[] {
                        data}, this.UpdateMemberDataWebOperationCompleted, userState);
        }
        
        private void OnUpdateMemberDataWebOperationCompleted(object arg) {
            if ((this.UpdateMemberDataWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberDataWebCompleted(this, new UpdateMemberDataWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UpdateMemberTagNoWeb", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateMemberTagNoWeb(string MembershipNo, string TagNo, out string status) {
            object[] results = this.Invoke("UpdateMemberTagNoWeb", new object[] {
                        MembershipNo,
                        TagNo});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberTagNoWebAsync(string MembershipNo, string TagNo) {
            this.UpdateMemberTagNoWebAsync(MembershipNo, TagNo, null);
        }
        
        /// <remarks/>
        public void UpdateMemberTagNoWebAsync(string MembershipNo, string TagNo, object userState) {
            if ((this.UpdateMemberTagNoWebOperationCompleted == null)) {
                this.UpdateMemberTagNoWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberTagNoWebOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberTagNoWeb", new object[] {
                        MembershipNo,
                        TagNo}, this.UpdateMemberTagNoWebOperationCompleted, userState);
        }
        
        private void OnUpdateMemberTagNoWebOperationCompleted(object arg) {
            if ((this.UpdateMemberTagNoWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberTagNoWebCompleted(this, new UpdateMemberTagNoWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchOrdersCCMW", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchOrdersCCMW([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsHeaders, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsDetails, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsReceiptHdr, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsReceiptDet) {
            object[] results = this.Invoke("FetchOrdersCCMW", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsReceiptHdr,
                        dsReceiptDet});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchOrdersCCMWAsync(string[][] dsHeaders, string[][] dsDetails, string[][] dsReceiptHdr, string[][] dsReceiptDet) {
            this.FetchOrdersCCMWAsync(dsHeaders, dsDetails, dsReceiptHdr, dsReceiptDet, null);
        }
        
        /// <remarks/>
        public void FetchOrdersCCMWAsync(string[][] dsHeaders, string[][] dsDetails, string[][] dsReceiptHdr, string[][] dsReceiptDet, object userState) {
            if ((this.FetchOrdersCCMWOperationCompleted == null)) {
                this.FetchOrdersCCMWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchOrdersCCMWOperationCompleted);
            }
            this.InvokeAsync("FetchOrdersCCMW", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsReceiptHdr,
                        dsReceiptDet}, this.FetchOrdersCCMWOperationCompleted, userState);
        }
        
        private void OnFetchOrdersCCMWOperationCompleted(object arg) {
            if ((this.FetchOrdersCCMWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchOrdersCCMWCompleted(this, new FetchOrdersCCMWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchOrders", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchOrders(System.Data.DataSet dsHeaders, System.Data.DataSet dsDetails, System.Data.DataSet dsReceiptHdr, System.Data.DataSet dsReceiptDet, System.Data.DataSet dsComm) {
            object[] results = this.Invoke("FetchOrders", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsReceiptHdr,
                        dsReceiptDet,
                        dsComm});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchOrdersAsync(System.Data.DataSet dsHeaders, System.Data.DataSet dsDetails, System.Data.DataSet dsReceiptHdr, System.Data.DataSet dsReceiptDet, System.Data.DataSet dsComm) {
            this.FetchOrdersAsync(dsHeaders, dsDetails, dsReceiptHdr, dsReceiptDet, dsComm, null);
        }
        
        /// <remarks/>
        public void FetchOrdersAsync(System.Data.DataSet dsHeaders, System.Data.DataSet dsDetails, System.Data.DataSet dsReceiptHdr, System.Data.DataSet dsReceiptDet, System.Data.DataSet dsComm, object userState) {
            if ((this.FetchOrdersOperationCompleted == null)) {
                this.FetchOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchOrdersOperationCompleted);
            }
            this.InvokeAsync("FetchOrders", new object[] {
                        dsHeaders,
                        dsDetails,
                        dsReceiptHdr,
                        dsReceiptDet,
                        dsComm}, this.FetchOrdersOperationCompleted, userState);
        }
        
        private void OnFetchOrdersOperationCompleted(object arg) {
            if ((this.FetchOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchOrdersCompleted(this, new FetchOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchNewMembershipSignUps", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchNewMembershipSignUps(System.Data.DataSet dsMember) {
            object[] results = this.Invoke("FetchNewMembershipSignUps", new object[] {
                        dsMember});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchNewMembershipSignUpsAsync(System.Data.DataSet dsMember) {
            this.FetchNewMembershipSignUpsAsync(dsMember, null);
        }
        
        /// <remarks/>
        public void FetchNewMembershipSignUpsAsync(System.Data.DataSet dsMember, object userState) {
            if ((this.FetchNewMembershipSignUpsOperationCompleted == null)) {
                this.FetchNewMembershipSignUpsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchNewMembershipSignUpsOperationCompleted);
            }
            this.InvokeAsync("FetchNewMembershipSignUps", new object[] {
                        dsMember}, this.FetchNewMembershipSignUpsOperationCompleted, userState);
        }
        
        private void OnFetchNewMembershipSignUpsOperationCompleted(object arg) {
            if ((this.FetchNewMembershipSignUpsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchNewMembershipSignUpsCompleted(this, new FetchNewMembershipSignUpsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchInventorys", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchInventorys([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsHeaders, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] dsDetails, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] remainingQty) {
            object[] results = this.Invoke("FetchInventorys", new object[] {
                        dsHeaders,
                        dsDetails,
                        remainingQty});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchInventorysAsync(string[][] dsHeaders, string[][] dsDetails, string[][] remainingQty) {
            this.FetchInventorysAsync(dsHeaders, dsDetails, remainingQty, null);
        }
        
        /// <remarks/>
        public void FetchInventorysAsync(string[][] dsHeaders, string[][] dsDetails, string[][] remainingQty, object userState) {
            if ((this.FetchInventorysOperationCompleted == null)) {
                this.FetchInventorysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchInventorysOperationCompleted);
            }
            this.InvokeAsync("FetchInventorys", new object[] {
                        dsHeaders,
                        dsDetails,
                        remainingQty}, this.FetchInventorysOperationCompleted, userState);
        }
        
        private void OnFetchInventorysOperationCompleted(object arg) {
            if ((this.FetchInventorysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchInventorysCompleted(this, new FetchInventorysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchLogTable", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchLogTable(System.Data.DataSet dsLogTable, string logTableName) {
            object[] results = this.Invoke("FetchLogTable", new object[] {
                        dsLogTable,
                        logTableName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchLogTableAsync(System.Data.DataSet dsLogTable, string logTableName) {
            this.FetchLogTableAsync(dsLogTable, logTableName, null);
        }
        
        /// <remarks/>
        public void FetchLogTableAsync(System.Data.DataSet dsLogTable, string logTableName, object userState) {
            if ((this.FetchLogTableOperationCompleted == null)) {
                this.FetchLogTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchLogTableOperationCompleted);
            }
            this.InvokeAsync("FetchLogTable", new object[] {
                        dsLogTable,
                        logTableName}, this.FetchLogTableOperationCompleted, userState);
        }
        
        private void OnFetchLogTableOperationCompleted(object arg) {
            if ((this.FetchLogTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchLogTableCompleted(this, new FetchLogTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchLogTableWithUpdate", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchLogTableWithUpdate(System.Data.DataSet dsLogTable, string logTableName) {
            object[] results = this.Invoke("FetchLogTableWithUpdate", new object[] {
                        dsLogTable,
                        logTableName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchLogTableWithUpdateAsync(System.Data.DataSet dsLogTable, string logTableName) {
            this.FetchLogTableWithUpdateAsync(dsLogTable, logTableName, null);
        }
        
        /// <remarks/>
        public void FetchLogTableWithUpdateAsync(System.Data.DataSet dsLogTable, string logTableName, object userState) {
            if ((this.FetchLogTableWithUpdateOperationCompleted == null)) {
                this.FetchLogTableWithUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchLogTableWithUpdateOperationCompleted);
            }
            this.InvokeAsync("FetchLogTableWithUpdate", new object[] {
                        dsLogTable,
                        logTableName}, this.FetchLogTableWithUpdateOperationCompleted, userState);
        }
        
        private void OnFetchLogTableWithUpdateOperationCompleted(object arg) {
            if ((this.FetchLogTableWithUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchLogTableWithUpdateCompleted(this, new FetchLogTableWithUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchDeliveryOrder", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchDeliveryOrder(System.Data.DataSet dsData) {
            object[] results = this.Invoke("FetchDeliveryOrder", new object[] {
                        dsData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchDeliveryOrderAsync(System.Data.DataSet dsData) {
            this.FetchDeliveryOrderAsync(dsData, null);
        }
        
        /// <remarks/>
        public void FetchDeliveryOrderAsync(System.Data.DataSet dsData, object userState) {
            if ((this.FetchDeliveryOrderOperationCompleted == null)) {
                this.FetchDeliveryOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchDeliveryOrderOperationCompleted);
            }
            this.InvokeAsync("FetchDeliveryOrder", new object[] {
                        dsData}, this.FetchDeliveryOrderOperationCompleted, userState);
        }
        
        private void OnFetchDeliveryOrderOperationCompleted(object arg) {
            if ((this.FetchDeliveryOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchDeliveryOrderCompleted(this, new FetchDeliveryOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchMemberRemarks", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FetchMemberRemarks(System.Data.DataSet dsMemberTable) {
            object[] results = this.Invoke("FetchMemberRemarks", new object[] {
                        dsMemberTable});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FetchMemberRemarksAsync(System.Data.DataSet dsMemberTable) {
            this.FetchMemberRemarksAsync(dsMemberTable, null);
        }
        
        /// <remarks/>
        public void FetchMemberRemarksAsync(System.Data.DataSet dsMemberTable, object userState) {
            if ((this.FetchMemberRemarksOperationCompleted == null)) {
                this.FetchMemberRemarksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchMemberRemarksOperationCompleted);
            }
            this.InvokeAsync("FetchMemberRemarks", new object[] {
                        dsMemberTable}, this.FetchMemberRemarksOperationCompleted, userState);
        }
        
        private void OnFetchMemberRemarksOperationCompleted(object arg) {
            if ((this.FetchMemberRemarksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchMemberRemarksCompleted(this, new FetchMemberRemarksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UpdateOrderHdrRemark", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateOrderHdrRemark(string OrderHdrID, string Remark) {
            object[] results = this.Invoke("UpdateOrderHdrRemark", new object[] {
                        OrderHdrID,
                        Remark});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrderHdrRemarkAsync(string OrderHdrID, string Remark) {
            this.UpdateOrderHdrRemarkAsync(OrderHdrID, Remark, null);
        }
        
        /// <remarks/>
        public void UpdateOrderHdrRemarkAsync(string OrderHdrID, string Remark, object userState) {
            if ((this.UpdateOrderHdrRemarkOperationCompleted == null)) {
                this.UpdateOrderHdrRemarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderHdrRemarkOperationCompleted);
            }
            this.InvokeAsync("UpdateOrderHdrRemark", new object[] {
                        OrderHdrID,
                        Remark}, this.UpdateOrderHdrRemarkOperationCompleted, userState);
        }
        
        private void OnUpdateOrderHdrRemarkOperationCompleted(object arg) {
            if ((this.UpdateOrderHdrRemarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderHdrRemarkCompleted(this, new UpdateOrderHdrRemarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FreezePOSByPointOfSaleID", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FreezePOSByPointOfSaleID(int PointOfSaleID) {
            object[] results = this.Invoke("FreezePOSByPointOfSaleID", new object[] {
                        PointOfSaleID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FreezePOSByPointOfSaleIDAsync(int PointOfSaleID) {
            this.FreezePOSByPointOfSaleIDAsync(PointOfSaleID, null);
        }
        
        /// <remarks/>
        public void FreezePOSByPointOfSaleIDAsync(int PointOfSaleID, object userState) {
            if ((this.FreezePOSByPointOfSaleIDOperationCompleted == null)) {
                this.FreezePOSByPointOfSaleIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFreezePOSByPointOfSaleIDOperationCompleted);
            }
            this.InvokeAsync("FreezePOSByPointOfSaleID", new object[] {
                        PointOfSaleID}, this.FreezePOSByPointOfSaleIDOperationCompleted, userState);
        }
        
        private void OnFreezePOSByPointOfSaleIDOperationCompleted(object arg) {
            if ((this.FreezePOSByPointOfSaleIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FreezePOSByPointOfSaleIDCompleted(this, new FreezePOSByPointOfSaleIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetDataTable", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataTable(string tableName, bool syncAll) {
            object[] results = this.Invoke("GetDataTable", new object[] {
                        tableName,
                        syncAll});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataTableAsync(string tableName, bool syncAll) {
            this.GetDataTableAsync(tableName, syncAll, null);
        }
        
        /// <remarks/>
        public void GetDataTableAsync(string tableName, bool syncAll, object userState) {
            if ((this.GetDataTableOperationCompleted == null)) {
                this.GetDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataTableOperationCompleted);
            }
            this.InvokeAsync("GetDataTable", new object[] {
                        tableName,
                        syncAll}, this.GetDataTableOperationCompleted, userState);
        }
        
        private void OnGetDataTableOperationCompleted(object arg) {
            if ((this.GetDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataTableCompleted(this, new GetDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetDataTableCompressed", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDataTableCompressed(string tableName, bool syncAll) {
            object[] results = this.Invoke("GetDataTableCompressed", new object[] {
                        tableName,
                        syncAll});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataTableCompressedAsync(string tableName, bool syncAll) {
            this.GetDataTableCompressedAsync(tableName, syncAll, null);
        }
        
        /// <remarks/>
        public void GetDataTableCompressedAsync(string tableName, bool syncAll, object userState) {
            if ((this.GetDataTableCompressedOperationCompleted == null)) {
                this.GetDataTableCompressedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataTableCompressedOperationCompleted);
            }
            this.InvokeAsync("GetDataTableCompressed", new object[] {
                        tableName,
                        syncAll}, this.GetDataTableCompressedOperationCompleted, userState);
        }
        
        private void OnGetDataTableCompressedOperationCompleted(object arg) {
            if ((this.GetDataTableCompressedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataTableCompressedCompleted(this, new GetDataTableCompressedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetOrderHdrList", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetOrderHdrList(System.DateTime startDate, System.DateTime endDate, int PointOfSaleID) {
            object[] results = this.Invoke("GetOrderHdrList", new object[] {
                        startDate,
                        endDate,
                        PointOfSaleID});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderHdrListAsync(System.DateTime startDate, System.DateTime endDate, int PointOfSaleID) {
            this.GetOrderHdrListAsync(startDate, endDate, PointOfSaleID, null);
        }
        
        /// <remarks/>
        public void GetOrderHdrListAsync(System.DateTime startDate, System.DateTime endDate, int PointOfSaleID, object userState) {
            if ((this.GetOrderHdrListOperationCompleted == null)) {
                this.GetOrderHdrListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderHdrListOperationCompleted);
            }
            this.InvokeAsync("GetOrderHdrList", new object[] {
                        startDate,
                        endDate,
                        PointOfSaleID}, this.GetOrderHdrListOperationCompleted, userState);
        }
        
        private void OnGetOrderHdrListOperationCompleted(object arg) {
            if ((this.GetOrderHdrListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderHdrListCompleted(this, new GetOrderHdrListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetOrderHdrListWithoutPOSID", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetOrderHdrListWithoutPOSID(System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetOrderHdrListWithoutPOSID", new object[] {
                        startDate,
                        endDate});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderHdrListWithoutPOSIDAsync(System.DateTime startDate, System.DateTime endDate) {
            this.GetOrderHdrListWithoutPOSIDAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetOrderHdrListWithoutPOSIDAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetOrderHdrListWithoutPOSIDOperationCompleted == null)) {
                this.GetOrderHdrListWithoutPOSIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderHdrListWithoutPOSIDOperationCompleted);
            }
            this.InvokeAsync("GetOrderHdrListWithoutPOSID", new object[] {
                        startDate,
                        endDate}, this.GetOrderHdrListWithoutPOSIDOperationCompleted, userState);
        }
        
        private void OnGetOrderHdrListWithoutPOSIDOperationCompleted(object arg) {
            if ((this.GetOrderHdrListWithoutPOSIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderHdrListWithoutPOSIDCompleted(this, new GetOrderHdrListWithoutPOSIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetInventoryHdrList", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetInventoryHdrList(System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetInventoryHdrList", new object[] {
                        startDate,
                        endDate});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryHdrListAsync(System.DateTime startDate, System.DateTime endDate) {
            this.GetInventoryHdrListAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetInventoryHdrListAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetInventoryHdrListOperationCompleted == null)) {
                this.GetInventoryHdrListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryHdrListOperationCompleted);
            }
            this.InvokeAsync("GetInventoryHdrList", new object[] {
                        startDate,
                        endDate}, this.GetInventoryHdrListOperationCompleted, userState);
        }
        
        private void OnGetInventoryHdrListOperationCompleted(object arg) {
            if ((this.GetInventoryHdrListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryHdrListCompleted(this, new GetInventoryHdrListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchSales", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FetchSales(System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("FetchSales", new object[] {
                        startDate,
                        endDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FetchSalesAsync(System.DateTime startDate, System.DateTime endDate) {
            this.FetchSalesAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void FetchSalesAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.FetchSalesOperationCompleted == null)) {
                this.FetchSalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchSalesOperationCompleted);
            }
            this.InvokeAsync("FetchSales", new object[] {
                        startDate,
                        endDate}, this.FetchSalesOperationCompleted, userState);
        }
        
        private void OnFetchSalesOperationCompleted(object arg) {
            if ((this.FetchSalesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchSalesCompleted(this, new FetchSalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetDataTableCustomCompressed", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDataTableCustomCompressed(string sqlQuery) {
            object[] results = this.Invoke("GetDataTableCustomCompressed", new object[] {
                        sqlQuery});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataTableCustomCompressedAsync(string sqlQuery) {
            this.GetDataTableCustomCompressedAsync(sqlQuery, null);
        }
        
        /// <remarks/>
        public void GetDataTableCustomCompressedAsync(string sqlQuery, object userState) {
            if ((this.GetDataTableCustomCompressedOperationCompleted == null)) {
                this.GetDataTableCustomCompressedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataTableCustomCompressedOperationCompleted);
            }
            this.InvokeAsync("GetDataTableCustomCompressed", new object[] {
                        sqlQuery}, this.GetDataTableCustomCompressedOperationCompleted, userState);
        }
        
        private void OnGetDataTableCustomCompressedOperationCompleted(object arg) {
            if ((this.GetDataTableCustomCompressedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataTableCustomCompressedCompleted(this, new GetDataTableCustomCompressedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetDeliveryOrder", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeliveryOrder(System.DateTime startDate, System.DateTime endDate, int PointOfSaleID) {
            object[] results = this.Invoke("GetDeliveryOrder", new object[] {
                        startDate,
                        endDate,
                        PointOfSaleID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryOrderAsync(System.DateTime startDate, System.DateTime endDate, int PointOfSaleID) {
            this.GetDeliveryOrderAsync(startDate, endDate, PointOfSaleID, null);
        }
        
        /// <remarks/>
        public void GetDeliveryOrderAsync(System.DateTime startDate, System.DateTime endDate, int PointOfSaleID, object userState) {
            if ((this.GetDeliveryOrderOperationCompleted == null)) {
                this.GetDeliveryOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryOrderOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryOrder", new object[] {
                        startDate,
                        endDate,
                        PointOfSaleID}, this.GetDeliveryOrderOperationCompleted, userState);
        }
        
        private void OnGetDeliveryOrderOperationCompleted(object arg) {
            if ((this.GetDeliveryOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryOrderCompleted(this, new GetDeliveryOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetPastTransaction", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPastTransaction(string membershipNo, int rowTotal) {
            object[] results = this.Invoke("GetPastTransaction", new object[] {
                        membershipNo,
                        rowTotal});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPastTransactionAsync(string membershipNo, int rowTotal) {
            this.GetPastTransactionAsync(membershipNo, rowTotal, null);
        }
        
        /// <remarks/>
        public void GetPastTransactionAsync(string membershipNo, int rowTotal, object userState) {
            if ((this.GetPastTransactionOperationCompleted == null)) {
                this.GetPastTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPastTransactionOperationCompleted);
            }
            this.InvokeAsync("GetPastTransaction", new object[] {
                        membershipNo,
                        rowTotal}, this.GetPastTransactionOperationCompleted, userState);
        }
        
        private void OnGetPastTransactionOperationCompleted(object arg) {
            if ((this.GetPastTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPastTransactionCompleted(this, new GetPastTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetPastTransactionWithOutlet", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPastTransactionWithOutlet(string membershipNo, int rowTotal, string OutletName) {
            object[] results = this.Invoke("GetPastTransactionWithOutlet", new object[] {
                        membershipNo,
                        rowTotal,
                        OutletName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPastTransactionWithOutletAsync(string membershipNo, int rowTotal, string OutletName) {
            this.GetPastTransactionWithOutletAsync(membershipNo, rowTotal, OutletName, null);
        }
        
        /// <remarks/>
        public void GetPastTransactionWithOutletAsync(string membershipNo, int rowTotal, string OutletName, object userState) {
            if ((this.GetPastTransactionWithOutletOperationCompleted == null)) {
                this.GetPastTransactionWithOutletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPastTransactionWithOutletOperationCompleted);
            }
            this.InvokeAsync("GetPastTransactionWithOutlet", new object[] {
                        membershipNo,
                        rowTotal,
                        OutletName}, this.GetPastTransactionWithOutletOperationCompleted, userState);
        }
        
        private void OnGetPastTransactionWithOutletOperationCompleted(object arg) {
            if ((this.GetPastTransactionWithOutletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPastTransactionWithOutletCompleted(this, new GetPastTransactionWithOutletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/getPackageList", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getPackageList(string MembershipNo) {
            object[] results = this.Invoke("getPackageList", new object[] {
                        MembershipNo});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getPackageListAsync(string MembershipNo) {
            this.getPackageListAsync(MembershipNo, null);
        }
        
        /// <remarks/>
        public void getPackageListAsync(string MembershipNo, object userState) {
            if ((this.getPackageListOperationCompleted == null)) {
                this.getPackageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPackageListOperationCompleted);
            }
            this.InvokeAsync("getPackageList", new object[] {
                        MembershipNo}, this.getPackageListOperationCompleted, userState);
        }
        
        private void OngetPackageListOperationCompleted(object arg) {
            if ((this.getPackageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPackageListCompleted(this, new getPackageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetHistory_Point", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHistory_Point(string MembershipNo, string PackageName, out System.DateTime StartValidPeriod, out System.DateTime EndValidPeriod, out decimal RemainingPoint) {
            object[] results = this.Invoke("GetHistory_Point", new object[] {
                        MembershipNo,
                        PackageName});
            StartValidPeriod = ((System.DateTime)(results[1]));
            EndValidPeriod = ((System.DateTime)(results[2]));
            RemainingPoint = ((decimal)(results[3]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistory_PointAsync(string MembershipNo, string PackageName) {
            this.GetHistory_PointAsync(MembershipNo, PackageName, null);
        }
        
        /// <remarks/>
        public void GetHistory_PointAsync(string MembershipNo, string PackageName, object userState) {
            if ((this.GetHistory_PointOperationCompleted == null)) {
                this.GetHistory_PointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistory_PointOperationCompleted);
            }
            this.InvokeAsync("GetHistory_Point", new object[] {
                        MembershipNo,
                        PackageName}, this.GetHistory_PointOperationCompleted, userState);
        }
        
        private void OnGetHistory_PointOperationCompleted(object arg) {
            if ((this.GetHistory_PointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistory_PointCompleted(this, new GetHistory_PointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/AllocatePendingPackage", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AllocatePendingPackage() {
            object[] results = this.Invoke("AllocatePendingPackage", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AllocatePendingPackageAsync() {
            this.AllocatePendingPackageAsync(null);
        }
        
        /// <remarks/>
        public void AllocatePendingPackageAsync(object userState) {
            if ((this.AllocatePendingPackageOperationCompleted == null)) {
                this.AllocatePendingPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllocatePendingPackageOperationCompleted);
            }
            this.InvokeAsync("AllocatePendingPackage", new object[0], this.AllocatePendingPackageOperationCompleted, userState);
        }
        
        private void OnAllocatePendingPackageOperationCompleted(object arg) {
            if ((this.AllocatePendingPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllocatePendingPackageCompleted(this, new AllocatePendingPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/AllocatePendingPackageNEW", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AllocatePendingPackageNEW() {
            object[] results = this.Invoke("AllocatePendingPackageNEW", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AllocatePendingPackageNEWAsync() {
            this.AllocatePendingPackageNEWAsync(null);
        }
        
        /// <remarks/>
        public void AllocatePendingPackageNEWAsync(object userState) {
            if ((this.AllocatePendingPackageNEWOperationCompleted == null)) {
                this.AllocatePendingPackageNEWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllocatePendingPackageNEWOperationCompleted);
            }
            this.InvokeAsync("AllocatePendingPackageNEW", new object[0], this.AllocatePendingPackageNEWOperationCompleted, userState);
        }
        
        private void OnAllocatePendingPackageNEWOperationCompleted(object arg) {
            if ((this.AllocatePendingPackageNEWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllocatePendingPackageNEWCompleted(this, new AllocatePendingPackageNEWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/AddPoint", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddPoint(string membershipno, string OrderHdrID, System.DateTime StartValidPeriod, int ValidPeriod, decimal points, string UserName, out string status) {
            object[] results = this.Invoke("AddPoint", new object[] {
                        membershipno,
                        OrderHdrID,
                        StartValidPeriod,
                        ValidPeriod,
                        points,
                        UserName});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddPointAsync(string membershipno, string OrderHdrID, System.DateTime StartValidPeriod, int ValidPeriod, decimal points, string UserName) {
            this.AddPointAsync(membershipno, OrderHdrID, StartValidPeriod, ValidPeriod, points, UserName, null);
        }
        
        /// <remarks/>
        public void AddPointAsync(string membershipno, string OrderHdrID, System.DateTime StartValidPeriod, int ValidPeriod, decimal points, string UserName, object userState) {
            if ((this.AddPointOperationCompleted == null)) {
                this.AddPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPointOperationCompleted);
            }
            this.InvokeAsync("AddPoint", new object[] {
                        membershipno,
                        OrderHdrID,
                        StartValidPeriod,
                        ValidPeriod,
                        points,
                        UserName}, this.AddPointOperationCompleted, userState);
        }
        
        private void OnAddPointOperationCompleted(object arg) {
            if ((this.AddPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPointCompleted(this, new AddPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DeductPoints", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeductPoints(string membershipno, string OrderHdrID, System.DateTime DeductionDate, decimal points, string packageRefNo, string UserName, out string status) {
            object[] results = this.Invoke("DeductPoints", new object[] {
                        membershipno,
                        OrderHdrID,
                        DeductionDate,
                        points,
                        packageRefNo,
                        UserName});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeductPointsAsync(string membershipno, string OrderHdrID, System.DateTime DeductionDate, decimal points, string packageRefNo, string UserName) {
            this.DeductPointsAsync(membershipno, OrderHdrID, DeductionDate, points, packageRefNo, UserName, null);
        }
        
        /// <remarks/>
        public void DeductPointsAsync(string membershipno, string OrderHdrID, System.DateTime DeductionDate, decimal points, string packageRefNo, string UserName, object userState) {
            if ((this.DeductPointsOperationCompleted == null)) {
                this.DeductPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeductPointsOperationCompleted);
            }
            this.InvokeAsync("DeductPoints", new object[] {
                        membershipno,
                        OrderHdrID,
                        DeductionDate,
                        points,
                        packageRefNo,
                        UserName}, this.DeductPointsOperationCompleted, userState);
        }
        
        private void OnDeductPointsOperationCompleted(object arg) {
            if ((this.DeductPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeductPointsCompleted(this, new DeductPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetCurrentPoint", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetCurrentPoint(string membershipNo, System.DateTime CurrentDate, out string status) {
            object[] results = this.Invoke("GetCurrentPoint", new object[] {
                        membershipNo,
                        CurrentDate});
            status = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentPointAsync(string membershipNo, System.DateTime CurrentDate) {
            this.GetCurrentPointAsync(membershipNo, CurrentDate, null);
        }
        
        /// <remarks/>
        public void GetCurrentPointAsync(string membershipNo, System.DateTime CurrentDate, object userState) {
            if ((this.GetCurrentPointOperationCompleted == null)) {
                this.GetCurrentPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentPointOperationCompleted);
            }
            this.InvokeAsync("GetCurrentPoint", new object[] {
                        membershipNo,
                        CurrentDate}, this.GetCurrentPointOperationCompleted, userState);
        }
        
        private void OnGetCurrentPointOperationCompleted(object arg) {
            if ((this.GetCurrentPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentPointCompleted(this, new GetCurrentPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetAllocatedPoint", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetAllocatedPoint(string OrderHdrID) {
            object[] results = this.Invoke("GetAllocatedPoint", new object[] {
                        OrderHdrID});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllocatedPointAsync(string OrderHdrID) {
            this.GetAllocatedPointAsync(OrderHdrID, null);
        }
        
        /// <remarks/>
        public void GetAllocatedPointAsync(string OrderHdrID, object userState) {
            if ((this.GetAllocatedPointOperationCompleted == null)) {
                this.GetAllocatedPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllocatedPointOperationCompleted);
            }
            this.InvokeAsync("GetAllocatedPoint", new object[] {
                        OrderHdrID}, this.GetAllocatedPointOperationCompleted, userState);
        }
        
        private void OnGetAllocatedPointOperationCompleted(object arg) {
            if ((this.GetAllocatedPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllocatedPointCompleted(this, new GetAllocatedPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetCurrentPointsAmount", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetCurrentPointsAmount(string membershipNo, System.DateTime CurrentDate, out System.Data.DataTable Output) {
            object[] results = this.Invoke("GetCurrentPointsAmount", new object[] {
                        membershipNo,
                        CurrentDate});
            Output = ((System.Data.DataTable)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentPointsAmountAsync(string membershipNo, System.DateTime CurrentDate) {
            this.GetCurrentPointsAmountAsync(membershipNo, CurrentDate, null);
        }
        
        /// <remarks/>
        public void GetCurrentPointsAmountAsync(string membershipNo, System.DateTime CurrentDate, object userState) {
            if ((this.GetCurrentPointsAmountOperationCompleted == null)) {
                this.GetCurrentPointsAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentPointsAmountOperationCompleted);
            }
            this.InvokeAsync("GetCurrentPointsAmount", new object[] {
                        membershipNo,
                        CurrentDate}, this.GetCurrentPointsAmountOperationCompleted, userState);
        }
        
        private void OnGetCurrentPointsAmountOperationCompleted(object arg) {
            if ((this.GetCurrentPointsAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentPointsAmountCompleted(this, new GetCurrentPointsAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetPackageBreakdown", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPackageBreakdown(string membershipNo, System.DateTime CurrentDate, string PackageRefNo, out decimal Breakdown, out string Status) {
            object[] results = this.Invoke("GetPackageBreakdown", new object[] {
                        membershipNo,
                        CurrentDate,
                        PackageRefNo});
            Breakdown = ((decimal)(results[1]));
            Status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageBreakdownAsync(string membershipNo, System.DateTime CurrentDate, string PackageRefNo) {
            this.GetPackageBreakdownAsync(membershipNo, CurrentDate, PackageRefNo, null);
        }
        
        /// <remarks/>
        public void GetPackageBreakdownAsync(string membershipNo, System.DateTime CurrentDate, string PackageRefNo, object userState) {
            if ((this.GetPackageBreakdownOperationCompleted == null)) {
                this.GetPackageBreakdownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageBreakdownOperationCompleted);
            }
            this.InvokeAsync("GetPackageBreakdown", new object[] {
                        membershipNo,
                        CurrentDate,
                        PackageRefNo}, this.GetPackageBreakdownOperationCompleted, userState);
        }
        
        private void OnGetPackageBreakdownOperationCompleted(object arg) {
            if ((this.GetPackageBreakdownCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageBreakdownCompleted(this, new GetPackageBreakdownCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetPackageAmount_plusBreakdown", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPackageAmount_plusBreakdown(string membershipNo, System.DateTime CurrentDate, string PackageRefNo, out decimal Amount, out decimal Breakdown, out string Status) {
            object[] results = this.Invoke("GetPackageAmount_plusBreakdown", new object[] {
                        membershipNo,
                        CurrentDate,
                        PackageRefNo});
            Amount = ((decimal)(results[1]));
            Breakdown = ((decimal)(results[2]));
            Status = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageAmount_plusBreakdownAsync(string membershipNo, System.DateTime CurrentDate, string PackageRefNo) {
            this.GetPackageAmount_plusBreakdownAsync(membershipNo, CurrentDate, PackageRefNo, null);
        }
        
        /// <remarks/>
        public void GetPackageAmount_plusBreakdownAsync(string membershipNo, System.DateTime CurrentDate, string PackageRefNo, object userState) {
            if ((this.GetPackageAmount_plusBreakdownOperationCompleted == null)) {
                this.GetPackageAmount_plusBreakdownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageAmount_plusBreakdownOperationCompleted);
            }
            this.InvokeAsync("GetPackageAmount_plusBreakdown", new object[] {
                        membershipNo,
                        CurrentDate,
                        PackageRefNo}, this.GetPackageAmount_plusBreakdownOperationCompleted, userState);
        }
        
        private void OnGetPackageAmount_plusBreakdownOperationCompleted(object arg) {
            if ((this.GetPackageAmount_plusBreakdownCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageAmount_plusBreakdownCompleted(this, new GetPackageAmount_plusBreakdownCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetPackageAmount", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPackageAmount(string membershipNo, System.DateTime CurrentDate, string PackageRefNo, out decimal Output, out string Status) {
            object[] results = this.Invoke("GetPackageAmount", new object[] {
                        membershipNo,
                        CurrentDate,
                        PackageRefNo});
            Output = ((decimal)(results[1]));
            Status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageAmountAsync(string membershipNo, System.DateTime CurrentDate, string PackageRefNo) {
            this.GetPackageAmountAsync(membershipNo, CurrentDate, PackageRefNo, null);
        }
        
        /// <remarks/>
        public void GetPackageAmountAsync(string membershipNo, System.DateTime CurrentDate, string PackageRefNo, object userState) {
            if ((this.GetPackageAmountOperationCompleted == null)) {
                this.GetPackageAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageAmountOperationCompleted);
            }
            this.InvokeAsync("GetPackageAmount", new object[] {
                        membershipNo,
                        CurrentDate,
                        PackageRefNo}, this.GetPackageAmountOperationCompleted, userState);
        }
        
        private void OnGetPackageAmountOperationCompleted(object arg) {
            if ((this.GetPackageAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageAmountCompleted(this, new GetPackageAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetPackageAmounts", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPackageAmounts(string membershipNo, System.DateTime CurrentDate, out System.Data.DataTable Output, out string Status) {
            object[] results = this.Invoke("GetPackageAmounts", new object[] {
                        membershipNo,
                        CurrentDate});
            Output = ((System.Data.DataTable)(results[1]));
            Status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageAmountsAsync(string membershipNo, System.DateTime CurrentDate) {
            this.GetPackageAmountsAsync(membershipNo, CurrentDate, null);
        }
        
        /// <remarks/>
        public void GetPackageAmountsAsync(string membershipNo, System.DateTime CurrentDate, object userState) {
            if ((this.GetPackageAmountsOperationCompleted == null)) {
                this.GetPackageAmountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageAmountsOperationCompleted);
            }
            this.InvokeAsync("GetPackageAmounts", new object[] {
                        membershipNo,
                        CurrentDate}, this.GetPackageAmountsOperationCompleted, userState);
        }
        
        private void OnGetPackageAmountsOperationCompleted(object arg) {
            if ((this.GetPackageAmountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageAmountsCompleted(this, new GetPackageAmountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UpdateAll", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateAll(System.Data.DataTable PointData, string OrderHdrID, System.DateTime TransactionDate, int ValidPeriods, string MembershipNo, string SalesPersonID, string UserName, out decimal InitialPoint, out decimal DiffPoint, out string Status) {
            object[] results = this.Invoke("UpdateAll", new object[] {
                        PointData,
                        OrderHdrID,
                        TransactionDate,
                        ValidPeriods,
                        MembershipNo,
                        SalesPersonID,
                        UserName});
            InitialPoint = ((decimal)(results[1]));
            DiffPoint = ((decimal)(results[2]));
            Status = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAllAsync(System.Data.DataTable PointData, string OrderHdrID, System.DateTime TransactionDate, int ValidPeriods, string MembershipNo, string SalesPersonID, string UserName) {
            this.UpdateAllAsync(PointData, OrderHdrID, TransactionDate, ValidPeriods, MembershipNo, SalesPersonID, UserName, null);
        }
        
        /// <remarks/>
        public void UpdateAllAsync(System.Data.DataTable PointData, string OrderHdrID, System.DateTime TransactionDate, int ValidPeriods, string MembershipNo, string SalesPersonID, string UserName, object userState) {
            if ((this.UpdateAllOperationCompleted == null)) {
                this.UpdateAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAllOperationCompleted);
            }
            this.InvokeAsync("UpdateAll", new object[] {
                        PointData,
                        OrderHdrID,
                        TransactionDate,
                        ValidPeriods,
                        MembershipNo,
                        SalesPersonID,
                        UserName}, this.UpdateAllOperationCompleted, userState);
        }
        
        private void OnUpdateAllOperationCompleted(object arg) {
            if ((this.UpdateAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAllCompleted(this, new UpdateAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/RevertPoints", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RevertPoints(string OrderHdrID, System.DateTime TransactionDate, string MembershipNo, string SalesPersonID, string UserName, out string Status) {
            object[] results = this.Invoke("RevertPoints", new object[] {
                        OrderHdrID,
                        TransactionDate,
                        MembershipNo,
                        SalesPersonID,
                        UserName});
            Status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RevertPointsAsync(string OrderHdrID, System.DateTime TransactionDate, string MembershipNo, string SalesPersonID, string UserName) {
            this.RevertPointsAsync(OrderHdrID, TransactionDate, MembershipNo, SalesPersonID, UserName, null);
        }
        
        /// <remarks/>
        public void RevertPointsAsync(string OrderHdrID, System.DateTime TransactionDate, string MembershipNo, string SalesPersonID, string UserName, object userState) {
            if ((this.RevertPointsOperationCompleted == null)) {
                this.RevertPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRevertPointsOperationCompleted);
            }
            this.InvokeAsync("RevertPoints", new object[] {
                        OrderHdrID,
                        TransactionDate,
                        MembershipNo,
                        SalesPersonID,
                        UserName}, this.RevertPointsOperationCompleted, userState);
        }
        
        private void OnRevertPointsOperationCompleted(object arg) {
            if ((this.RevertPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RevertPointsCompleted(this, new RevertPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/UpdMembershipPackage", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdMembershipPackage(decimal GetPoint, decimal BreakDownPrice, string ItemNo, out decimal Breakdown, out string Status) {
            object[] results = this.Invoke("UpdMembershipPackage", new object[] {
                        GetPoint,
                        BreakDownPrice,
                        ItemNo});
            Breakdown = ((decimal)(results[1]));
            Status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdMembershipPackageAsync(decimal GetPoint, decimal BreakDownPrice, string ItemNo) {
            this.UpdMembershipPackageAsync(GetPoint, BreakDownPrice, ItemNo, null);
        }
        
        /// <remarks/>
        public void UpdMembershipPackageAsync(decimal GetPoint, decimal BreakDownPrice, string ItemNo, object userState) {
            if ((this.UpdMembershipPackageOperationCompleted == null)) {
                this.UpdMembershipPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdMembershipPackageOperationCompleted);
            }
            this.InvokeAsync("UpdMembershipPackage", new object[] {
                        GetPoint,
                        BreakDownPrice,
                        ItemNo}, this.UpdMembershipPackageOperationCompleted, userState);
        }
        
        private void OnUpdMembershipPackageOperationCompleted(object arg) {
            if ((this.UpdMembershipPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdMembershipPackageCompleted(this, new UpdMembershipPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetInstallmentListByCustomer", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInstallmentListByCustomer(string MembershipNo, bool ShowOutstandingOnly, out string status) {
            object[] results = this.Invoke("GetInstallmentListByCustomer", new object[] {
                        MembershipNo,
                        ShowOutstandingOnly});
            status = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstallmentListByCustomerAsync(string MembershipNo, bool ShowOutstandingOnly) {
            this.GetInstallmentListByCustomerAsync(MembershipNo, ShowOutstandingOnly, null);
        }
        
        /// <remarks/>
        public void GetInstallmentListByCustomerAsync(string MembershipNo, bool ShowOutstandingOnly, object userState) {
            if ((this.GetInstallmentListByCustomerOperationCompleted == null)) {
                this.GetInstallmentListByCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstallmentListByCustomerOperationCompleted);
            }
            this.InvokeAsync("GetInstallmentListByCustomer", new object[] {
                        MembershipNo,
                        ShowOutstandingOnly}, this.GetInstallmentListByCustomerOperationCompleted, userState);
        }
        
        private void OnGetInstallmentListByCustomerOperationCompleted(object arg) {
            if ((this.GetInstallmentListByCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstallmentListByCustomerCompleted(this, new GetInstallmentListByCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetInstallmentDetailByOrderHdrID", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInstallmentDetailByOrderHdrID(string MembershipNo, string OrderHdrID, bool ShowAllTransactions, out string status) {
            object[] results = this.Invoke("GetInstallmentDetailByOrderHdrID", new object[] {
                        MembershipNo,
                        OrderHdrID,
                        ShowAllTransactions});
            status = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstallmentDetailByOrderHdrIDAsync(string MembershipNo, string OrderHdrID, bool ShowAllTransactions) {
            this.GetInstallmentDetailByOrderHdrIDAsync(MembershipNo, OrderHdrID, ShowAllTransactions, null);
        }
        
        /// <remarks/>
        public void GetInstallmentDetailByOrderHdrIDAsync(string MembershipNo, string OrderHdrID, bool ShowAllTransactions, object userState) {
            if ((this.GetInstallmentDetailByOrderHdrIDOperationCompleted == null)) {
                this.GetInstallmentDetailByOrderHdrIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstallmentDetailByOrderHdrIDOperationCompleted);
            }
            this.InvokeAsync("GetInstallmentDetailByOrderHdrID", new object[] {
                        MembershipNo,
                        OrderHdrID,
                        ShowAllTransactions}, this.GetInstallmentDetailByOrderHdrIDOperationCompleted, userState);
        }
        
        private void OnGetInstallmentDetailByOrderHdrIDOperationCompleted(object arg) {
            if ((this.GetInstallmentDetailByOrderHdrIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstallmentDetailByOrderHdrIDCompleted(this, new GetInstallmentDetailByOrderHdrIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/CheckSerialNoIsExist", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckSerialNoIsExist(ItemTagModel[] input, out string message) {
            object[] results = this.Invoke("CheckSerialNoIsExist", new object[] {
                        input});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSerialNoIsExistAsync(ItemTagModel[] input) {
            this.CheckSerialNoIsExistAsync(input, null);
        }
        
        /// <remarks/>
        public void CheckSerialNoIsExistAsync(ItemTagModel[] input, object userState) {
            if ((this.CheckSerialNoIsExistOperationCompleted == null)) {
                this.CheckSerialNoIsExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSerialNoIsExistOperationCompleted);
            }
            this.InvokeAsync("CheckSerialNoIsExist", new object[] {
                        input}, this.CheckSerialNoIsExistOperationCompleted, userState);
        }
        
        private void OnCheckSerialNoIsExistOperationCompleted(object arg) {
            if ((this.CheckSerialNoIsExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSerialNoIsExistCompleted(this, new CheckSerialNoIsExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/CheckSerialNoIsNotExist", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckSerialNoIsNotExist(ItemTagModel[] input, out string message) {
            object[] results = this.Invoke("CheckSerialNoIsNotExist", new object[] {
                        input});
            message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSerialNoIsNotExistAsync(ItemTagModel[] input) {
            this.CheckSerialNoIsNotExistAsync(input, null);
        }
        
        /// <remarks/>
        public void CheckSerialNoIsNotExistAsync(ItemTagModel[] input, object userState) {
            if ((this.CheckSerialNoIsNotExistOperationCompleted == null)) {
                this.CheckSerialNoIsNotExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSerialNoIsNotExistOperationCompleted);
            }
            this.InvokeAsync("CheckSerialNoIsNotExist", new object[] {
                        input}, this.CheckSerialNoIsNotExistOperationCompleted, userState);
        }
        
        private void OnCheckSerialNoIsNotExistOperationCompleted(object arg) {
            if ((this.CheckSerialNoIsNotExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSerialNoIsNotExistCompleted(this, new CheckSerialNoIsNotExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetStockQuantity", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InventoryItem[] GetStockQuantity(int InventoryLocation) {
            object[] results = this.Invoke("GetStockQuantity", new object[] {
                        InventoryLocation});
            return ((InventoryItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStockQuantityAsync(int InventoryLocation) {
            this.GetStockQuantityAsync(InventoryLocation, null);
        }
        
        /// <remarks/>
        public void GetStockQuantityAsync(int InventoryLocation, object userState) {
            if ((this.GetStockQuantityOperationCompleted == null)) {
                this.GetStockQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockQuantityOperationCompleted);
            }
            this.InvokeAsync("GetStockQuantity", new object[] {
                        InventoryLocation}, this.GetStockQuantityOperationCompleted, userState);
        }
        
        private void OnGetStockQuantityOperationCompleted(object arg) {
            if ((this.GetStockQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockQuantityCompleted(this, new GetStockQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetStockQuantityByItem", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStockQuantityByItem(int InventoryLocation, string ItemNo) {
            object[] results = this.Invoke("GetStockQuantityByItem", new object[] {
                        InventoryLocation,
                        ItemNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockQuantityByItemAsync(int InventoryLocation, string ItemNo) {
            this.GetStockQuantityByItemAsync(InventoryLocation, ItemNo, null);
        }
        
        /// <remarks/>
        public void GetStockQuantityByItemAsync(int InventoryLocation, string ItemNo, object userState) {
            if ((this.GetStockQuantityByItemOperationCompleted == null)) {
                this.GetStockQuantityByItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockQuantityByItemOperationCompleted);
            }
            this.InvokeAsync("GetStockQuantityByItem", new object[] {
                        InventoryLocation,
                        ItemNo}, this.GetStockQuantityByItemOperationCompleted, userState);
        }
        
        private void OnGetStockQuantityByItemOperationCompleted(object arg) {
            if ((this.GetStockQuantityByItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockQuantityByItemCompleted(this, new GetStockQuantityByItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/TransferOutAutoReceiveCompressed", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TransferOutAutoReceiveCompressed([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string username, int FromInventoryLocationID, int ToInventoryLocationID, out string newRefNo, out string status) {
            object[] results = this.Invoke("TransferOutAutoReceiveCompressed", new object[] {
                        data,
                        username,
                        FromInventoryLocationID,
                        ToInventoryLocationID});
            newRefNo = ((string)(results[1]));
            status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TransferOutAutoReceiveCompressedAsync(byte[] data, string username, int FromInventoryLocationID, int ToInventoryLocationID) {
            this.TransferOutAutoReceiveCompressedAsync(data, username, FromInventoryLocationID, ToInventoryLocationID, null);
        }
        
        /// <remarks/>
        public void TransferOutAutoReceiveCompressedAsync(byte[] data, string username, int FromInventoryLocationID, int ToInventoryLocationID, object userState) {
            if ((this.TransferOutAutoReceiveCompressedOperationCompleted == null)) {
                this.TransferOutAutoReceiveCompressedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOutAutoReceiveCompressedOperationCompleted);
            }
            this.InvokeAsync("TransferOutAutoReceiveCompressed", new object[] {
                        data,
                        username,
                        FromInventoryLocationID,
                        ToInventoryLocationID}, this.TransferOutAutoReceiveCompressedOperationCompleted, userState);
        }
        
        private void OnTransferOutAutoReceiveCompressedOperationCompleted(object arg) {
            if ((this.TransferOutAutoReceiveCompressedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferOutAutoReceiveCompressedCompleted(this, new TransferOutAutoReceiveCompressedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/TransferOutAutoReceive", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TransferOutAutoReceive(System.Data.DataTable hdr, System.Data.DataTable det, string username, int FromInventoryLocationID, int ToInventoryLocationID, out string newRefNo, out string status) {
            object[] results = this.Invoke("TransferOutAutoReceive", new object[] {
                        hdr,
                        det,
                        username,
                        FromInventoryLocationID,
                        ToInventoryLocationID});
            newRefNo = ((string)(results[1]));
            status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TransferOutAutoReceiveAsync(System.Data.DataTable hdr, System.Data.DataTable det, string username, int FromInventoryLocationID, int ToInventoryLocationID) {
            this.TransferOutAutoReceiveAsync(hdr, det, username, FromInventoryLocationID, ToInventoryLocationID, null);
        }
        
        /// <remarks/>
        public void TransferOutAutoReceiveAsync(System.Data.DataTable hdr, System.Data.DataTable det, string username, int FromInventoryLocationID, int ToInventoryLocationID, object userState) {
            if ((this.TransferOutAutoReceiveOperationCompleted == null)) {
                this.TransferOutAutoReceiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOutAutoReceiveOperationCompleted);
            }
            this.InvokeAsync("TransferOutAutoReceive", new object[] {
                        hdr,
                        det,
                        username,
                        FromInventoryLocationID,
                        ToInventoryLocationID}, this.TransferOutAutoReceiveOperationCompleted, userState);
        }
        
        private void OnTransferOutAutoReceiveOperationCompleted(object arg) {
            if ((this.TransferOutAutoReceiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferOutAutoReceiveCompleted(this, new TransferOutAutoReceiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/StockOutCompressed", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StockOutCompressed([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool deductRemainingQty, out string newRefNo, out string status) {
            object[] results = this.Invoke("StockOutCompressed", new object[] {
                        data,
                        username,
                        StockOutReasonID,
                        InventoryLocationID,
                        IsAdjustment,
                        deductRemainingQty});
            newRefNo = ((string)(results[1]));
            status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StockOutCompressedAsync(byte[] data, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool deductRemainingQty) {
            this.StockOutCompressedAsync(data, username, StockOutReasonID, InventoryLocationID, IsAdjustment, deductRemainingQty, null);
        }
        
        /// <remarks/>
        public void StockOutCompressedAsync(byte[] data, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool deductRemainingQty, object userState) {
            if ((this.StockOutCompressedOperationCompleted == null)) {
                this.StockOutCompressedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockOutCompressedOperationCompleted);
            }
            this.InvokeAsync("StockOutCompressed", new object[] {
                        data,
                        username,
                        StockOutReasonID,
                        InventoryLocationID,
                        IsAdjustment,
                        deductRemainingQty}, this.StockOutCompressedOperationCompleted, userState);
        }
        
        private void OnStockOutCompressedOperationCompleted(object arg) {
            if ((this.StockOutCompressedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StockOutCompressedCompleted(this, new StockOutCompressedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/StockOut", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StockOut(System.Data.DataTable hdr, System.Data.DataTable det, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool deductRemainingQty, out string newRefNo, out string status) {
            object[] results = this.Invoke("StockOut", new object[] {
                        hdr,
                        det,
                        username,
                        StockOutReasonID,
                        InventoryLocationID,
                        IsAdjustment,
                        deductRemainingQty});
            newRefNo = ((string)(results[1]));
            status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StockOutAsync(System.Data.DataTable hdr, System.Data.DataTable det, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool deductRemainingQty) {
            this.StockOutAsync(hdr, det, username, StockOutReasonID, InventoryLocationID, IsAdjustment, deductRemainingQty, null);
        }
        
        /// <remarks/>
        public void StockOutAsync(System.Data.DataTable hdr, System.Data.DataTable det, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool deductRemainingQty, object userState) {
            if ((this.StockOutOperationCompleted == null)) {
                this.StockOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockOutOperationCompleted);
            }
            this.InvokeAsync("StockOut", new object[] {
                        hdr,
                        det,
                        username,
                        StockOutReasonID,
                        InventoryLocationID,
                        IsAdjustment,
                        deductRemainingQty}, this.StockOutOperationCompleted, userState);
        }
        
        private void OnStockOutOperationCompleted(object arg) {
            if ((this.StockOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StockOutCompleted(this, new StockOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/StockOutItem", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StockOutItem(string itemno, int quantity, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool deductRemainingQty, out string newRefNo, out string status) {
            object[] results = this.Invoke("StockOutItem", new object[] {
                        itemno,
                        quantity,
                        username,
                        StockOutReasonID,
                        InventoryLocationID,
                        IsAdjustment,
                        deductRemainingQty});
            newRefNo = ((string)(results[1]));
            status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StockOutItemAsync(string itemno, int quantity, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool deductRemainingQty) {
            this.StockOutItemAsync(itemno, quantity, username, StockOutReasonID, InventoryLocationID, IsAdjustment, deductRemainingQty, null);
        }
        
        /// <remarks/>
        public void StockOutItemAsync(string itemno, int quantity, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool deductRemainingQty, object userState) {
            if ((this.StockOutItemOperationCompleted == null)) {
                this.StockOutItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockOutItemOperationCompleted);
            }
            this.InvokeAsync("StockOutItem", new object[] {
                        itemno,
                        quantity,
                        username,
                        StockOutReasonID,
                        InventoryLocationID,
                        IsAdjustment,
                        deductRemainingQty}, this.StockOutItemOperationCompleted, userState);
        }
        
        private void OnStockOutItemOperationCompleted(object arg) {
            if ((this.StockOutItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StockOutItemCompleted(this, new StockOutItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/StockInCompressed", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StockInCompressed([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string username, int InventoryLocationID, bool IsAdjustment, bool CalculateCOGS, out string newRefNo, out string customRefNo, out string status) {
            object[] results = this.Invoke("StockInCompressed", new object[] {
                        data,
                        username,
                        InventoryLocationID,
                        IsAdjustment,
                        CalculateCOGS});
            newRefNo = ((string)(results[1]));
            customRefNo = ((string)(results[2]));
            status = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StockInCompressedAsync(byte[] data, string username, int InventoryLocationID, bool IsAdjustment, bool CalculateCOGS) {
            this.StockInCompressedAsync(data, username, InventoryLocationID, IsAdjustment, CalculateCOGS, null);
        }
        
        /// <remarks/>
        public void StockInCompressedAsync(byte[] data, string username, int InventoryLocationID, bool IsAdjustment, bool CalculateCOGS, object userState) {
            if ((this.StockInCompressedOperationCompleted == null)) {
                this.StockInCompressedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockInCompressedOperationCompleted);
            }
            this.InvokeAsync("StockInCompressed", new object[] {
                        data,
                        username,
                        InventoryLocationID,
                        IsAdjustment,
                        CalculateCOGS}, this.StockInCompressedOperationCompleted, userState);
        }
        
        private void OnStockInCompressedOperationCompleted(object arg) {
            if ((this.StockInCompressedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StockInCompressedCompleted(this, new StockInCompressedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/StockIn", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StockIn(System.Data.DataTable hdr, System.Data.DataTable det, string username, int InventoryLocationID, bool IsAdjustment, bool CalculateCOGS, out string newRefNo, out string status) {
            object[] results = this.Invoke("StockIn", new object[] {
                        hdr,
                        det,
                        username,
                        InventoryLocationID,
                        IsAdjustment,
                        CalculateCOGS});
            newRefNo = ((string)(results[1]));
            status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StockInAsync(System.Data.DataTable hdr, System.Data.DataTable det, string username, int InventoryLocationID, bool IsAdjustment, bool CalculateCOGS) {
            this.StockInAsync(hdr, det, username, InventoryLocationID, IsAdjustment, CalculateCOGS, null);
        }
        
        /// <remarks/>
        public void StockInAsync(System.Data.DataTable hdr, System.Data.DataTable det, string username, int InventoryLocationID, bool IsAdjustment, bool CalculateCOGS, object userState) {
            if ((this.StockInOperationCompleted == null)) {
                this.StockInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockInOperationCompleted);
            }
            this.InvokeAsync("StockIn", new object[] {
                        hdr,
                        det,
                        username,
                        InventoryLocationID,
                        IsAdjustment,
                        CalculateCOGS}, this.StockInOperationCompleted, userState);
        }
        
        private void OnStockInOperationCompleted(object arg) {
            if ((this.StockInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StockInCompleted(this, new StockInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/StockReturnCompressed", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StockReturnCompressed([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool CalculateCOGS, out string newRefNo, out string status) {
            object[] results = this.Invoke("StockReturnCompressed", new object[] {
                        data,
                        username,
                        StockOutReasonID,
                        InventoryLocationID,
                        IsAdjustment,
                        CalculateCOGS});
            newRefNo = ((string)(results[1]));
            status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StockReturnCompressedAsync(byte[] data, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool CalculateCOGS) {
            this.StockReturnCompressedAsync(data, username, StockOutReasonID, InventoryLocationID, IsAdjustment, CalculateCOGS, null);
        }
        
        /// <remarks/>
        public void StockReturnCompressedAsync(byte[] data, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool CalculateCOGS, object userState) {
            if ((this.StockReturnCompressedOperationCompleted == null)) {
                this.StockReturnCompressedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockReturnCompressedOperationCompleted);
            }
            this.InvokeAsync("StockReturnCompressed", new object[] {
                        data,
                        username,
                        StockOutReasonID,
                        InventoryLocationID,
                        IsAdjustment,
                        CalculateCOGS}, this.StockReturnCompressedOperationCompleted, userState);
        }
        
        private void OnStockReturnCompressedOperationCompleted(object arg) {
            if ((this.StockReturnCompressedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StockReturnCompressedCompleted(this, new StockReturnCompressedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/StockReturn", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StockReturn(System.Data.DataTable hdr, System.Data.DataTable det, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool CalculateCOGS, out string newRefNo, out string status) {
            object[] results = this.Invoke("StockReturn", new object[] {
                        hdr,
                        det,
                        username,
                        StockOutReasonID,
                        InventoryLocationID,
                        IsAdjustment,
                        CalculateCOGS});
            newRefNo = ((string)(results[1]));
            status = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StockReturnAsync(System.Data.DataTable hdr, System.Data.DataTable det, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool CalculateCOGS) {
            this.StockReturnAsync(hdr, det, username, StockOutReasonID, InventoryLocationID, IsAdjustment, CalculateCOGS, null);
        }
        
        /// <remarks/>
        public void StockReturnAsync(System.Data.DataTable hdr, System.Data.DataTable det, string username, int StockOutReasonID, int InventoryLocationID, bool IsAdjustment, bool CalculateCOGS, object userState) {
            if ((this.StockReturnOperationCompleted == null)) {
                this.StockReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockReturnOperationCompleted);
            }
            this.InvokeAsync("StockReturn", new object[] {
                        hdr,
                        det,
                        username,
                        StockOutReasonID,
                        InventoryLocationID,
                        IsAdjustment,
                        CalculateCOGS}, this.StockReturnOperationCompleted, userState);
        }
        
        private void OnStockReturnOperationCompleted(object arg) {
            if ((this.StockReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StockReturnCompleted(this, new StockReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/CreateStockTakeEntries", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateStockTakeEntries(System.Data.DataTable hdr, System.Data.DataTable det, string username, string takenBy, string verifiedBy, out string status) {
            object[] results = this.Invoke("CreateStockTakeEntries", new object[] {
                        hdr,
                        det,
                        username,
                        takenBy,
                        verifiedBy});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStockTakeEntriesAsync(System.Data.DataTable hdr, System.Data.DataTable det, string username, string takenBy, string verifiedBy) {
            this.CreateStockTakeEntriesAsync(hdr, det, username, takenBy, verifiedBy, null);
        }
        
        /// <remarks/>
        public void CreateStockTakeEntriesAsync(System.Data.DataTable hdr, System.Data.DataTable det, string username, string takenBy, string verifiedBy, object userState) {
            if ((this.CreateStockTakeEntriesOperationCompleted == null)) {
                this.CreateStockTakeEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStockTakeEntriesOperationCompleted);
            }
            this.InvokeAsync("CreateStockTakeEntries", new object[] {
                        hdr,
                        det,
                        username,
                        takenBy,
                        verifiedBy}, this.CreateStockTakeEntriesOperationCompleted, userState);
        }
        
        private void OnCreateStockTakeEntriesOperationCompleted(object arg) {
            if ((this.CreateStockTakeEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStockTakeEntriesCompleted(this, new CreateStockTakeEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/CreateStockTakeEntriesCompressed", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateStockTakeEntriesCompressed([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string username, string takenBy, string verifiedBy, out string status) {
            object[] results = this.Invoke("CreateStockTakeEntriesCompressed", new object[] {
                        data,
                        username,
                        takenBy,
                        verifiedBy});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStockTakeEntriesCompressedAsync(byte[] data, string username, string takenBy, string verifiedBy) {
            this.CreateStockTakeEntriesCompressedAsync(data, username, takenBy, verifiedBy, null);
        }
        
        /// <remarks/>
        public void CreateStockTakeEntriesCompressedAsync(byte[] data, string username, string takenBy, string verifiedBy, object userState) {
            if ((this.CreateStockTakeEntriesCompressedOperationCompleted == null)) {
                this.CreateStockTakeEntriesCompressedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStockTakeEntriesCompressedOperationCompleted);
            }
            this.InvokeAsync("CreateStockTakeEntriesCompressed", new object[] {
                        data,
                        username,
                        takenBy,
                        verifiedBy}, this.CreateStockTakeEntriesCompressedOperationCompleted, userState);
        }
        
        private void OnCreateStockTakeEntriesCompressedOperationCompleted(object arg) {
            if ((this.CreateStockTakeEntriesCompressedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStockTakeEntriesCompressedCompleted(this, new CreateStockTakeEntriesCompressedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/AdjustStockTakeDiscrepancy", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AdjustStockTakeDiscrepancy(string username, object[] markedList, int locationID) {
            object[] results = this.Invoke("AdjustStockTakeDiscrepancy", new object[] {
                        username,
                        markedList,
                        locationID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustStockTakeDiscrepancyAsync(string username, object[] markedList, int locationID) {
            this.AdjustStockTakeDiscrepancyAsync(username, markedList, locationID, null);
        }
        
        /// <remarks/>
        public void AdjustStockTakeDiscrepancyAsync(string username, object[] markedList, int locationID, object userState) {
            if ((this.AdjustStockTakeDiscrepancyOperationCompleted == null)) {
                this.AdjustStockTakeDiscrepancyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustStockTakeDiscrepancyOperationCompleted);
            }
            this.InvokeAsync("AdjustStockTakeDiscrepancy", new object[] {
                        username,
                        markedList,
                        locationID}, this.AdjustStockTakeDiscrepancyOperationCompleted, userState);
        }
        
        private void OnAdjustStockTakeDiscrepancyOperationCompleted(object arg) {
            if ((this.AdjustStockTakeDiscrepancyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustStockTakeDiscrepancyCompleted(this, new AdjustStockTakeDiscrepancyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/AdjustStockTakeDiscrepancyNew", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AdjustStockTakeDiscrepancyNew(string username, string markedList, int locationID, out string status) {
            object[] results = this.Invoke("AdjustStockTakeDiscrepancyNew", new object[] {
                        username,
                        markedList,
                        locationID});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AdjustStockTakeDiscrepancyNewAsync(string username, string markedList, int locationID) {
            this.AdjustStockTakeDiscrepancyNewAsync(username, markedList, locationID, null);
        }
        
        /// <remarks/>
        public void AdjustStockTakeDiscrepancyNewAsync(string username, string markedList, int locationID, object userState) {
            if ((this.AdjustStockTakeDiscrepancyNewOperationCompleted == null)) {
                this.AdjustStockTakeDiscrepancyNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustStockTakeDiscrepancyNewOperationCompleted);
            }
            this.InvokeAsync("AdjustStockTakeDiscrepancyNew", new object[] {
                        username,
                        markedList,
                        locationID}, this.AdjustStockTakeDiscrepancyNewOperationCompleted, userState);
        }
        
        private void OnAdjustStockTakeDiscrepancyNewOperationCompleted(object arg) {
            if ((this.AdjustStockTakeDiscrepancyNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustStockTakeDiscrepancyNewCompleted(this, new AdjustStockTakeDiscrepancyNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/CorrectStockTakeDiscrepancy", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CorrectStockTakeDiscrepancy(string username, int locationID, out string status) {
            object[] results = this.Invoke("CorrectStockTakeDiscrepancy", new object[] {
                        username,
                        locationID});
            status = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CorrectStockTakeDiscrepancyAsync(string username, int locationID) {
            this.CorrectStockTakeDiscrepancyAsync(username, locationID, null);
        }
        
        /// <remarks/>
        public void CorrectStockTakeDiscrepancyAsync(string username, int locationID, object userState) {
            if ((this.CorrectStockTakeDiscrepancyOperationCompleted == null)) {
                this.CorrectStockTakeDiscrepancyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCorrectStockTakeDiscrepancyOperationCompleted);
            }
            this.InvokeAsync("CorrectStockTakeDiscrepancy", new object[] {
                        username,
                        locationID}, this.CorrectStockTakeDiscrepancyOperationCompleted, userState);
        }
        
        private void OnCorrectStockTakeDiscrepancyOperationCompleted(object arg) {
            if ((this.CorrectStockTakeDiscrepancyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CorrectStockTakeDiscrepancyCompleted(this, new CorrectStockTakeDiscrepancyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetTotalOfAdjustedItem", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetTotalOfAdjustedItem(string markedList, out int countResult) {
            object[] results = this.Invoke("GetTotalOfAdjustedItem", new object[] {
                        markedList});
            countResult = ((int)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalOfAdjustedItemAsync(string markedList) {
            this.GetTotalOfAdjustedItemAsync(markedList, null);
        }
        
        /// <remarks/>
        public void GetTotalOfAdjustedItemAsync(string markedList, object userState) {
            if ((this.GetTotalOfAdjustedItemOperationCompleted == null)) {
                this.GetTotalOfAdjustedItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalOfAdjustedItemOperationCompleted);
            }
            this.InvokeAsync("GetTotalOfAdjustedItem", new object[] {
                        markedList}, this.GetTotalOfAdjustedItemOperationCompleted, userState);
        }
        
        private void OnGetTotalOfAdjustedItemOperationCompleted(object arg) {
            if ((this.GetTotalOfAdjustedItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalOfAdjustedItemCompleted(this, new GetTotalOfAdjustedItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/IsThereUnAdjustedStockTake", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsThereUnAdjustedStockTake(int locationID) {
            object[] results = this.Invoke("IsThereUnAdjustedStockTake", new object[] {
                        locationID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsThereUnAdjustedStockTakeAsync(int locationID) {
            this.IsThereUnAdjustedStockTakeAsync(locationID, null);
        }
        
        /// <remarks/>
        public void IsThereUnAdjustedStockTakeAsync(int locationID, object userState) {
            if ((this.IsThereUnAdjustedStockTakeOperationCompleted == null)) {
                this.IsThereUnAdjustedStockTakeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsThereUnAdjustedStockTakeOperationCompleted);
            }
            this.InvokeAsync("IsThereUnAdjustedStockTake", new object[] {
                        locationID}, this.IsThereUnAdjustedStockTakeOperationCompleted, userState);
        }
        
        private void OnIsThereUnAdjustedStockTakeOperationCompleted(object arg) {
            if ((this.IsThereUnAdjustedStockTakeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsThereUnAdjustedStockTakeCompleted(this, new IsThereUnAdjustedStockTakeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetUnAdjustedStockTakeDate", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUnAdjustedStockTakeDate(int locationID) {
            object[] results = this.Invoke("GetUnAdjustedStockTakeDate", new object[] {
                        locationID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnAdjustedStockTakeDateAsync(int locationID) {
            this.GetUnAdjustedStockTakeDateAsync(locationID, null);
        }
        
        /// <remarks/>
        public void GetUnAdjustedStockTakeDateAsync(int locationID, object userState) {
            if ((this.GetUnAdjustedStockTakeDateOperationCompleted == null)) {
                this.GetUnAdjustedStockTakeDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnAdjustedStockTakeDateOperationCompleted);
            }
            this.InvokeAsync("GetUnAdjustedStockTakeDate", new object[] {
                        locationID}, this.GetUnAdjustedStockTakeDateOperationCompleted, userState);
        }
        
        private void OnGetUnAdjustedStockTakeDateOperationCompleted(object arg) {
            if ((this.GetUnAdjustedStockTakeDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnAdjustedStockTakeDateCompleted(this, new GetUnAdjustedStockTakeDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/DeleteStockTake", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteStockTake(int StockTakeID) {
            this.Invoke("DeleteStockTake", new object[] {
                        StockTakeID});
        }
        
        /// <remarks/>
        public void DeleteStockTakeAsync(int StockTakeID) {
            this.DeleteStockTakeAsync(StockTakeID, null);
        }
        
        /// <remarks/>
        public void DeleteStockTakeAsync(int StockTakeID, object userState) {
            if ((this.DeleteStockTakeOperationCompleted == null)) {
                this.DeleteStockTakeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStockTakeOperationCompleted);
            }
            this.InvokeAsync("DeleteStockTake", new object[] {
                        StockTakeID}, this.DeleteStockTakeOperationCompleted, userState);
        }
        
        private void OnDeleteStockTakeOperationCompleted(object arg) {
            if ((this.DeleteStockTakeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStockTakeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/AssignStockOutToConfirmedOrderUsingTransactionScope", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AssignStockOutToConfirmedOrderUsingTransactionScope() {
            this.Invoke("AssignStockOutToConfirmedOrderUsingTransactionScope", new object[0]);
        }
        
        /// <remarks/>
        public void AssignStockOutToConfirmedOrderUsingTransactionScopeAsync() {
            this.AssignStockOutToConfirmedOrderUsingTransactionScopeAsync(null);
        }
        
        /// <remarks/>
        public void AssignStockOutToConfirmedOrderUsingTransactionScopeAsync(object userState) {
            if ((this.AssignStockOutToConfirmedOrderUsingTransactionScopeOperationCompleted == null)) {
                this.AssignStockOutToConfirmedOrderUsingTransactionScopeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignStockOutToConfirmedOrderUsingTransactionScopeOperationCompleted);
            }
            this.InvokeAsync("AssignStockOutToConfirmedOrderUsingTransactionScope", new object[0], this.AssignStockOutToConfirmedOrderUsingTransactionScopeOperationCompleted, userState);
        }
        
        private void OnAssignStockOutToConfirmedOrderUsingTransactionScopeOperationCompleted(object arg) {
            if ((this.AssignStockOutToConfirmedOrderUsingTransactionScopeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignStockOutToConfirmedOrderUsingTransactionScopeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchStockBalanceReport", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchStockBalanceReport(string searchQuery, int inventoryLocationID) {
            object[] results = this.Invoke("FetchStockBalanceReport", new object[] {
                        searchQuery,
                        inventoryLocationID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchStockBalanceReportAsync(string searchQuery, int inventoryLocationID) {
            this.FetchStockBalanceReportAsync(searchQuery, inventoryLocationID, null);
        }
        
        /// <remarks/>
        public void FetchStockBalanceReportAsync(string searchQuery, int inventoryLocationID, object userState) {
            if ((this.FetchStockBalanceReportOperationCompleted == null)) {
                this.FetchStockBalanceReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchStockBalanceReportOperationCompleted);
            }
            this.InvokeAsync("FetchStockBalanceReport", new object[] {
                        searchQuery,
                        inventoryLocationID}, this.FetchStockBalanceReportOperationCompleted, userState);
        }
        
        private void OnFetchStockBalanceReportOperationCompleted(object arg) {
            if ((this.FetchStockBalanceReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchStockBalanceReportCompleted(this, new FetchStockBalanceReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchStockBalanceReportWithZeroQty", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchStockBalanceReportWithZeroQty(string searchQuery, int inventoryLocationID, bool isRemoveZeroQty) {
            object[] results = this.Invoke("FetchStockBalanceReportWithZeroQty", new object[] {
                        searchQuery,
                        inventoryLocationID,
                        isRemoveZeroQty});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchStockBalanceReportWithZeroQtyAsync(string searchQuery, int inventoryLocationID, bool isRemoveZeroQty) {
            this.FetchStockBalanceReportWithZeroQtyAsync(searchQuery, inventoryLocationID, isRemoveZeroQty, null);
        }
        
        /// <remarks/>
        public void FetchStockBalanceReportWithZeroQtyAsync(string searchQuery, int inventoryLocationID, bool isRemoveZeroQty, object userState) {
            if ((this.FetchStockBalanceReportWithZeroQtyOperationCompleted == null)) {
                this.FetchStockBalanceReportWithZeroQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchStockBalanceReportWithZeroQtyOperationCompleted);
            }
            this.InvokeAsync("FetchStockBalanceReportWithZeroQty", new object[] {
                        searchQuery,
                        inventoryLocationID,
                        isRemoveZeroQty}, this.FetchStockBalanceReportWithZeroQtyOperationCompleted, userState);
        }
        
        private void OnFetchStockBalanceReportWithZeroQtyOperationCompleted(object arg) {
            if ((this.FetchStockBalanceReportWithZeroQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchStockBalanceReportWithZeroQtyCompleted(this, new FetchStockBalanceReportWithZeroQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchStockBalanceReportWithZeroQtyByCategory", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchStockBalanceReportWithZeroQtyByCategory(string searchQuery, int inventoryLocationID, bool isRemoveZeroQty, string categoryName) {
            object[] results = this.Invoke("FetchStockBalanceReportWithZeroQtyByCategory", new object[] {
                        searchQuery,
                        inventoryLocationID,
                        isRemoveZeroQty,
                        categoryName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchStockBalanceReportWithZeroQtyByCategoryAsync(string searchQuery, int inventoryLocationID, bool isRemoveZeroQty, string categoryName) {
            this.FetchStockBalanceReportWithZeroQtyByCategoryAsync(searchQuery, inventoryLocationID, isRemoveZeroQty, categoryName, null);
        }
        
        /// <remarks/>
        public void FetchStockBalanceReportWithZeroQtyByCategoryAsync(string searchQuery, int inventoryLocationID, bool isRemoveZeroQty, string categoryName, object userState) {
            if ((this.FetchStockBalanceReportWithZeroQtyByCategoryOperationCompleted == null)) {
                this.FetchStockBalanceReportWithZeroQtyByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchStockBalanceReportWithZeroQtyByCategoryOperationCompleted);
            }
            this.InvokeAsync("FetchStockBalanceReportWithZeroQtyByCategory", new object[] {
                        searchQuery,
                        inventoryLocationID,
                        isRemoveZeroQty,
                        categoryName}, this.FetchStockBalanceReportWithZeroQtyByCategoryOperationCompleted, userState);
        }
        
        private void OnFetchStockBalanceReportWithZeroQtyByCategoryOperationCompleted(object arg) {
            if ((this.FetchStockBalanceReportWithZeroQtyByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchStockBalanceReportWithZeroQtyByCategoryCompleted(this, new FetchStockBalanceReportWithZeroQtyByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchStockSummaryReport", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchStockSummaryReport(string searchQuery) {
            object[] results = this.Invoke("FetchStockSummaryReport", new object[] {
                        searchQuery});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchStockSummaryReportAsync(string searchQuery) {
            this.FetchStockSummaryReportAsync(searchQuery, null);
        }
        
        /// <remarks/>
        public void FetchStockSummaryReportAsync(string searchQuery, object userState) {
            if ((this.FetchStockSummaryReportOperationCompleted == null)) {
                this.FetchStockSummaryReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchStockSummaryReportOperationCompleted);
            }
            this.InvokeAsync("FetchStockSummaryReport", new object[] {
                        searchQuery}, this.FetchStockSummaryReportOperationCompleted, userState);
        }
        
        private void OnFetchStockSummaryReportOperationCompleted(object arg) {
            if ((this.FetchStockSummaryReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchStockSummaryReportCompleted(this, new FetchStockSummaryReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchStockSummaryReportWithRemoveZeroQty", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchStockSummaryReportWithRemoveZeroQty(bool removeZeroQty, string searchQuery) {
            object[] results = this.Invoke("FetchStockSummaryReportWithRemoveZeroQty", new object[] {
                        removeZeroQty,
                        searchQuery});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchStockSummaryReportWithRemoveZeroQtyAsync(bool removeZeroQty, string searchQuery) {
            this.FetchStockSummaryReportWithRemoveZeroQtyAsync(removeZeroQty, searchQuery, null);
        }
        
        /// <remarks/>
        public void FetchStockSummaryReportWithRemoveZeroQtyAsync(bool removeZeroQty, string searchQuery, object userState) {
            if ((this.FetchStockSummaryReportWithRemoveZeroQtyOperationCompleted == null)) {
                this.FetchStockSummaryReportWithRemoveZeroQtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchStockSummaryReportWithRemoveZeroQtyOperationCompleted);
            }
            this.InvokeAsync("FetchStockSummaryReportWithRemoveZeroQty", new object[] {
                        removeZeroQty,
                        searchQuery}, this.FetchStockSummaryReportWithRemoveZeroQtyOperationCompleted, userState);
        }
        
        private void OnFetchStockSummaryReportWithRemoveZeroQtyOperationCompleted(object arg) {
            if ((this.FetchStockSummaryReportWithRemoveZeroQtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchStockSummaryReportWithRemoveZeroQtyCompleted(this, new FetchStockSummaryReportWithRemoveZeroQtyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchStockCardReport", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchStockCardReport(System.DateTime startDate, System.DateTime endDate, int LocationId, string itemName, string categoryName) {
            object[] results = this.Invoke("FetchStockCardReport", new object[] {
                        startDate,
                        endDate,
                        LocationId,
                        itemName,
                        categoryName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchStockCardReportAsync(System.DateTime startDate, System.DateTime endDate, int LocationId, string itemName, string categoryName) {
            this.FetchStockCardReportAsync(startDate, endDate, LocationId, itemName, categoryName, null);
        }
        
        /// <remarks/>
        public void FetchStockCardReportAsync(System.DateTime startDate, System.DateTime endDate, int LocationId, string itemName, string categoryName, object userState) {
            if ((this.FetchStockCardReportOperationCompleted == null)) {
                this.FetchStockCardReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchStockCardReportOperationCompleted);
            }
            this.InvokeAsync("FetchStockCardReport", new object[] {
                        startDate,
                        endDate,
                        LocationId,
                        itemName,
                        categoryName}, this.FetchStockCardReportOperationCompleted, userState);
        }
        
        private void OnFetchStockCardReportOperationCompleted(object arg) {
            if ((this.FetchStockCardReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchStockCardReportCompleted(this, new FetchStockCardReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchInventoryActivityReportWithTransfer", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchInventoryActivityReportWithTransfer(bool useStartDate, bool useEndDate, System.DateTime StartDate, System.DateTime EndDate, string ItemName, string UserName, string InventoryLocationID, string movementType, string remark, string lineremark) {
            object[] results = this.Invoke("FetchInventoryActivityReportWithTransfer", new object[] {
                        useStartDate,
                        useEndDate,
                        StartDate,
                        EndDate,
                        ItemName,
                        UserName,
                        InventoryLocationID,
                        movementType,
                        remark,
                        lineremark});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchInventoryActivityReportWithTransferAsync(bool useStartDate, bool useEndDate, System.DateTime StartDate, System.DateTime EndDate, string ItemName, string UserName, string InventoryLocationID, string movementType, string remark, string lineremark) {
            this.FetchInventoryActivityReportWithTransferAsync(useStartDate, useEndDate, StartDate, EndDate, ItemName, UserName, InventoryLocationID, movementType, remark, lineremark, null);
        }
        
        /// <remarks/>
        public void FetchInventoryActivityReportWithTransferAsync(bool useStartDate, bool useEndDate, System.DateTime StartDate, System.DateTime EndDate, string ItemName, string UserName, string InventoryLocationID, string movementType, string remark, string lineremark, object userState) {
            if ((this.FetchInventoryActivityReportWithTransferOperationCompleted == null)) {
                this.FetchInventoryActivityReportWithTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchInventoryActivityReportWithTransferOperationCompleted);
            }
            this.InvokeAsync("FetchInventoryActivityReportWithTransfer", new object[] {
                        useStartDate,
                        useEndDate,
                        StartDate,
                        EndDate,
                        ItemName,
                        UserName,
                        InventoryLocationID,
                        movementType,
                        remark,
                        lineremark}, this.FetchInventoryActivityReportWithTransferOperationCompleted, userState);
        }
        
        private void OnFetchInventoryActivityReportWithTransferOperationCompleted(object arg) {
            if ((this.FetchInventoryActivityReportWithTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchInventoryActivityReportWithTransferCompleted(this, new FetchInventoryActivityReportWithTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchInventoryActivityReportWithTransferAndRefNo", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchInventoryActivityReportWithTransferAndRefNo(bool useStartDate, bool useEndDate, System.DateTime StartDate, System.DateTime EndDate, string ItemName, string UserName, string InventoryLocationID, string movementType, string refNo, string remark, string lineremark) {
            object[] results = this.Invoke("FetchInventoryActivityReportWithTransferAndRefNo", new object[] {
                        useStartDate,
                        useEndDate,
                        StartDate,
                        EndDate,
                        ItemName,
                        UserName,
                        InventoryLocationID,
                        movementType,
                        refNo,
                        remark,
                        lineremark});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchInventoryActivityReportWithTransferAndRefNoAsync(bool useStartDate, bool useEndDate, System.DateTime StartDate, System.DateTime EndDate, string ItemName, string UserName, string InventoryLocationID, string movementType, string refNo, string remark, string lineremark) {
            this.FetchInventoryActivityReportWithTransferAndRefNoAsync(useStartDate, useEndDate, StartDate, EndDate, ItemName, UserName, InventoryLocationID, movementType, refNo, remark, lineremark, null);
        }
        
        /// <remarks/>
        public void FetchInventoryActivityReportWithTransferAndRefNoAsync(bool useStartDate, bool useEndDate, System.DateTime StartDate, System.DateTime EndDate, string ItemName, string UserName, string InventoryLocationID, string movementType, string refNo, string remark, string lineremark, object userState) {
            if ((this.FetchInventoryActivityReportWithTransferAndRefNoOperationCompleted == null)) {
                this.FetchInventoryActivityReportWithTransferAndRefNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchInventoryActivityReportWithTransferAndRefNoOperationCompleted);
            }
            this.InvokeAsync("FetchInventoryActivityReportWithTransferAndRefNo", new object[] {
                        useStartDate,
                        useEndDate,
                        StartDate,
                        EndDate,
                        ItemName,
                        UserName,
                        InventoryLocationID,
                        movementType,
                        refNo,
                        remark,
                        lineremark}, this.FetchInventoryActivityReportWithTransferAndRefNoOperationCompleted, userState);
        }
        
        private void OnFetchInventoryActivityReportWithTransferAndRefNoOperationCompleted(object arg) {
            if ((this.FetchInventoryActivityReportWithTransferAndRefNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchInventoryActivityReportWithTransferAndRefNoCompleted(this, new FetchInventoryActivityReportWithTransferAndRefNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchInventoryActivityHeader", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchInventoryActivityHeader(bool useStartDate, bool useEndDate, System.DateTime StartDate, System.DateTime EndDate, string UserName, string InventoryLocationID, string movementType, string remark, string SortColumn, string SortDir, bool showGoodsReceive) {
            object[] results = this.Invoke("FetchInventoryActivityHeader", new object[] {
                        useStartDate,
                        useEndDate,
                        StartDate,
                        EndDate,
                        UserName,
                        InventoryLocationID,
                        movementType,
                        remark,
                        SortColumn,
                        SortDir,
                        showGoodsReceive});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchInventoryActivityHeaderAsync(bool useStartDate, bool useEndDate, System.DateTime StartDate, System.DateTime EndDate, string UserName, string InventoryLocationID, string movementType, string remark, string SortColumn, string SortDir, bool showGoodsReceive) {
            this.FetchInventoryActivityHeaderAsync(useStartDate, useEndDate, StartDate, EndDate, UserName, InventoryLocationID, movementType, remark, SortColumn, SortDir, showGoodsReceive, null);
        }
        
        /// <remarks/>
        public void FetchInventoryActivityHeaderAsync(bool useStartDate, bool useEndDate, System.DateTime StartDate, System.DateTime EndDate, string UserName, string InventoryLocationID, string movementType, string remark, string SortColumn, string SortDir, bool showGoodsReceive, object userState) {
            if ((this.FetchInventoryActivityHeaderOperationCompleted == null)) {
                this.FetchInventoryActivityHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchInventoryActivityHeaderOperationCompleted);
            }
            this.InvokeAsync("FetchInventoryActivityHeader", new object[] {
                        useStartDate,
                        useEndDate,
                        StartDate,
                        EndDate,
                        UserName,
                        InventoryLocationID,
                        movementType,
                        remark,
                        SortColumn,
                        SortDir,
                        showGoodsReceive}, this.FetchInventoryActivityHeaderOperationCompleted, userState);
        }
        
        private void OnFetchInventoryActivityHeaderOperationCompleted(object arg) {
            if ((this.FetchInventoryActivityHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchInventoryActivityHeaderCompleted(this, new FetchInventoryActivityHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchInventoryActivityHeaderWithRefNo", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchInventoryActivityHeaderWithRefNo(bool useStartDate, bool useEndDate, System.DateTime StartDate, System.DateTime EndDate, string UserName, string InventoryLocationID, string movementType, string remark, string refNo, string SortColumn, string SortDir, bool showGoodsReceive) {
            object[] results = this.Invoke("FetchInventoryActivityHeaderWithRefNo", new object[] {
                        useStartDate,
                        useEndDate,
                        StartDate,
                        EndDate,
                        UserName,
                        InventoryLocationID,
                        movementType,
                        remark,
                        refNo,
                        SortColumn,
                        SortDir,
                        showGoodsReceive});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchInventoryActivityHeaderWithRefNoAsync(bool useStartDate, bool useEndDate, System.DateTime StartDate, System.DateTime EndDate, string UserName, string InventoryLocationID, string movementType, string remark, string refNo, string SortColumn, string SortDir, bool showGoodsReceive) {
            this.FetchInventoryActivityHeaderWithRefNoAsync(useStartDate, useEndDate, StartDate, EndDate, UserName, InventoryLocationID, movementType, remark, refNo, SortColumn, SortDir, showGoodsReceive, null);
        }
        
        /// <remarks/>
        public void FetchInventoryActivityHeaderWithRefNoAsync(bool useStartDate, bool useEndDate, System.DateTime StartDate, System.DateTime EndDate, string UserName, string InventoryLocationID, string movementType, string remark, string refNo, string SortColumn, string SortDir, bool showGoodsReceive, object userState) {
            if ((this.FetchInventoryActivityHeaderWithRefNoOperationCompleted == null)) {
                this.FetchInventoryActivityHeaderWithRefNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchInventoryActivityHeaderWithRefNoOperationCompleted);
            }
            this.InvokeAsync("FetchInventoryActivityHeaderWithRefNo", new object[] {
                        useStartDate,
                        useEndDate,
                        StartDate,
                        EndDate,
                        UserName,
                        InventoryLocationID,
                        movementType,
                        remark,
                        refNo,
                        SortColumn,
                        SortDir,
                        showGoodsReceive}, this.FetchInventoryActivityHeaderWithRefNoOperationCompleted, userState);
        }
        
        private void OnFetchInventoryActivityHeaderWithRefNoOperationCompleted(object arg) {
            if ((this.FetchInventoryActivityHeaderWithRefNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchInventoryActivityHeaderWithRefNoCompleted(this, new FetchInventoryActivityHeaderWithRefNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchCostPriceByItemForStockIn", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal FetchCostPriceByItemForStockIn(string ItemNo, string supplier) {
            object[] results = this.Invoke("FetchCostPriceByItemForStockIn", new object[] {
                        ItemNo,
                        supplier});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void FetchCostPriceByItemForStockInAsync(string ItemNo, string supplier) {
            this.FetchCostPriceByItemForStockInAsync(ItemNo, supplier, null);
        }
        
        /// <remarks/>
        public void FetchCostPriceByItemForStockInAsync(string ItemNo, string supplier, object userState) {
            if ((this.FetchCostPriceByItemForStockInOperationCompleted == null)) {
                this.FetchCostPriceByItemForStockInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchCostPriceByItemForStockInOperationCompleted);
            }
            this.InvokeAsync("FetchCostPriceByItemForStockIn", new object[] {
                        ItemNo,
                        supplier}, this.FetchCostPriceByItemForStockInOperationCompleted, userState);
        }
        
        private void OnFetchCostPriceByItemForStockInOperationCompleted(object arg) {
            if ((this.FetchCostPriceByItemForStockInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchCostPriceByItemForStockInCompleted(this, new FetchCostPriceByItemForStockInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetStockBalanceQtyByItemSummaryByDate", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetStockBalanceQtyByItemSummaryByDate(string ItemNo, int locationID, System.DateTime RequiredDate, out string status) {
            object[] results = this.Invoke("GetStockBalanceQtyByItemSummaryByDate", new object[] {
                        ItemNo,
                        locationID,
                        RequiredDate});
            status = ((string)(results[1]));
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockBalanceQtyByItemSummaryByDateAsync(string ItemNo, int locationID, System.DateTime RequiredDate) {
            this.GetStockBalanceQtyByItemSummaryByDateAsync(ItemNo, locationID, RequiredDate, null);
        }
        
        /// <remarks/>
        public void GetStockBalanceQtyByItemSummaryByDateAsync(string ItemNo, int locationID, System.DateTime RequiredDate, object userState) {
            if ((this.GetStockBalanceQtyByItemSummaryByDateOperationCompleted == null)) {
                this.GetStockBalanceQtyByItemSummaryByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockBalanceQtyByItemSummaryByDateOperationCompleted);
            }
            this.InvokeAsync("GetStockBalanceQtyByItemSummaryByDate", new object[] {
                        ItemNo,
                        locationID,
                        RequiredDate}, this.GetStockBalanceQtyByItemSummaryByDateOperationCompleted, userState);
        }
        
        private void OnGetStockBalanceQtyByItemSummaryByDateOperationCompleted(object arg) {
            if ((this.GetStockBalanceQtyByItemSummaryByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockBalanceQtyByItemSummaryByDateCompleted(this, new GetStockBalanceQtyByItemSummaryByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchInventoryControllerByRefNo", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchInventoryControllerByRefNo(string InventoryHdrRefNo) {
            object[] results = this.Invoke("FetchInventoryControllerByRefNo", new object[] {
                        InventoryHdrRefNo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchInventoryControllerByRefNoAsync(string InventoryHdrRefNo) {
            this.FetchInventoryControllerByRefNoAsync(InventoryHdrRefNo, null);
        }
        
        /// <remarks/>
        public void FetchInventoryControllerByRefNoAsync(string InventoryHdrRefNo, object userState) {
            if ((this.FetchInventoryControllerByRefNoOperationCompleted == null)) {
                this.FetchInventoryControllerByRefNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchInventoryControllerByRefNoOperationCompleted);
            }
            this.InvokeAsync("FetchInventoryControllerByRefNo", new object[] {
                        InventoryHdrRefNo}, this.FetchInventoryControllerByRefNoOperationCompleted, userState);
        }
        
        private void OnFetchInventoryControllerByRefNoOperationCompleted(object arg) {
            if ((this.FetchInventoryControllerByRefNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchInventoryControllerByRefNoCompleted(this, new FetchInventoryControllerByRefNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetTransferDestination", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTransferDestination(string InventoryHdrRefNo) {
            object[] results = this.Invoke("GetTransferDestination", new object[] {
                        InventoryHdrRefNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferDestinationAsync(string InventoryHdrRefNo) {
            this.GetTransferDestinationAsync(InventoryHdrRefNo, null);
        }
        
        /// <remarks/>
        public void GetTransferDestinationAsync(string InventoryHdrRefNo, object userState) {
            if ((this.GetTransferDestinationOperationCompleted == null)) {
                this.GetTransferDestinationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferDestinationOperationCompleted);
            }
            this.InvokeAsync("GetTransferDestination", new object[] {
                        InventoryHdrRefNo}, this.GetTransferDestinationOperationCompleted, userState);
        }
        
        private void OnGetTransferDestinationOperationCompleted(object arg) {
            if ((this.GetTransferDestinationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferDestinationCompleted(this, new GetTransferDestinationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetSourceDestination", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSourceDestination(string InventoryHdrRefNo) {
            object[] results = this.Invoke("GetSourceDestination", new object[] {
                        InventoryHdrRefNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSourceDestinationAsync(string InventoryHdrRefNo) {
            this.GetSourceDestinationAsync(InventoryHdrRefNo, null);
        }
        
        /// <remarks/>
        public void GetSourceDestinationAsync(string InventoryHdrRefNo, object userState) {
            if ((this.GetSourceDestinationOperationCompleted == null)) {
                this.GetSourceDestinationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSourceDestinationOperationCompleted);
            }
            this.InvokeAsync("GetSourceDestination", new object[] {
                        InventoryHdrRefNo}, this.GetSourceDestinationOperationCompleted, userState);
        }
        
        private void OnGetSourceDestinationOperationCompleted(object arg) {
            if ((this.GetSourceDestinationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSourceDestinationCompleted(this, new GetSourceDestinationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/FetchItemTraceReport", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FetchItemTraceReport(System.DateTime StartDate, System.DateTime EndDate, string ItemName) {
            object[] results = this.Invoke("FetchItemTraceReport", new object[] {
                        StartDate,
                        EndDate,
                        ItemName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void FetchItemTraceReportAsync(System.DateTime StartDate, System.DateTime EndDate, string ItemName) {
            this.FetchItemTraceReportAsync(StartDate, EndDate, ItemName, null);
        }
        
        /// <remarks/>
        public void FetchItemTraceReportAsync(System.DateTime StartDate, System.DateTime EndDate, string ItemName, object userState) {
            if ((this.FetchItemTraceReportOperationCompleted == null)) {
                this.FetchItemTraceReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchItemTraceReportOperationCompleted);
            }
            this.InvokeAsync("FetchItemTraceReport", new object[] {
                        StartDate,
                        EndDate,
                        ItemName}, this.FetchItemTraceReportOperationCompleted, userState);
        }
        
        private void OnFetchItemTraceReportOperationCompleted(object arg) {
            if ((this.FetchItemTraceReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchItemTraceReportCompleted(this, new FetchItemTraceReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/getSupplierByID", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSupplierByID(int suppplierID) {
            object[] results = this.Invoke("getSupplierByID", new object[] {
                        suppplierID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSupplierByIDAsync(int suppplierID) {
            this.getSupplierByIDAsync(suppplierID, null);
        }
        
        /// <remarks/>
        public void getSupplierByIDAsync(int suppplierID, object userState) {
            if ((this.getSupplierByIDOperationCompleted == null)) {
                this.getSupplierByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupplierByIDOperationCompleted);
            }
            this.InvokeAsync("getSupplierByID", new object[] {
                        suppplierID}, this.getSupplierByIDOperationCompleted, userState);
        }
        
        private void OngetSupplierByIDOperationCompleted(object arg) {
            if ((this.getSupplierByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupplierByIDCompleted(this, new getSupplierByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/getSupplierByName", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSupplierByName(string suppName) {
            object[] results = this.Invoke("getSupplierByName", new object[] {
                        suppName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSupplierByNameAsync(string suppName) {
            this.getSupplierByNameAsync(suppName, null);
        }
        
        /// <remarks/>
        public void getSupplierByNameAsync(string suppName, object userState) {
            if ((this.getSupplierByNameOperationCompleted == null)) {
                this.getSupplierByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupplierByNameOperationCompleted);
            }
            this.InvokeAsync("getSupplierByName", new object[] {
                        suppName}, this.getSupplierByNameOperationCompleted, userState);
        }
        
        private void OngetSupplierByNameOperationCompleted(object arg) {
            if ((this.getSupplierByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupplierByNameCompleted(this, new getSupplierByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/LoadConfirmedPurchaseOrderControllerForStockIn", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] LoadConfirmedPurchaseOrderControllerForStockIn(string refNo, out string status) {
            object[] results = this.Invoke("LoadConfirmedPurchaseOrderControllerForStockIn", new object[] {
                        refNo});
            status = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadConfirmedPurchaseOrderControllerForStockInAsync(string refNo) {
            this.LoadConfirmedPurchaseOrderControllerForStockInAsync(refNo, null);
        }
        
        /// <remarks/>
        public void LoadConfirmedPurchaseOrderControllerForStockInAsync(string refNo, object userState) {
            if ((this.LoadConfirmedPurchaseOrderControllerForStockInOperationCompleted == null)) {
                this.LoadConfirmedPurchaseOrderControllerForStockInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadConfirmedPurchaseOrderControllerForStockInOperationCompleted);
            }
            this.InvokeAsync("LoadConfirmedPurchaseOrderControllerForStockIn", new object[] {
                        refNo}, this.LoadConfirmedPurchaseOrderControllerForStockInOperationCompleted, userState);
        }
        
        private void OnLoadConfirmedPurchaseOrderControllerForStockInOperationCompleted(object arg) {
            if ((this.LoadConfirmedPurchaseOrderControllerForStockInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadConfirmedPurchaseOrderControllerForStockInCompleted(this, new LoadConfirmedPurchaseOrderControllerForStockInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/GetGoodsReceiveList", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetGoodsReceiveList(string refNo, out string status) {
            object[] results = this.Invoke("GetGoodsReceiveList", new object[] {
                        refNo});
            status = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGoodsReceiveListAsync(string refNo) {
            this.GetGoodsReceiveListAsync(refNo, null);
        }
        
        /// <remarks/>
        public void GetGoodsReceiveListAsync(string refNo, object userState) {
            if ((this.GetGoodsReceiveListOperationCompleted == null)) {
                this.GetGoodsReceiveListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGoodsReceiveListOperationCompleted);
            }
            this.InvokeAsync("GetGoodsReceiveList", new object[] {
                        refNo}, this.GetGoodsReceiveListOperationCompleted, userState);
        }
        
        private void OnGetGoodsReceiveListOperationCompleted(object arg) {
            if ((this.GetGoodsReceiveListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGoodsReceiveListCompleted(this, new GetGoodsReceiveListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.edgeworks.com.sg/InventoryFetchItemWithFilterWithSupplierID", RequestNamespace="http://www.edgeworks.com.sg/", ResponseNamespace="http://www.edgeworks.com.sg/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] InventoryFetchItemWithFilterWithSupplierID(string searchText, int supplierID, string numOfDays, string outletName, int invLocation, out string message) {
            object[] results = this.Invoke("InventoryFetchItemWithFilterWithSupplierID", new object[] {
                        searchText,
                        supplierID,
                        numOfDays,
                        outletName,
                        invLocation});
            message = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void InventoryFetchItemWithFilterWithSupplierIDAsync(string searchText, int supplierID, string numOfDays, string outletName, int invLocation) {
            this.InventoryFetchItemWithFilterWithSupplierIDAsync(searchText, supplierID, numOfDays, outletName, invLocation, null);
        }
        
        /// <remarks/>
        public void InventoryFetchItemWithFilterWithSupplierIDAsync(string searchText, int supplierID, string numOfDays, string outletName, int invLocation, object userState) {
            if ((this.InventoryFetchItemWithFilterWithSupplierIDOperationCompleted == null)) {
                this.InventoryFetchItemWithFilterWithSupplierIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInventoryFetchItemWithFilterWithSupplierIDOperationCompleted);
            }
            this.InvokeAsync("InventoryFetchItemWithFilterWithSupplierID", new object[] {
                        searchText,
                        supplierID,
                        numOfDays,
                        outletName,
                        invLocation}, this.InventoryFetchItemWithFilterWithSupplierIDOperationCompleted, userState);
        }
        
        private void OnInventoryFetchItemWithFilterWithSupplierIDOperationCompleted(object arg) {
            if ((this.InventoryFetchItemWithFilterWithSupplierIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InventoryFetchItemWithFilterWithSupplierIDCompleted(this, new InventoryFetchItemWithFilterWithSupplierIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8922")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.edgeworks.com.sg/")]
    public enum AccessSource {
        
        /// <remarks/>
        POS,
        
        /// <remarks/>
        WEB,
        
        /// <remarks/>
        WEBServices,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8922")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.edgeworks.com.sg/")]
    public partial class ItemTagModel {
        
        private string itemNoField;
        
        private int inventoryLocationIDField;
        
        private string[] serialNoCollField;
        
        /// <remarks/>
        public string ItemNo {
            get {
                return this.itemNoField;
            }
            set {
                this.itemNoField = value;
            }
        }
        
        /// <remarks/>
        public int InventoryLocationID {
            get {
                return this.inventoryLocationIDField;
            }
            set {
                this.inventoryLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string[] SerialNoColl {
            get {
                return this.serialNoCollField;
            }
            set {
                this.serialNoCollField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8922")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.edgeworks.com.sg/")]
    public partial class InventoryItem {
        
        private string itemNoField;
        
        private decimal qtyField;
        
        /// <remarks/>
        public string ItemNo {
            get {
                return this.itemNoField;
            }
            set {
                this.itemNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchAppointmentsCCMWRealTimeCompletedEventHandler(object sender, FetchAppointmentsCCMWRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchAppointmentsCCMWRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchAppointmentsCCMWRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UpdateAppointmentsIsUpdatedCompletedEventHandler(object sender, UpdateAppointmentsIsUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAppointmentsIsUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAppointmentsIsUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetDeliveryOrderLastTimeStampCompletedEventHandler(object sender, GetDeliveryOrderLastTimeStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryOrderLastTimeStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryOrderLastTimeStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchDeliveryOrderCCMWRealTimeCompletedEventHandler(object sender, FetchDeliveryOrderCCMWRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchDeliveryOrderCCMWRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchDeliveryOrderCCMWRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchRecordNoByTimestampDeliveryOrderCompletedEventHandler(object sender, FetchRecordNoByTimestampDeliveryOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchRecordNoByTimestampDeliveryOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchRecordNoByTimestampDeliveryOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchDataSetByTimestampDeliveryOrderCompletedEventHandler(object sender, FetchDataSetByTimestampDeliveryOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchDataSetByTimestampDeliveryOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchDataSetByTimestampDeliveryOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UpdateDeliveryOrderIsUpdatedCompletedEventHandler(object sender, UpdateDeliveryOrderIsUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDeliveryOrderIsUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDeliveryOrderIsUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void DeleteSavedFileAllCompletedEventHandler(object sender, DeleteSavedFileAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSavedFileAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSavedFileAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void DeleteSavedFileByNameCompletedEventHandler(object sender, DeleteSavedFileByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSavedFileByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSavedFileByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void getOrderForRefundCompletedEventHandler(object sender, getOrderForRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrderForRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrderForRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void getRatingLastTimeStampCompletedEventHandler(object sender, getRatingLastTimeStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRatingLastTimeStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRatingLastTimeStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void SyncRatingCompletedEventHandler(object sender, SyncRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SyncRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchDataSetByTimestampVoucherHeaderCompletedEventHandler(object sender, FetchDataSetByTimestampVoucherHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchDataSetByTimestampVoucherHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchDataSetByTimestampVoucherHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchDataSetByTimestampVouchersCompletedEventHandler(object sender, FetchDataSetByTimestampVouchersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchDataSetByTimestampVouchersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchDataSetByTimestampVouchersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void getOrderCompletedEventHandler(object sender, getOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchPreOrderReportFromWebCompletedEventHandler(object sender, FetchPreOrderReportFromWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchPreOrderReportFromWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchPreOrderReportFromWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void CreateDeliveryPreOrderSingleOrderDetForWebCompletedEventHandler(object sender, CreateDeliveryPreOrderSingleOrderDetForWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDeliveryPreOrderSingleOrderDetForWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDeliveryPreOrderSingleOrderDetForWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void SetDeliveryAsDeliveredStatusCompletedEventHandler(object sender, SetDeliveryAsDeliveredStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDeliveryAsDeliveredStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDeliveryAsDeliveredStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void CancelPreOrderCompletedEventHandler(object sender, CancelPreOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPreOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPreOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void DeliveryGetDeliveryTrackCompletedEventHandler(object sender, DeliveryGetDeliveryTrackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeliveryGetDeliveryTrackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeliveryGetDeliveryTrackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void DeliverySetDeliveredCompletedEventHandler(object sender, DeliverySetDeliveredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeliverySetDeliveredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeliverySetDeliveredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void SendNotifiyMailDeliveryCompletedEventHandler(object sender, SendNotifiyMailDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendNotifiyMailDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendNotifiyMailDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchDeliveryOrderToPrintByOrderDetIDCompletedEventHandler(object sender, FetchDeliveryOrderToPrintByOrderDetIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchDeliveryOrderToPrintByOrderDetIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchDeliveryOrderToPrintByOrderDetIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void AutoAssignDepositWhenpayInstallmentCompletedEventHandler(object sender, AutoAssignDepositWhenpayInstallmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoAssignDepositWhenpayInstallmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoAssignDepositWhenpayInstallmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetDataOrderDetForRefundCompletedEventHandler(object sender, GetDataOrderDetForRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataOrderDetForRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataOrderDetForRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetDataOrderDetForRefundStrCompletedEventHandler(object sender, GetDataOrderDetForRefundStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataOrderDetForRefundStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataOrderDetForRefundStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void ResetDepositAmountCompletedEventHandler(object sender, ResetDepositAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetDepositAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetDepositAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void AssignAutoDepositCompletedEventHandler(object sender, AssignAutoDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignAutoDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignAutoDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void InventoryFetchItemWithFilterCompletedEventHandler(object sender, InventoryFetchItemWithFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InventoryFetchItemWithFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InventoryFetchItemWithFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetChangeTrackingCurrentVersionCompletedEventHandler(object sender, GetChangeTrackingCurrentVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangeTrackingCurrentVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangeTrackingCurrentVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetChangeTrackingVersionSyncStatusCompletedEventHandler(object sender, GetChangeTrackingVersionSyncStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangeTrackingVersionSyncStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangeTrackingVersionSyncStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetChangeTrackingChangesCompressedCompletedEventHandler(object sender, GetChangeTrackingChangesCompressedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangeTrackingChangesCompressedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangeTrackingChangesCompressedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void EnableChangeTrackingCompletedEventHandler(object sender, EnableChangeTrackingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableChangeTrackingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableChangeTrackingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void EnableChangeTrackingTableCompletedEventHandler(object sender, EnableChangeTrackingTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableChangeTrackingTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableChangeTrackingTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetChangeTrackingVersionCompletedEventHandler(object sender, GetChangeTrackingVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangeTrackingVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangeTrackingVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetChangeTrackingTableMinValidVersionCompletedEventHandler(object sender, GetChangeTrackingTableMinValidVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangeTrackingTableMinValidVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangeTrackingTableMinValidVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetChangeTrackingFullTableCompletedEventHandler(object sender, GetChangeTrackingFullTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangeTrackingFullTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangeTrackingFullTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetInventoryHdrFullTableCompletedEventHandler(object sender, GetInventoryHdrFullTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryHdrFullTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryHdrFullTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetInventoryDetFullTableCompletedEventHandler(object sender, GetInventoryDetFullTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryDetFullTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryDetFullTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetChangeTrackingChangesTableCompletedEventHandler(object sender, GetChangeTrackingChangesTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangeTrackingChangesTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangeTrackingChangesTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetAppSettingValueCompletedEventHandler(object sender, GetAppSettingValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppSettingValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppSettingValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void SetAppSettingValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void SetAppSettingValueBatchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void DeleteAppSettingKeyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void ExecuteUpdateUsingDataTableCompletedEventHandler(object sender, ExecuteUpdateUsingDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteUpdateUsingDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteUpdateUsingDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UploadOrderTablesCompletedEventHandler(object sender, UploadOrderTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadOrderTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadOrderTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UploadLogsTablesCompletedEventHandler(object sender, UploadLogsTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadLogsTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadLogsTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UploadTablesCompletedEventHandler(object sender, UploadTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void DeleteInventoryDetFromVoidedOrderCompletedEventHandler(object sender, DeleteInventoryDetFromVoidedOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInventoryDetFromVoidedOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInventoryDetFromVoidedOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UploadInventoryTablesCompletedEventHandler(object sender, UploadInventoryTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInventoryTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInventoryTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UploadTableCompletedEventHandler(object sender, UploadTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void PurchaseOrderCompressedCompletedEventHandler(object sender, PurchaseOrderCompressedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderCompressedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderCompressedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void PurchaseOrderCompressedWithCustomRefNoCompletedEventHandler(object sender, PurchaseOrderCompressedWithCustomRefNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderCompressedWithCustomRefNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderCompressedWithCustomRefNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string newCustomRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void PurchaseOrderCompressedWithCustomRefNoEditCompletedEventHandler(object sender, PurchaseOrderCompressedWithCustomRefNoEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderCompressedWithCustomRefNoEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderCompressedWithCustomRefNoEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string newCustomRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void SaveAttachmentCompletedEventHandler(object sender, SaveAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UploadAttachmentCompletedEventHandler(object sender, UploadAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string serverPath {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void DeleteAttachmentCompletedEventHandler(object sender, DeleteAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetCustomPONoSettingCompletedEventHandler(object sender, GetCustomPONoSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomPONoSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomPONoSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetCustomGRNoSettingCompletedEventHandler(object sender, GetCustomGRNoSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomGRNoSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomGRNoSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void SyncCategoryFromMagentoCompletedEventHandler(object sender, SyncCategoryFromMagentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncCategoryFromMagentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SyncCategoryFromMagentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void SubmitSalesCompletedEventHandler(object sender, SubmitSalesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitSalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitSalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string orderHdrID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void AddAccessLogCompletedEventHandler(object sender, AddAccessLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAccessLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAccessLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchUpdatedGroupUserPrivilegesCompletedEventHandler(object sender, FetchUpdatedGroupUserPrivilegesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchUpdatedGroupUserPrivilegesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchUpdatedGroupUserPrivilegesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchGroupPrivilegesRealTimeCompletedEventHandler(object sender, FetchGroupPrivilegesRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchGroupPrivilegesRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchGroupPrivilegesRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetItemRecordCountAfterTimestampCompletedEventHandler(object sender, GetItemRecordCountAfterTimestampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemRecordCountAfterTimestampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemRecordCountAfterTimestampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetItemTableCompressedRealTimeCompletedEventHandler(object sender, GetItemTableCompressedRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemTableCompressedRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemTableCompressedRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchDataSetByTimestampCompletedEventHandler(object sender, FetchDataSetByTimestampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchDataSetByTimestampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchDataSetByTimestampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchDataSetByTimeStampPerMemberCompletedEventHandler(object sender, FetchDataSetByTimeStampPerMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchDataSetByTimeStampPerMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchDataSetByTimeStampPerMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchDataSetByTimeStampPerModuleNameCompletedEventHandler(object sender, FetchDataSetByTimeStampPerModuleNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchDataSetByTimeStampPerModuleNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchDataSetByTimeStampPerModuleNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchRecordNoByTimestampCompletedEventHandler(object sender, FetchRecordNoByTimestampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchRecordNoByTimestampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchRecordNoByTimestampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchRecordNoByTimestampByInvLocIDCompletedEventHandler(object sender, FetchRecordNoByTimestampByInvLocIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchRecordNoByTimestampByInvLocIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchRecordNoByTimestampByInvLocIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchRecordNoByTimestampByPOSIDCompletedEventHandler(object sender, FetchRecordNoByTimestampByPOSIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchRecordNoByTimestampByPOSIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchRecordNoByTimestampByPOSIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchRecordNoByTimestampByOutletNameCompletedEventHandler(object sender, FetchRecordNoByTimestampByOutletNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchRecordNoByTimestampByOutletNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchRecordNoByTimestampByOutletNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchRecordNoByTimestampByMemberCompletedEventHandler(object sender, FetchRecordNoByTimestampByMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchRecordNoByTimestampByMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchRecordNoByTimestampByMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchRecordNoByTimestampByModuleNameCompletedEventHandler(object sender, FetchRecordNoByTimestampByModuleNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchRecordNoByTimestampByModuleNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchRecordNoByTimestampByModuleNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchPromoRecordNoByTimestampByOutletNameCompletedEventHandler(object sender, FetchPromoRecordNoByTimestampByOutletNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchPromoRecordNoByTimestampByOutletNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchPromoRecordNoByTimestampByOutletNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetPromoRecordCountAfterTimestampCompletedEventHandler(object sender, GetPromoRecordCountAfterTimestampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPromoRecordCountAfterTimestampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPromoRecordCountAfterTimestampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchRecordNoByTimestampAppointmentCompletedEventHandler(object sender, FetchRecordNoByTimestampAppointmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchRecordNoByTimestampAppointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchRecordNoByTimestampAppointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void getSalesLastTimeStampCompletedEventHandler(object sender, getSalesLastTimeStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSalesLastTimeStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSalesLastTimeStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetAccessLogLastTimeStampCompletedEventHandler(object sender, GetAccessLogLastTimeStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessLogLastTimeStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessLogLastTimeStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void getCashRecordingLastTimeStampCompletedEventHandler(object sender, getCashRecordingLastTimeStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCashRecordingLastTimeStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCashRecordingLastTimeStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void getQuotationLastTimeStampCompletedEventHandler(object sender, getQuotationLastTimeStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQuotationLastTimeStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQuotationLastTimeStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void getCounterCloselogLastTimeStampCompletedEventHandler(object sender, getCounterCloselogLastTimeStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCounterCloselogLastTimeStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCounterCloselogLastTimeStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetAttendanceLastTimeStampCompletedEventHandler(object sender, GetAttendanceLastTimeStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttendanceLastTimeStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttendanceLastTimeStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void getLastTimeStampByPOSIDCompletedEventHandler(object sender, getLastTimeStampByPOSIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLastTimeStampByPOSIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLastTimeStampByPOSIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetInventoryCountRealTimeCompletedEventHandler(object sender, GetInventoryCountRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryCountRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryCountRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetInventoryRealTimeDataCompletedEventHandler(object sender, GetInventoryRealTimeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryRealTimeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryRealTimeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetPromoRealTimeDataCompletedEventHandler(object sender, GetPromoRealTimeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPromoRealTimeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPromoRealTimeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetPromoRealTimeDataAllCompletedEventHandler(object sender, GetPromoRealTimeDataAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPromoRealTimeDataAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPromoRealTimeDataAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetPurchaseOrderRealTimeDataCompletedEventHandler(object sender, GetPurchaseOrderRealTimeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPurchaseOrderRealTimeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPurchaseOrderRealTimeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetItemGroupRealTimeDataCompletedEventHandler(object sender, GetItemGroupRealTimeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemGroupRealTimeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemGroupRealTimeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetStockTakeRealTimeDataCompletedEventHandler(object sender, GetStockTakeRealTimeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockTakeRealTimeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockTakeRealTimeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetPointsRealTimeDataAllCompletedEventHandler(object sender, GetPointsRealTimeDataAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPointsRealTimeDataAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPointsRealTimeDataAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchOrdersCCMWRealTimeCompletedEventHandler(object sender, FetchOrdersCCMWRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchOrdersCCMWRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchOrdersCCMWRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchAccessLogRealTimeCompletedEventHandler(object sender, FetchAccessLogRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchAccessLogRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchAccessLogRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchAAttendanceRealTimeCompletedEventHandler(object sender, FetchAAttendanceRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchAAttendanceRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchAAttendanceRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchCounterCloseLogRealTimeCompletedEventHandler(object sender, FetchCounterCloseLogRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchCounterCloseLogRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchCounterCloseLogRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchCounterCloseLogWithDetailRealTimeCompletedEventHandler(object sender, FetchCounterCloseLogWithDetailRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchCounterCloseLogWithDetailRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchCounterCloseLogWithDetailRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchLoginActivityRealTimeCompletedEventHandler(object sender, FetchLoginActivityRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchLoginActivityRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchLoginActivityRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchQuotationRealTimeCompletedEventHandler(object sender, FetchQuotationRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchQuotationRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchQuotationRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchCashRecordingRealTimeCompletedEventHandler(object sender, FetchCashRecordingRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchCashRecordingRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchCashRecordingRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchPerformanceLogRealTimeCompletedEventHandler(object sender, FetchPerformanceLogRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchPerformanceLogRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchPerformanceLogRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchPerformanceLogSummaryRealTimeCompletedEventHandler(object sender, FetchPerformanceLogSummaryRealTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchPerformanceLogSummaryRealTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchPerformanceLogSummaryRealTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void SaveAppointmentCompletedEventHandler(object sender, SaveAppointmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveAppointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveAppointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchDataSetByTimestampAppointmentCompletedEventHandler(object sender, FetchDataSetByTimestampAppointmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchDataSetByTimestampAppointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchDataSetByTimestampAppointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchDataSetByTimestampSpecialDiscountCompletedEventHandler(object sender, FetchDataSetByTimestampSpecialDiscountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchDataSetByTimestampSpecialDiscountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchDataSetByTimestampSpecialDiscountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void SaveInventoryFileCompletedEventHandler(object sender, SaveInventoryFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveInventoryFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveInventoryFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetInventorySavedFileCompletedEventHandler(object sender, GetInventorySavedFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventorySavedFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventorySavedFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void LoadInventoryFromFileCompletedEventHandler(object sender, LoadInventoryFromFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadInventoryFromFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadInventoryFromFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void removeSavedFileCompletedEventHandler(object sender, removeSavedFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeSavedFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeSavedFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetAppointmentLastTimeStampCompletedEventHandler(object sender, GetAppointmentLastTimeStampCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppointmentLastTimeStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppointmentLastTimeStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UpdateMemberDataWebCompletedEventHandler(object sender, UpdateMemberDataWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberDataWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberDataWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UpdateMemberTagNoWebCompletedEventHandler(object sender, UpdateMemberTagNoWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberTagNoWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberTagNoWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchOrdersCCMWCompletedEventHandler(object sender, FetchOrdersCCMWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchOrdersCCMWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchOrdersCCMWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchOrdersCompletedEventHandler(object sender, FetchOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchNewMembershipSignUpsCompletedEventHandler(object sender, FetchNewMembershipSignUpsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchNewMembershipSignUpsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchNewMembershipSignUpsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchInventorysCompletedEventHandler(object sender, FetchInventorysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchInventorysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchInventorysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchLogTableCompletedEventHandler(object sender, FetchLogTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchLogTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchLogTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchLogTableWithUpdateCompletedEventHandler(object sender, FetchLogTableWithUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchLogTableWithUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchLogTableWithUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchDeliveryOrderCompletedEventHandler(object sender, FetchDeliveryOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchDeliveryOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchDeliveryOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchMemberRemarksCompletedEventHandler(object sender, FetchMemberRemarksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchMemberRemarksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchMemberRemarksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UpdateOrderHdrRemarkCompletedEventHandler(object sender, UpdateOrderHdrRemarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrderHdrRemarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrderHdrRemarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FreezePOSByPointOfSaleIDCompletedEventHandler(object sender, FreezePOSByPointOfSaleIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FreezePOSByPointOfSaleIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FreezePOSByPointOfSaleIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetDataTableCompletedEventHandler(object sender, GetDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetDataTableCompressedCompletedEventHandler(object sender, GetDataTableCompressedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataTableCompressedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataTableCompressedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetOrderHdrListCompletedEventHandler(object sender, GetOrderHdrListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderHdrListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderHdrListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetOrderHdrListWithoutPOSIDCompletedEventHandler(object sender, GetOrderHdrListWithoutPOSIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderHdrListWithoutPOSIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderHdrListWithoutPOSIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetInventoryHdrListCompletedEventHandler(object sender, GetInventoryHdrListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryHdrListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryHdrListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchSalesCompletedEventHandler(object sender, FetchSalesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchSalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchSalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetDataTableCustomCompressedCompletedEventHandler(object sender, GetDataTableCustomCompressedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataTableCustomCompressedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataTableCustomCompressedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetDeliveryOrderCompletedEventHandler(object sender, GetDeliveryOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetPastTransactionCompletedEventHandler(object sender, GetPastTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPastTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPastTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetPastTransactionWithOutletCompletedEventHandler(object sender, GetPastTransactionWithOutletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPastTransactionWithOutletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPastTransactionWithOutletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void getPackageListCompletedEventHandler(object sender, getPackageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPackageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPackageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetHistory_PointCompletedEventHandler(object sender, GetHistory_PointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistory_PointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistory_PointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime StartValidPeriod {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.DateTime EndValidPeriod {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal RemainingPoint {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void AllocatePendingPackageCompletedEventHandler(object sender, AllocatePendingPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllocatePendingPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllocatePendingPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void AllocatePendingPackageNEWCompletedEventHandler(object sender, AllocatePendingPackageNEWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllocatePendingPackageNEWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllocatePendingPackageNEWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void AddPointCompletedEventHandler(object sender, AddPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void DeductPointsCompletedEventHandler(object sender, DeductPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeductPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeductPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetCurrentPointCompletedEventHandler(object sender, GetCurrentPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetAllocatedPointCompletedEventHandler(object sender, GetAllocatedPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllocatedPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllocatedPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetCurrentPointsAmountCompletedEventHandler(object sender, GetCurrentPointsAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentPointsAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentPointsAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable Output {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetPackageBreakdownCompletedEventHandler(object sender, GetPackageBreakdownCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageBreakdownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageBreakdownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal Breakdown {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetPackageAmount_plusBreakdownCompletedEventHandler(object sender, GetPackageAmount_plusBreakdownCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageAmount_plusBreakdownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageAmount_plusBreakdownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal Breakdown {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetPackageAmountCompletedEventHandler(object sender, GetPackageAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal Output {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetPackageAmountsCompletedEventHandler(object sender, GetPackageAmountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageAmountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageAmountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable Output {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UpdateAllCompletedEventHandler(object sender, UpdateAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal InitialPoint {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal DiffPoint {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void RevertPointsCompletedEventHandler(object sender, RevertPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RevertPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RevertPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void UpdMembershipPackageCompletedEventHandler(object sender, UpdMembershipPackageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdMembershipPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdMembershipPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal Breakdown {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetInstallmentListByCustomerCompletedEventHandler(object sender, GetInstallmentListByCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstallmentListByCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstallmentListByCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetInstallmentDetailByOrderHdrIDCompletedEventHandler(object sender, GetInstallmentDetailByOrderHdrIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstallmentDetailByOrderHdrIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstallmentDetailByOrderHdrIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void CheckSerialNoIsExistCompletedEventHandler(object sender, CheckSerialNoIsExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSerialNoIsExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSerialNoIsExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void CheckSerialNoIsNotExistCompletedEventHandler(object sender, CheckSerialNoIsNotExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSerialNoIsNotExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSerialNoIsNotExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetStockQuantityCompletedEventHandler(object sender, GetStockQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InventoryItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InventoryItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetStockQuantityByItemCompletedEventHandler(object sender, GetStockQuantityByItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockQuantityByItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockQuantityByItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void TransferOutAutoReceiveCompressedCompletedEventHandler(object sender, TransferOutAutoReceiveCompressedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferOutAutoReceiveCompressedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferOutAutoReceiveCompressedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void TransferOutAutoReceiveCompletedEventHandler(object sender, TransferOutAutoReceiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferOutAutoReceiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferOutAutoReceiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void StockOutCompressedCompletedEventHandler(object sender, StockOutCompressedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StockOutCompressedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StockOutCompressedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void StockOutCompletedEventHandler(object sender, StockOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StockOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StockOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void StockOutItemCompletedEventHandler(object sender, StockOutItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StockOutItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StockOutItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void StockInCompressedCompletedEventHandler(object sender, StockInCompressedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StockInCompressedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StockInCompressedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string customRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void StockInCompletedEventHandler(object sender, StockInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StockInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StockInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void StockReturnCompressedCompletedEventHandler(object sender, StockReturnCompressedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StockReturnCompressedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StockReturnCompressedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void StockReturnCompletedEventHandler(object sender, StockReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StockReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StockReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string newRefNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void CreateStockTakeEntriesCompletedEventHandler(object sender, CreateStockTakeEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStockTakeEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStockTakeEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void CreateStockTakeEntriesCompressedCompletedEventHandler(object sender, CreateStockTakeEntriesCompressedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStockTakeEntriesCompressedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStockTakeEntriesCompressedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void AdjustStockTakeDiscrepancyCompletedEventHandler(object sender, AdjustStockTakeDiscrepancyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustStockTakeDiscrepancyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustStockTakeDiscrepancyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void AdjustStockTakeDiscrepancyNewCompletedEventHandler(object sender, AdjustStockTakeDiscrepancyNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustStockTakeDiscrepancyNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustStockTakeDiscrepancyNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void CorrectStockTakeDiscrepancyCompletedEventHandler(object sender, CorrectStockTakeDiscrepancyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CorrectStockTakeDiscrepancyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CorrectStockTakeDiscrepancyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetTotalOfAdjustedItemCompletedEventHandler(object sender, GetTotalOfAdjustedItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalOfAdjustedItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalOfAdjustedItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int countResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void IsThereUnAdjustedStockTakeCompletedEventHandler(object sender, IsThereUnAdjustedStockTakeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsThereUnAdjustedStockTakeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsThereUnAdjustedStockTakeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetUnAdjustedStockTakeDateCompletedEventHandler(object sender, GetUnAdjustedStockTakeDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnAdjustedStockTakeDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnAdjustedStockTakeDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void DeleteStockTakeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void AssignStockOutToConfirmedOrderUsingTransactionScopeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchStockBalanceReportCompletedEventHandler(object sender, FetchStockBalanceReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchStockBalanceReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchStockBalanceReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchStockBalanceReportWithZeroQtyCompletedEventHandler(object sender, FetchStockBalanceReportWithZeroQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchStockBalanceReportWithZeroQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchStockBalanceReportWithZeroQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchStockBalanceReportWithZeroQtyByCategoryCompletedEventHandler(object sender, FetchStockBalanceReportWithZeroQtyByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchStockBalanceReportWithZeroQtyByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchStockBalanceReportWithZeroQtyByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchStockSummaryReportCompletedEventHandler(object sender, FetchStockSummaryReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchStockSummaryReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchStockSummaryReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchStockSummaryReportWithRemoveZeroQtyCompletedEventHandler(object sender, FetchStockSummaryReportWithRemoveZeroQtyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchStockSummaryReportWithRemoveZeroQtyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchStockSummaryReportWithRemoveZeroQtyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchStockCardReportCompletedEventHandler(object sender, FetchStockCardReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchStockCardReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchStockCardReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchInventoryActivityReportWithTransferCompletedEventHandler(object sender, FetchInventoryActivityReportWithTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchInventoryActivityReportWithTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchInventoryActivityReportWithTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchInventoryActivityReportWithTransferAndRefNoCompletedEventHandler(object sender, FetchInventoryActivityReportWithTransferAndRefNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchInventoryActivityReportWithTransferAndRefNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchInventoryActivityReportWithTransferAndRefNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchInventoryActivityHeaderCompletedEventHandler(object sender, FetchInventoryActivityHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchInventoryActivityHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchInventoryActivityHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchInventoryActivityHeaderWithRefNoCompletedEventHandler(object sender, FetchInventoryActivityHeaderWithRefNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchInventoryActivityHeaderWithRefNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchInventoryActivityHeaderWithRefNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchCostPriceByItemForStockInCompletedEventHandler(object sender, FetchCostPriceByItemForStockInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchCostPriceByItemForStockInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchCostPriceByItemForStockInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetStockBalanceQtyByItemSummaryByDateCompletedEventHandler(object sender, GetStockBalanceQtyByItemSummaryByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockBalanceQtyByItemSummaryByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockBalanceQtyByItemSummaryByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchInventoryControllerByRefNoCompletedEventHandler(object sender, FetchInventoryControllerByRefNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchInventoryControllerByRefNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchInventoryControllerByRefNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetTransferDestinationCompletedEventHandler(object sender, GetTransferDestinationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferDestinationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferDestinationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetSourceDestinationCompletedEventHandler(object sender, GetSourceDestinationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSourceDestinationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSourceDestinationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void FetchItemTraceReportCompletedEventHandler(object sender, FetchItemTraceReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchItemTraceReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchItemTraceReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void getSupplierByIDCompletedEventHandler(object sender, getSupplierByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSupplierByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSupplierByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void getSupplierByNameCompletedEventHandler(object sender, getSupplierByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSupplierByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSupplierByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void LoadConfirmedPurchaseOrderControllerForStockInCompletedEventHandler(object sender, LoadConfirmedPurchaseOrderControllerForStockInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadConfirmedPurchaseOrderControllerForStockInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadConfirmedPurchaseOrderControllerForStockInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void GetGoodsReceiveListCompletedEventHandler(object sender, GetGoodsReceiveListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGoodsReceiveListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGoodsReceiveListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    public delegate void InventoryFetchItemWithFilterWithSupplierIDCompletedEventHandler(object sender, InventoryFetchItemWithFilterWithSupplierIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.8922")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InventoryFetchItemWithFilterWithSupplierIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InventoryFetchItemWithFilterWithSupplierIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591