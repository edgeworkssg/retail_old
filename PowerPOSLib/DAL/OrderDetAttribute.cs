using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace PowerPOS
{
	/// <summary>
	/// Strongly-typed collection for the OrderDetAttribute class.
	/// </summary>
    [Serializable]
	public partial class OrderDetAttributeCollection : ActiveList<OrderDetAttribute, OrderDetAttributeCollection>
	{	   
		public OrderDetAttributeCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>OrderDetAttributeCollection</returns>
		public OrderDetAttributeCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                OrderDetAttribute o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the OrderDetAttributes table.
	/// </summary>
	[Serializable]
	public partial class OrderDetAttribute : ActiveRecord<OrderDetAttribute>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public OrderDetAttribute()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public OrderDetAttribute(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public OrderDetAttribute(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public OrderDetAttribute(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("OrderDetAttributes", TableType.Table, DataService.GetInstance("PowerPOS"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarOrderDetAttributesID = new TableSchema.TableColumn(schema);
				colvarOrderDetAttributesID.ColumnName = "OrderDetAttributesID";
				colvarOrderDetAttributesID.DataType = DbType.AnsiString;
				colvarOrderDetAttributesID.MaxLength = 20;
				colvarOrderDetAttributesID.AutoIncrement = false;
				colvarOrderDetAttributesID.IsNullable = false;
				colvarOrderDetAttributesID.IsPrimaryKey = true;
				colvarOrderDetAttributesID.IsForeignKey = false;
				colvarOrderDetAttributesID.IsReadOnly = false;
				colvarOrderDetAttributesID.DefaultSetting = @"";
				colvarOrderDetAttributesID.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOrderDetAttributesID);
				
				TableSchema.TableColumn colvarOrderDetID = new TableSchema.TableColumn(schema);
				colvarOrderDetID.ColumnName = "OrderDetID";
				colvarOrderDetID.DataType = DbType.AnsiString;
				colvarOrderDetID.MaxLength = 18;
				colvarOrderDetID.AutoIncrement = false;
				colvarOrderDetID.IsNullable = false;
				colvarOrderDetID.IsPrimaryKey = false;
				colvarOrderDetID.IsForeignKey = true;
				colvarOrderDetID.IsReadOnly = false;
				colvarOrderDetID.DefaultSetting = @"";
				
					colvarOrderDetID.ForeignKeyTableName = "OrderDet";
				schema.Columns.Add(colvarOrderDetID);
				
				TableSchema.TableColumn colvarAttributesCode = new TableSchema.TableColumn(schema);
				colvarAttributesCode.ColumnName = "AttributesCode";
				colvarAttributesCode.DataType = DbType.AnsiString;
				colvarAttributesCode.MaxLength = 10;
				colvarAttributesCode.AutoIncrement = false;
				colvarAttributesCode.IsNullable = false;
				colvarAttributesCode.IsPrimaryKey = false;
				colvarAttributesCode.IsForeignKey = true;
				colvarAttributesCode.IsReadOnly = false;
				colvarAttributesCode.DefaultSetting = @"";
				
					colvarAttributesCode.ForeignKeyTableName = "Attributes";
				schema.Columns.Add(colvarAttributesCode);
				
				TableSchema.TableColumn colvarUserField1 = new TableSchema.TableColumn(schema);
				colvarUserField1.ColumnName = "UserField1";
				colvarUserField1.DataType = DbType.AnsiString;
				colvarUserField1.MaxLength = 50;
				colvarUserField1.AutoIncrement = false;
				colvarUserField1.IsNullable = true;
				colvarUserField1.IsPrimaryKey = false;
				colvarUserField1.IsForeignKey = false;
				colvarUserField1.IsReadOnly = false;
				colvarUserField1.DefaultSetting = @"";
				colvarUserField1.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUserField1);
				
				TableSchema.TableColumn colvarUserField2 = new TableSchema.TableColumn(schema);
				colvarUserField2.ColumnName = "UserField2";
				colvarUserField2.DataType = DbType.AnsiString;
				colvarUserField2.MaxLength = 50;
				colvarUserField2.AutoIncrement = false;
				colvarUserField2.IsNullable = true;
				colvarUserField2.IsPrimaryKey = false;
				colvarUserField2.IsForeignKey = false;
				colvarUserField2.IsReadOnly = false;
				colvarUserField2.DefaultSetting = @"";
				colvarUserField2.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUserField2);
				
				TableSchema.TableColumn colvarUserField3 = new TableSchema.TableColumn(schema);
				colvarUserField3.ColumnName = "UserField3";
				colvarUserField3.DataType = DbType.AnsiString;
				colvarUserField3.MaxLength = 50;
				colvarUserField3.AutoIncrement = false;
				colvarUserField3.IsNullable = true;
				colvarUserField3.IsPrimaryKey = false;
				colvarUserField3.IsForeignKey = false;
				colvarUserField3.IsReadOnly = false;
				colvarUserField3.DefaultSetting = @"";
				colvarUserField3.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUserField3);
				
				TableSchema.TableColumn colvarUserField4 = new TableSchema.TableColumn(schema);
				colvarUserField4.ColumnName = "UserField4";
				colvarUserField4.DataType = DbType.AnsiString;
				colvarUserField4.MaxLength = 50;
				colvarUserField4.AutoIncrement = false;
				colvarUserField4.IsNullable = true;
				colvarUserField4.IsPrimaryKey = false;
				colvarUserField4.IsForeignKey = false;
				colvarUserField4.IsReadOnly = false;
				colvarUserField4.DefaultSetting = @"";
				colvarUserField4.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUserField4);
				
				TableSchema.TableColumn colvarUserField5 = new TableSchema.TableColumn(schema);
				colvarUserField5.ColumnName = "UserField5";
				colvarUserField5.DataType = DbType.AnsiString;
				colvarUserField5.MaxLength = 50;
				colvarUserField5.AutoIncrement = false;
				colvarUserField5.IsNullable = true;
				colvarUserField5.IsPrimaryKey = false;
				colvarUserField5.IsForeignKey = false;
				colvarUserField5.IsReadOnly = false;
				colvarUserField5.DefaultSetting = @"";
				colvarUserField5.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUserField5);
				
				TableSchema.TableColumn colvarCreatedOn = new TableSchema.TableColumn(schema);
				colvarCreatedOn.ColumnName = "CreatedOn";
				colvarCreatedOn.DataType = DbType.DateTime;
				colvarCreatedOn.MaxLength = 0;
				colvarCreatedOn.AutoIncrement = false;
				colvarCreatedOn.IsNullable = true;
				colvarCreatedOn.IsPrimaryKey = false;
				colvarCreatedOn.IsForeignKey = false;
				colvarCreatedOn.IsReadOnly = false;
				colvarCreatedOn.DefaultSetting = @"";
				colvarCreatedOn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedOn);
				
				TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
				colvarCreatedBy.ColumnName = "CreatedBy";
				colvarCreatedBy.DataType = DbType.AnsiString;
				colvarCreatedBy.MaxLength = 50;
				colvarCreatedBy.AutoIncrement = false;
				colvarCreatedBy.IsNullable = true;
				colvarCreatedBy.IsPrimaryKey = false;
				colvarCreatedBy.IsForeignKey = false;
				colvarCreatedBy.IsReadOnly = false;
				colvarCreatedBy.DefaultSetting = @"";
				colvarCreatedBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedBy);
				
				TableSchema.TableColumn colvarModifiedOn = new TableSchema.TableColumn(schema);
				colvarModifiedOn.ColumnName = "ModifiedOn";
				colvarModifiedOn.DataType = DbType.DateTime;
				colvarModifiedOn.MaxLength = 0;
				colvarModifiedOn.AutoIncrement = false;
				colvarModifiedOn.IsNullable = true;
				colvarModifiedOn.IsPrimaryKey = false;
				colvarModifiedOn.IsForeignKey = false;
				colvarModifiedOn.IsReadOnly = false;
				colvarModifiedOn.DefaultSetting = @"";
				colvarModifiedOn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifiedOn);
				
				TableSchema.TableColumn colvarModifiedBy = new TableSchema.TableColumn(schema);
				colvarModifiedBy.ColumnName = "ModifiedBy";
				colvarModifiedBy.DataType = DbType.AnsiString;
				colvarModifiedBy.MaxLength = 50;
				colvarModifiedBy.AutoIncrement = false;
				colvarModifiedBy.IsNullable = true;
				colvarModifiedBy.IsPrimaryKey = false;
				colvarModifiedBy.IsForeignKey = false;
				colvarModifiedBy.IsReadOnly = false;
				colvarModifiedBy.DefaultSetting = @"";
				colvarModifiedBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifiedBy);
				
				TableSchema.TableColumn colvarDeleted = new TableSchema.TableColumn(schema);
				colvarDeleted.ColumnName = "Deleted";
				colvarDeleted.DataType = DbType.Boolean;
				colvarDeleted.MaxLength = 0;
				colvarDeleted.AutoIncrement = false;
				colvarDeleted.IsNullable = true;
				colvarDeleted.IsPrimaryKey = false;
				colvarDeleted.IsForeignKey = false;
				colvarDeleted.IsReadOnly = false;
				colvarDeleted.DefaultSetting = @"";
				colvarDeleted.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDeleted);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["PowerPOS"].AddSchema("OrderDetAttributes",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("OrderDetAttributesID")]
		[Bindable(true)]
		public string OrderDetAttributesID 
		{
			get { return GetColumnValue<string>(Columns.OrderDetAttributesID); }
			set { SetColumnValue(Columns.OrderDetAttributesID, value); }
		}
		  
		[XmlAttribute("OrderDetID")]
		[Bindable(true)]
		public string OrderDetID 
		{
			get { return GetColumnValue<string>(Columns.OrderDetID); }
			set { SetColumnValue(Columns.OrderDetID, value); }
		}
		  
		[XmlAttribute("AttributesCode")]
		[Bindable(true)]
		public string AttributesCode 
		{
			get { return GetColumnValue<string>(Columns.AttributesCode); }
			set { SetColumnValue(Columns.AttributesCode, value); }
		}
		  
		[XmlAttribute("UserField1")]
		[Bindable(true)]
		public string UserField1 
		{
			get { return GetColumnValue<string>(Columns.UserField1); }
			set { SetColumnValue(Columns.UserField1, value); }
		}
		  
		[XmlAttribute("UserField2")]
		[Bindable(true)]
		public string UserField2 
		{
			get { return GetColumnValue<string>(Columns.UserField2); }
			set { SetColumnValue(Columns.UserField2, value); }
		}
		  
		[XmlAttribute("UserField3")]
		[Bindable(true)]
		public string UserField3 
		{
			get { return GetColumnValue<string>(Columns.UserField3); }
			set { SetColumnValue(Columns.UserField3, value); }
		}
		  
		[XmlAttribute("UserField4")]
		[Bindable(true)]
		public string UserField4 
		{
			get { return GetColumnValue<string>(Columns.UserField4); }
			set { SetColumnValue(Columns.UserField4, value); }
		}
		  
		[XmlAttribute("UserField5")]
		[Bindable(true)]
		public string UserField5 
		{
			get { return GetColumnValue<string>(Columns.UserField5); }
			set { SetColumnValue(Columns.UserField5, value); }
		}
		  
		[XmlAttribute("CreatedOn")]
		[Bindable(true)]
		public DateTime? CreatedOn 
		{
			get { return GetColumnValue<DateTime?>(Columns.CreatedOn); }
			set { SetColumnValue(Columns.CreatedOn, value); }
		}
		  
		[XmlAttribute("CreatedBy")]
		[Bindable(true)]
		public string CreatedBy 
		{
			get { return GetColumnValue<string>(Columns.CreatedBy); }
			set { SetColumnValue(Columns.CreatedBy, value); }
		}
		  
		[XmlAttribute("ModifiedOn")]
		[Bindable(true)]
		public DateTime? ModifiedOn 
		{
			get { return GetColumnValue<DateTime?>(Columns.ModifiedOn); }
			set { SetColumnValue(Columns.ModifiedOn, value); }
		}
		  
		[XmlAttribute("ModifiedBy")]
		[Bindable(true)]
		public string ModifiedBy 
		{
			get { return GetColumnValue<string>(Columns.ModifiedBy); }
			set { SetColumnValue(Columns.ModifiedBy, value); }
		}
		  
		[XmlAttribute("Deleted")]
		[Bindable(true)]
		public bool? Deleted 
		{
			get { return GetColumnValue<bool?>(Columns.Deleted); }
			set { SetColumnValue(Columns.Deleted, value); }
		}
		
		#endregion
		
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a Attribute ActiveRecord object related to this OrderDetAttribute
		/// 
		/// </summary>
		public PowerPOS.Attribute Attribute
		{
			get { return PowerPOS.Attribute.FetchByID(this.AttributesCode); }
			set { SetColumnValue("AttributesCode", value.AttributesCode); }
		}
		
		
		/// <summary>
		/// Returns a OrderDet ActiveRecord object related to this OrderDetAttribute
		/// 
		/// </summary>
		public PowerPOS.OrderDet OrderDet
		{
			get { return PowerPOS.OrderDet.FetchByID(this.OrderDetID); }
			set { SetColumnValue("OrderDetID", value.OrderDetID); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varOrderDetAttributesID,string varOrderDetID,string varAttributesCode,string varUserField1,string varUserField2,string varUserField3,string varUserField4,string varUserField5,DateTime? varCreatedOn,string varCreatedBy,DateTime? varModifiedOn,string varModifiedBy,bool? varDeleted)
		{
			OrderDetAttribute item = new OrderDetAttribute();
			
			item.OrderDetAttributesID = varOrderDetAttributesID;
			
			item.OrderDetID = varOrderDetID;
			
			item.AttributesCode = varAttributesCode;
			
			item.UserField1 = varUserField1;
			
			item.UserField2 = varUserField2;
			
			item.UserField3 = varUserField3;
			
			item.UserField4 = varUserField4;
			
			item.UserField5 = varUserField5;
			
			item.CreatedOn = varCreatedOn;
			
			item.CreatedBy = varCreatedBy;
			
			item.ModifiedOn = varModifiedOn;
			
			item.ModifiedBy = varModifiedBy;
			
			item.Deleted = varDeleted;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(string varOrderDetAttributesID,string varOrderDetID,string varAttributesCode,string varUserField1,string varUserField2,string varUserField3,string varUserField4,string varUserField5,DateTime? varCreatedOn,string varCreatedBy,DateTime? varModifiedOn,string varModifiedBy,bool? varDeleted)
		{
			OrderDetAttribute item = new OrderDetAttribute();
			
				item.OrderDetAttributesID = varOrderDetAttributesID;
			
				item.OrderDetID = varOrderDetID;
			
				item.AttributesCode = varAttributesCode;
			
				item.UserField1 = varUserField1;
			
				item.UserField2 = varUserField2;
			
				item.UserField3 = varUserField3;
			
				item.UserField4 = varUserField4;
			
				item.UserField5 = varUserField5;
			
				item.CreatedOn = varCreatedOn;
			
				item.CreatedBy = varCreatedBy;
			
				item.ModifiedOn = varModifiedOn;
			
				item.ModifiedBy = varModifiedBy;
			
				item.Deleted = varDeleted;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn OrderDetAttributesIDColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn OrderDetIDColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn AttributesCodeColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn UserField1Column
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn UserField2Column
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn UserField3Column
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn UserField4Column
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn UserField5Column
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedOnColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedByColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifiedOnColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifiedByColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn DeletedColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string OrderDetAttributesID = @"OrderDetAttributesID";
			 public static string OrderDetID = @"OrderDetID";
			 public static string AttributesCode = @"AttributesCode";
			 public static string UserField1 = @"UserField1";
			 public static string UserField2 = @"UserField2";
			 public static string UserField3 = @"UserField3";
			 public static string UserField4 = @"UserField4";
			 public static string UserField5 = @"UserField5";
			 public static string CreatedOn = @"CreatedOn";
			 public static string CreatedBy = @"CreatedBy";
			 public static string ModifiedOn = @"ModifiedOn";
			 public static string ModifiedBy = @"ModifiedBy";
			 public static string Deleted = @"Deleted";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
